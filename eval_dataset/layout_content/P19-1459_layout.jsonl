{"layout": 0, "type": "text", "text": "Probing Neural Network Comprehension of Natural Language Arguments ", "text_level": 1, "page_idx": 0, "bbox": [70, 64, 528, 83], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 1, "type": "text", "text": "Timothy Niven  and  Hung-Yu Kao ", "page_idx": 0, "bbox": [215.11599731445312, 90.1800537109375, 385.41705322265625, 105.7337646484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 2, "type": "text", "text": "Intelligent Knowledge Management Lab Department of Computer Science and Information Engineering National Cheng Kung University Tainan, Taiwan tim.niven.public@gmail.com ,  hykao@mail.ncku.edu.tw ", "page_idx": 0, "bbox": [126.61701965332031, 115.4674301147461, 476.90380859375, 185.66445922851562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 3, "type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0, "bbox": [158, 206, 204, 218], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 4, "type": "text", "text": "We are surprised to ﬁnd that BERT’s peak per- formance of   $77\\%$   on the Argument Reasoning Comprehension Task reaches just three points below the average untrained human baseline. However, we show that this result is entirely accounted for by exploitation of spurious sta- tistical cues in the dataset. We analyze the nature of these cues and demonstrate that a range of models all exploit them. This anal- ysis informs the construction of an adversarial dataset on which all models achieve random accuracy. Our adversarial dataset provides a more robust assessment of argument compre- hension and should be adopted as the standard in future work. ", "page_idx": 0, "bbox": [89, 231.4385986328125, 273, 410.8155517578125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 5, "type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0, "bbox": [72, 425, 155, 438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 6, "type": "text", "text": "Argumentation mining is the task of determin- ing argumentative structure in natural language text - e.g., which text segments represent claims, and which comprise reasons that support or attack those claims ( Mochales and Moens ,  2011 ;  Lippi and Torroni ,  2016 ). This is a challenging task for machine learners, as it can be hard even for hu- mans to determine when two text segments stand in argumentative relation, as evidenced by studies on argument annotation ( Habernal et al. ,  2014 ). ", "page_idx": 0, "bbox": [72, 447.7630310058594, 290, 582.8515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 7, "type": "text", "text": "One approach to this problem is to focus on warrants  ( Toulmin ,  1958 ) - a form of world knowledge that permit inferences. Consider a sim- ple argument: “(1) It is raining; therefore (2) you should take an umbrella.” 1 The warrant “(3) it is bad to get wet” could license this inference. Knowing (3) facilitates drawing the inferential connection between (1) and (2). However it would be hard to ﬁnd it stated anywhere since warrants are most often left implicit ( Walton ,  2005 ). Thus, on this approach, machine learners must not only reason with warrants but also discover them. ", "page_idx": 0, "bbox": [72, 583.9721069335938, 290, 746.1585083007812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 8, "type": "text", "text": "Claim Google is not a harmful monopoly Reason People can choose not to use Google Warrant Other search engines don’t redirect to Google Alternative  All other search engines redirect to Google ", "page_idx": 0, "bbox": [313, 203.9032440185547, 525, 245.45652770996094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 9, "type": "text", "text": "Reason  (and since)  Warrant  $\\rightarrow$  Reason  (but since)  Alternative  $\\rightarrow\\,\\neg\\,\\mathbf{C l a i m}$  ", "page_idx": 0, "bbox": [336.8489685058594, 251.9242401123047, 497, 273.551513671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 10, "type": "text", "text": "Figure 1: An example of a data point from the ARCT test set and how it should be read. The inference from  $R$   and  $A$   to  $\\neg C$   is by design. ", "page_idx": 0, "bbox": [306, 286.1925048828125, 525, 322.10845947265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 11, "type": "text", "text": "The Argument Reasoning Comprehension Task (ARCT) ( Habernal et al. ,  2018a ) defers the prob- lem of discovering warrants and focuses on in- ference. An argument is provided, comprising a claim    $C$   and reason    $R$  . This task is to pick the cor- rect warrant    $W$   over a distractor, called the  alter- native warrant    $A$  . The alternative is written such that    $R\\,\\wedge\\,A\\;\\to\\;\\neg C$  . An alternative warrant for our earlier example could be “(4) it is good to get wet,” in which case we have   $(1)\\land(4)\\rightarrow\\mathfrak{C}(\\lnot2)$   you shouldn’t take an umbrella.” An example from the dataset is given in Figure 1. ", "page_idx": 0, "bbox": [306, 345.054931640625, 525, 507.2414855957031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 12, "type": "text", "text": "The ARCT SemEval shared task ( Habernal et al. ,  2018b ) veriﬁed the challenging nature of this problem. Even supplying warrants, learners still need to rely on further world knowledge. For example, to correctly classify the data point in Fig- ure 1 it is at least required to know how consumer choice and web re-directs relate to the concept of monopoly, and that Google is a search engine. All but one participating system in the shared task could not exceed  $60\\%$   accuracy (on binary classi- ﬁcation). ", "page_idx": 0, "bbox": [306, 508.322998046875, 525, 656.96044921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 13, "type": "text", "text": "It is therefore surprising that BERT ( Devlin et al. ,  2018 ) achieves    $77\\%$   test set accuracy with its best run (Table 1), only three points below the average (untrained) human baseline. Without sup- plying the required world knowledge for this task it does not seem reasonable to expect it to perform so well. This motivates the question: what has BERT learned about argument comprehension? ", "page_idx": 0, "bbox": [306, 658.041015625, 525, 766.031494140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 14, "type": "table", "page_idx": 1, "img_path": "layout_images/P19-1459_0.jpg", "bbox": [121, 61, 476, 165], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Dev\n\nTest\n\nMean Median Max\nHuman (trained)\nHuman (untrained)\nBERT (Large) 0.701 + 0.05 0.712 0.770\nGIST (Choi and Lee, 2018) 0.716 + 0.01\nBERT (Base) 0.680 + 0.02 0.651 0.685\nWorld Knowledge (Botschen et al., 2018) | 0.674 + 0.01 0.610\nBoV 0.639 + 0.02 0.569 = 0.595\nBiLSTM 0.658 + 0.01 0.552 0.592\n\n", "vlm_text": "The table compares the performance of different models and humans on a development (Dev) and test set. The metrics provided for each are mean (with error), median, and maximum scores. Here's a breakdown:\n\n- **Human (trained)** and **Human (untrained)** are the top two rows, likely indicating benchmark human performance.\n- Various models follow, including **BERT (Large)**, **GIST**, **BERT (Base)**, **World Knowledge**, **BoV**, and **BiLSTM**.\n- The performance is measured in terms of mean scores for both the Dev and Test sets, with the test set also including median and max scores.\n- The **GIST** model shows the highest mean performance on the Dev set and is competitive on the Test set.\n- **BERT (Large)** has the best median and max scores on the Test set, indicating strong performance.\n\nThis table likely benchmarks the performance of AI models on a specific task, comparing them against human baselines."}
{"layout": 15, "type": "text", "text": "Table 1: Baselines and BERT results. Our results com m 20 different random seeds (  $\\pm$   gives the standard deviation). The mean for BERT Large is skewed by the  $5/20$   random seeds for which it failed to train, a problem noted by  Devlin et al.  ( 2018 ). We therefore consider the median a better measure of BERT’s average performance. The mean of the non-degenerate runs for BERT (Large) is    $0.716\\pm0.04$  . ", "page_idx": 1, "bbox": [71, 177.737548828125, 525, 225.60752868652344], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 16, "type": "image", "page_idx": 1, "img_path": "layout_images/P19-1459_1.jpg", "img_caption": "Figure 2: General architecture of the models in our experiments. Logits are independently calculated for each argument-warrant pair then concatenated and passed through softmax. ", "bbox": [70, 244, 292, 431], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "", "vlm_text": "The image depicts the general architecture of a model used in the experiments described in the accompanying caption. \n\n- At the bottom, there are two groups of elements labeled with the letters 'c', 'r', 'w0', and 'w1'. These represent different components in the model architecture: 'c' for claim, 'r' for reason, and 'w0' and 'w1' for two different warrants.\n- Each group has a bracket indicating that these elements are combined in some way to form independent argument-warrant pairs.\n- The pairs are processed by a function or mechanism represented by θ (theta), which outputs logits labeled as 'z0' and 'z1'.\n- These logits are then concatenated and passed through a Softmax layer at the top of the diagram. \n\nThis architecture allows the model to independently calculate logits for each argument-warrant pair before combining them for a final prediction."}
{"layout": 17, "type": "text", "text": "To investigate BERT’s decision making we looked at data points it ﬁnds easy to classify over multiple runs.  Habernal et al.  ( 2018b ) performed a similar analysis with the SemEval submissions, and consistent with their results we found that BERT exploits the presence of cue words in the warrant, especially “not.” Through probing exper- iments designed to isolate such effects, we demon- strate in this work that BERT’s surprising perfor- mance can be entirely accounted for in terms of exploiting spurious statistical cues. ", "page_idx": 1, "bbox": [72, 454.1149597167969, 290, 602.75244140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 18, "type": "text", "text": "However, we show that the major problem can be eliminated in ARCT. Since    $R\\wedge A\\to\\lnot C$  , we can add a copy of each data point with the claim negated and the label inverted. This means that the distribution of statistical cues in the warrants will be mirrored over both labels, eliminating the signal. On this adversarial dataset all models per- form randomly, with BERT achieving a maximum test set accuracy of    $53\\%$  . The adversarial dataset therefore provides a more robust evaluation of ar- gument comprehension and should be adopted as the standard in future work on this dataset. ", "page_idx": 1, "bbox": [72, 603.8450317382812, 290, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 19, "type": "text", "text": "2 Task Description and Baselines ", "text_level": 1, "page_idx": 1, "bbox": [307, 247, 484, 260], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 20, "type": "text", "text": "Let    $i\\,=\\,1,\\dots,n$   index each point in the dataset  $\\mathcal{D}$  , where    $|\\mathcal{D}|\\,=\\,n$  . The two candidate warrants in each case are randomly assigned a binary label  $j\\in\\{0,1\\}$  , such that each has an equal probability of being correct. The inputs are the representations for the claim    $\\mathbf{c}^{(i)}$  , reason    $\\mathbf{r}^{(i)}$  , warrant zero    $\\mathbf{w}_{0}^{(i)}$  , and warrant one    $\\mathbf{w}_{1}^{(i)}$  . The label    $y^{(i)}$   is a binary indicator corresponding to the correct warrant. ", "page_idx": 1, "bbox": [306, 268.6529541015625, 525, 380.4774475097656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 21, "type": "text", "text": "The general architecture for all models is given in Figure 2. Shared parameters    $\\pmb{\\theta}$   are learned to classify each warrant independently with the ar- gument, yielding the logits: ", "page_idx": 1, "bbox": [306, 381.0999755859375, 525, 434.8924865722656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 22, "type": "equation", "text": "\n$$\nz_{j}^{(i)}=\\pmb\\theta[\\pmb{c}^{(i)};\\pmb{r}^{(i)};\\pmb{w}_{j}^{(i)}]\n$$\n ", "text_format": "latex", "page_idx": 1, "bbox": [363, 443, 469, 464], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 23, "type": "text", "text": "These are then concatenated and passed through softmax to determine a probability distribution over the two warrants    $\\mathbf{p}^{(i)}\\!\\stackrel{\\cdot}{=}\\!\\mathrm{softmax}\\!\\big([z_{0}^{(i)},z_{1}^{(i)}]\\big)$  . The prediction is then  $\\hat{y}^{(i)}=\\arg\\operatorname*{max}_{j}\\mathbf{p}^{(i)}$  . ", "page_idx": 1, "bbox": [306, 473.6100158691406, 525, 530], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 24, "type": "text", "text": "The baselines are a bag of vectors   $\\mathrm{(BoV)}$  , bidirectional LSTM ( Hochreiter and Schmidhu- ber ,  1997 ) (BiLSTM), the SemEval winner GIST ( Choi and Lee ,  2018 ), the best model of  Botschen et al.  ( 2018 ), and human performance (Table 1). For all of our experiments we use grid search to se- lect hyperparameters, dropout regularization ( Sri- vastava et al. ,  2014 ), and Adam ( Kingma and Ba , 2014 ) for optimization. We anneal the learning rate by    $1/10$   when validation accuracy drops. The ﬁnal parameters come from the epoch with maxi- mum validation accuracy. The BoV and BiLSTM inputs are  300 -dimensional GloVe embeddings trained on  640 B tokens ( Pennington et al. ,  2014 ). Code to reproduce all experiments, and detailing all hyperparameters, is provided on GitHub. ", "page_idx": 1, "bbox": [306, 529.5609741210938, 525, 745.9444580078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 25, "type": "image", "page_idx": 2, "img_path": "layout_images/P19-1459_2.jpg", "bbox": [116, 62, 482, 272], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "BERT\n\nlel le) See) =\n©@ 66 666 6\n\nClaim Reason Warrant\n", "vlm_text": "This image is a diagram illustrating the architecture of a BERT model used for processing input data. It shows how claims, reasons, and warrants are tokenized and input into the BERT model. The tokens are labeled and encoded, going through various layers marked by interconnected nodes representing the deep connections within BERT. The different sections are separated by special tokens like [CLS] and [SEP] to signify classification and separation tasks in natural language processing."}
{"layout": 26, "type": "text", "text": "Figure 3: Processing an argument-warrant pair with BERT. The reason (with word pieces of length    $a$  ) and claim (length  b ) together form the ﬁrst utterance, and the warrant (length  $c$  ) is the second. The ﬁnal CLS vector is then passed to a linear layer to calculate the logit  $z_{j}^{(i)}$  . ", "page_idx": 2, "bbox": [72, 290.5965576171875, 525, 330], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 27, "type": "text", "text": "3 BERT ", "text_level": 1, "page_idx": 2, "bbox": [71, 349, 123, 362], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 28, "type": "text", "text": "Our BERT classiﬁer is visualized in Figure 3. The claim and reason are joined to form the ﬁrst text segment, which is paired with each warrant and in- dependently processed. The ﬁnal layer CLS vector is passed to a linear layer to obtain the logits  $z_{j}^{(i)}$  . The whole architecture is ﬁne-tuned. The learning rate is    $2e^{-5}$    and we allow a maximum of  20  train- ing epochs, taking the parameters from the epoch with the best validation set accuracy. We use the Hugging Face PyTorch implementation. ", "page_idx": 2, "bbox": [71, 371.3260803222656, 291, 507.9505920410156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 29, "type": "text", "text": "Devlin et al. ( 2018 ) report that, on small datasets, BERT sometimes fails to train, yield- ing degenerate results. ARCT is very small with 1 ,  210  training observations. In  5 / 20  runs we en- countered this phenomenon, seeing close to ran- dom accuracies on validation and test sets. These cases occurred where training accuracy was also not signiﬁcantly above random   $(<80\\%)$  ). Remov- ing the degenerate runs, BERT’s mean is    $71.6\\pm$  0 . 04 ., which would beat the previous state of the art - as would the median of    $71.2\\%$  , which is a better average than the overall mean since it is not skewed by the degenerate cases. However, our main ﬁnding is that these results are not mean- ingful and should be discarded. In the following sections we focus on BERT’s peak performance of  $77\\%$   to make this case. ", "page_idx": 2, "bbox": [71, 508.41912841796875, 291, 738.3515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 30, "type": "text", "text": "4 Statistical Cues ", "text_level": 1, "page_idx": 2, "bbox": [306, 349, 404, 363], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 31, "type": "text", "text": "The major source of spurious statistical cues in ARCT comes from uneven distributions of lin- guistic artifacts over the warrants, and therefore over the labels. This section aims to demonstrate the presence and nature of these cues. We only consider unigrams and bigrams, although more so- phisticated cues may be present. To this end, we aim to calculate how beneﬁcial it is for a model to exploit a cue    $k$  , and how pervasive it is in the dataset (indicating the strength of the signal). ", "page_idx": 2, "bbox": [307, 370.9329833984375, 525, 506.0215148925781], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 32, "type": "text", "text": "Formally, let    $\\mathbb{T}_{j}^{(i)}$  be the set of tokens in the war- rant for data point    $i$   with label    $j$  . We deﬁne a cue’s  applicability  $\\alpha_{k}$   as the number of data points where it occurs with one label but not the other: ", "page_idx": 2, "bbox": [307, 505, 525, 561.7545166015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 33, "type": "equation", "text": "\n$$\n\\alpha_{k}=\\sum_{i=1}^{n}\\mathbb{1}\\left[\\exists j,k\\in\\mathbb{T}_{j}^{(i)}\\land k\\notin\\mathbb{T}_{\\neg j}^{(i)}\\right]\n$$\n ", "text_format": "latex", "page_idx": 2, "bbox": [333, 566, 499, 602], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 34, "type": "text", "text": "The  productivity    $\\pi_{k}$   of a cue is deﬁned as the pro- portion of applicable data points for which it pre- dicts the correct answer: ", "page_idx": 2, "bbox": [307, 609.6380004882812, 525, 649.8824462890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 35, "type": "equation", "text": "\n$$\n\\pi_{k}={\\frac{\\sum_{i=1}^{n}{\\mathbb{1}}\\left[\\exists j,k\\in\\mathbb{T}_{j}^{(i)}\\land k\\notin\\mathbb{T}_{\\neg j}^{(i)}\\land y_{i}=j\\right]}{\\alpha_{k}}}\n$$\n ", "text_format": "latex", "page_idx": 2, "bbox": [307, 654, 525, 692], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 36, "type": "text", "text": "Finally, we deﬁne the  coverage    $\\xi_{k}$   of a cue as the proportion of applicable cases over the total number of data points:    $\\xi_{k}~=~\\alpha_{k}/n$  . In these terms, the productivity of a cue measures the ben- eﬁt of exploiting it, while coverage measures the ", "page_idx": 2, "bbox": [307, 698.6890258789062, 525, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 37, "type": "table", "page_idx": 3, "img_path": "layout_images/P19-1459_3.jpg", "bbox": [100, 61, 262, 116], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Productivity | Coverage\nTrain 0.65 0.66\nValidation 0.62 0.44\nTest 0.52 0.77\nAll 0.61 0.64\n\n", "vlm_text": "The table presents the values of two metrics, Productivity and Coverage, across three datasets: Train, Validation, and Test. Additionally, it provides the average values for these metrics across all datasets. The data in the table is as follows:\n\n- For the Train dataset: Productivity is 0.65 and Coverage is 0.66.\n- For the Validation dataset: Productivity is 0.62 and Coverage is 0.44.\n- For the Test dataset: Productivity is 0.52 and Coverage is 0.77.\n\nThe overall averages for all datasets combined are:\n- Productivity: 0.61\n- Coverage: 0.64"}
{"layout": 38, "type": "text", "text": "Table 2: Productivity and coverage of using the pres- ence of “not” in the warrant to predict the label in ARCT. Across the whole dataset, if you pick the war- rant with “not” you will be right  $61\\%$   of the time, which covers    $64\\%$   of all data points. ", "page_idx": 3, "bbox": [71, 128.32257080078125, 290, 188.14854431152344], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 39, "type": "text", "text": "strength of the signal it provides. With    $m$   labels, if    $\\pi_{k}>1/m$   then the presence of a cue is going to be useful for the task and a machine learner would do well to make use of it. ", "page_idx": 3, "bbox": [71, 211.8910675048828, 290, 265.6845397949219], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 40, "type": "text", "text": "The productivity and coverage of the strongest unigram cue we found (“not”) is given in Table 2. It provides a particularly strong training sig- nal. While it is less productive in the test set, it is just one among many such cues. We found a range of other unigrams, albeit with less overall productivity, mostly being high frequency words such as “is,” “do,” and “are.” Bigrams that oc- curred with not, such as “will not” and “cannot,” were also found to be highly productive. These statistics indicate the nature of the problem. In the next section we demonstrate that our models are in fact exploiting these cues. ", "page_idx": 3, "bbox": [71, 267.1640625, 290, 442.8996276855469], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 41, "type": "text", "text": "5 Probing Experiments ", "text_level": 1, "page_idx": 3, "bbox": [71, 456, 200, 470], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 42, "type": "text", "text": "If a model is exploiting distributional cues over the labels, then if trained only on the warrants (W) it should perform relatively well. The same can be said for removing either just the claim, leaving the reason and warrant (R, W), or removing the reason (C, W). The latter setups allow the models to addi- tionally consider cues in the reasons and claims, as well as cues holding over their combinations with the warrants. Each of these setups breaks the task since we no longer have an argument to match with a warrant. ", "page_idx": 3, "bbox": [71, 480.826171875, 290, 629.4636840820312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 43, "type": "text", "text": "Experimental results are given in Table 3. On warrants alone (W) BERT achieves a maximum  $71\\%$   accuracy. That leaves only six percentage points to account for its peak of    $77\\%$  . We ﬁnd a gain of four percentage points for (R, W) over (W), and a gain of two for (C, W), accounting for the missing six points. Based on this evidence our major ﬁnding is that the entirety of BERT’s perfor- mance can be accounted for in terms of exploiting spurious statistical cues. ", "page_idx": 3, "bbox": [71, 630.9432373046875, 290, 766.0316162109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 44, "type": "table", "page_idx": 3, "img_path": "layout_images/P19-1459_4.jpg", "bbox": [314, 61, 520, 205], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Test\n\nMean Median Max\nBERT 0.671 + 0.09 0.712 ~~ (0.770\nBERT (W) 0.656 + 0.05 0.675 0.712\nBERT (R, W) 0.600+0.10 0.574 0.750\nBERT (C, W) 0.532 + 0.09 0.503 0.732\nBoV 0.564+ 0.02 0.569 0.595\nBoV (W) 0.567 + 0.02 0.572 0.606\nBoV (R, W) 0.554 + 0.02 0.557 0.579\nBoV (C, W) 0.545 + 0.02 0.544 (0.589\nBiLSTM 0.552 + 0.02 0.552 0.592\nBiLSTM (W) 0.550+0.02 0.547 0.577\nBiLSTM (R, W) | 0.547 + 0.02 0.551 0.577\nBiLSTM (C, W) | 0.552 + 0.02 0.550 (0.601\n\n", "vlm_text": "The table presents test performance metrics (Mean, Median, and Max) for different models and configurations. Here's a breakdown:\n\n- **BERT**\n  - Mean: 0.671 ± 0.09\n  - Median: 0.712\n  - Max: 0.770\n\n- **BERT (W)**\n  - Mean: 0.656 ± 0.05\n  - Median: 0.675\n  - Max: 0.712\n\n- **BERT (R, W)**\n  - Mean: 0.600 ± 0.10\n  - Median: 0.574\n  - Max: 0.750\n\n- **BERT (C, W)**\n  - Mean: 0.532 ± 0.09\n  - Median: 0.503\n  - Max: 0.732\n\n- **BoV**\n  - Mean: 0.564 ± 0.02\n  - Median: 0.569\n  - Max: 0.595\n\n- **BoV (W)**\n  - Mean: 0.567 ± 0.02\n  - Median: 0.572\n  - Max: 0.606\n\n- **BoV (R, W)**\n  - Mean: 0.554 ± 0.02\n  - Median: 0.557\n  - Max: 0.579\n\n- **BoV (C, W)**\n  - Mean: 0.545 ± 0.02\n  - Median: 0.544\n  - Max: 0.589\n\n- **BiLSTM**\n  - Mean: 0.552 ± 0.02\n  - Median: 0.552\n  - Max: 0.592\n\n- **BiLSTM (W)**\n  - Mean: 0.550 ± 0.02\n  - Median: 0.547\n  - Max: 0.577\n\n- **BiLSTM (R, W)**\n  - Mean: 0.547 ± 0.02\n  - Median: 0.551\n  - Max: 0.577\n\n- **BiLSTM (C, W)**\n  - Mean: 0.552 ± 0.02\n  - Median: 0.550\n  - Max: 0.601\n\nEach model's variation (W, R, C) likely indicates different settings or inputs used in the experiments."}
{"layout": 45, "type": "text", "text": "Table 3: Results of probing experiments with BERT Large, and the BoV and BiLSTM baselines. These re- sults indicate that BERT’s peak    $77\\%$   performance can be entirely accounted for by exploiting spurious cues. By just considering warrants (W) we can get to    $71\\%$  . Adding cues over reasons (R, W) and claims (C, W) accounts for the remaining six points. ", "page_idx": 3, "bbox": [307, 218.38458251953125, 525, 302.12060546875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 46, "type": "text", "text": "6 Adversarial Test Set ", "text_level": 1, "page_idx": 3, "bbox": [306, 324, 429, 337], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 47, "type": "text", "text": "The major problem of statistical cues over labels in ARCT can be eliminated due the original de- sign of the dataset. Given that    $R\\,\\wedge\\,A\\;\\rightarrow\\;\\neg C$  , we can produce adversarial examples by negat- ing the claim and inverting the label for each data point (Figure 4). The adversarial examples are then combined with the original data. This elim- inates the problem by mirroring the distributions of cues around both labels. The ARCT authors provide a training set augmented in this way. The negation of most claims in the validation and test sets already exist elsewhere in the dataset. The re- maining claims were manually negated by a native English speaker. ", "page_idx": 3, "bbox": [307, 346.0840759277344, 525, 535.36962890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 48, "type": "text", "text": "We tried two experimental setups. In the ﬁrst, models trained and validated on the original data were evaluated on the adversarial set. All results were worse than random due to overﬁtting the cues in the original training set. In the second, mod- els were trained from scratch on the adversarial training and validation sets, then evaluated on the adversarial test set. Results are given in Table 4. BERT’s peak performance has reduced to    $53\\%$  , with mean and median at    $50\\%$  . We conclude from these results that the adversarial dataset has suc- cessfully eliminated the cues as expected, provid- ing a more robust evaluation of machine argument comprehension. This result better apts with our intuitions about this task: with little to no under- standing about the reality underlying these argu- ments, good performance shouldn’t be feasible. ", "page_idx": 3, "bbox": [307, 536.0991821289062, 525, 766.0316162109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 49, "type": "table", "page_idx": 4, "img_path": "layout_images/P19-1459_5.jpg", "table_footnote": "Figure 4: Original and adversarial data points. The claim is negated and the warrants are swapped. The assignment of labels to  $W$   and    $A$   are kept the same. By including both, the distribution of linguistic artifacts in the warrants are thereby mirrored around the labels, eliminating the major source of spurious statistical cues in ARCT. ", "bbox": [70, 62, 527, 182], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Original\n\nAdversarial\n\nClaim\nReason\nWarrant\nAlternative\n\nGoogle is not a harmful monopoly\nPeople can choose not to use Google\nOther search engines do not redirect to Google\n\nAll other search engines redirect to Google\n\nGoogle is a harmful monopoly\nPeople can choose not to use Google\nAll other search engines redirect to Google\n\nOther search engines do not redirect to Google\n\n", "vlm_text": "The table presents a comparison between \"Original\" and \"Adversarial\" viewpoints concerning whether Google is a harmful monopoly.\n\n1. **Claim**:\n   - Original: Google is not a harmful monopoly.\n   - Adversarial: Google is a harmful monopoly.\n\n2. **Reason**:\n   - Both viewpoints state that people can choose not to use Google.\n\n3. **Warrant**:\n   - Original: Other search engines do not redirect to Google.\n   - Adversarial: All other search engines redirect to Google.\n\n4. **Alternative**:\n   - Original: All other search engines redirect to Google.\n   - Adversarial: Other search engines do not redirect to Google."}
{"layout": 50, "type": "text", "text": "7 Related Work ", "text_level": 1, "page_idx": 4, "bbox": [70, 202, 162, 216], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 51, "type": "text", "text": "The most successful previous work on ARCT ( Choi and Lee ,  2018 ;  Zhao et al. ,  2018 ;  Niven and Kao ,  2018 ) involved transfer learning from Natu- ral Language Inference (NLI) datasets ( Bowman et al. ,  2015 ;  Williams et al. ,  2017 ), and utilized effective NLI models such as ESIM ( Chen et al. , 2016 ) and InferSent ( Conneau et al. ,  2017 ). More recently,  Botschen et al.  ( 2018 ) added FrameNet knowledge with modest performance gains. These models should be evaluated on our adversarial dataset. In particular it will be interesting if Botschen et al. ’s model stands out due to the in- clusion of some of the required world knowledge. ", "page_idx": 4, "bbox": [71, 224.38197326660156, 290, 400.1175231933594], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 52, "type": "text", "text": "There is much recent work focusing on statis- tical cues in datasets in vision ( Jo and Bengio , 2017 ) and NLP ( Sanchez et al. ,  2018 ;  McCoy et al. ,  2019 ;  Gururangan et al. ,  2018 ;  Glockner et al. ,  2018 ;  Poliak et al. ,  2018 ;  Rajpurkar et al. , 2018 ;  Jia and Liang ,  2017 ). Similar to our exper- iment with warrants,  Poliak et al.  ( 2018 ) classi- ﬁed NLI data based on the hypothesis only. A similar experiment to our probing task was per- formed by  Niven and Kao  ( 2018 ), but only with reasons and warrants. They found that indepen- dent warrant classiﬁcation with shared parameters provides some regularization against warrant-label cues ( Niven and Kao ,  2018 ). However, this does not solve the problem since the presence of a cue is enough to increase the logits for either warrant. ", "page_idx": 4, "bbox": [71, 400.5640563964844, 290, 616.9475708007812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 53, "type": "text", "text": "The original ARCT data comes with a  train- ing  set created in the same way as our adversarial dataset.  Habernal et al.  ( 2018a ) reported experi- ments using this training data that led to random accuracy. They suggested it could be that high similarity between the data points made the prob- lem too difﬁcult for the simple models they imple- mented. Our work indicates the necessity of ap- plying this transformation to the entire dataset in order to obtain a more robust evaluation by elimi- nating spurious statistical cues over the labels. ", "page_idx": 4, "bbox": [71, 617.3941040039062, 290, 766.0315551757812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 54, "type": "table", "page_idx": 4, "img_path": "layout_images/P19-1459_6.jpg", "bbox": [318, 200, 515, 265], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Test\n\nMedian Max\nBERT 0.505 0.533\nBERT (W) 0.501 0.502\nBERT (R, W) 0.500 = 0.502\nBERT (C, W) 0.500 0.518\n\n", "vlm_text": "The table presents a comparison of the performance metrics for different BERT models, namely \"BERT\", \"BERT (W)\", \"BERT (R, W)\", and \"BERT (C, W)\", based on their test performance.\n\nThe metrics displayed in the table are:\n- Mean: The average performance of each model. \n  - BERT: 0.504 ± 0.01\n  - BERT (W): 0.501 ± 0.00\n  - BERT (R, W): 0.500 ± 0.00\n  - BERT (C, W): 0.501 ± 0.01\n\n- Median: The median performance score for each model during testing.\n  - BERT: 0.505\n  - BERT (W): 0.501\n  - BERT (R, W): 0.500\n  - BERT (C, W): 0.500\n\n- Max: The maximum performance score each model achieved during testing.\n  - BERT: 0.533\n  - BERT (W): 0.502\n  - BERT (R, W): 0.502\n  - BERT (C, W): 0.518\n\nThe values in bold indicate the highest performance among the metrics compared."}
{"layout": 55, "type": "text", "text": "Table 4: Results for BERT Large on the adversarial test set with adversarial training and validation sets. ", "page_idx": 4, "bbox": [307, 277.56256103515625, 525, 301.52349853515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 56, "type": "text", "text": "8 Conclusion ", "text_level": 1, "page_idx": 4, "bbox": [306, 322, 384, 335], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 57, "type": "text", "text": "ARCT provides a fortuitous opportunity to see how stark the problem of exploiting spurious statistics can be. Due to our ability to eliminate the major source of these cues, we were able to show that BERT’s maximum performance fell from just three points below the average untrained human baseline to essentially random. To answer our question in the introduction: BERT has learned nothing about argument comprehension. ", "page_idx": 4, "bbox": [307, 342.84600830078125, 525, 464.3845520019531], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 58, "type": "text", "text": "However, our investigations conﬁrmed that BERT is indeed a very strong learner. Analysis of easy to classify data points showed reliance on a  lower  proportion of the strongest cue word than the BoV and BiLSTM - i.e. BERT has learned when to ignore the presence of “not” and focus on different cues. This indicates an ability to exploit much more subtle joint distributional information. As our learners get stronger, controlling for spu- rious statistics becomes more important in order to have conﬁdence in their apparent performance. Taken with a growing body of previous work, our results indicate the need for further research into the extent of this problem in NLP more generally. ", "page_idx": 4, "bbox": [307, 464.7890625, 525, 654.0735473632812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 59, "type": "text", "text": "The adversarial dataset should be adopted as the standard in future work on ARCT. We hope that providing a more robust evaluation will help to spur more productive research on this problem. ", "page_idx": 4, "bbox": [307, 654.4771118164062, 525, 708.2705688476562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 60, "type": "text", "text": "Acknowledgments ", "text_level": 1, "page_idx": 4, "bbox": [307, 718, 401, 732], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 61, "type": "text", "text": "We would like to thank Ivan Habernal, and the re- viewers, for their helpful comments. ", "page_idx": 4, "bbox": [307, 739.3370971679688, 525, 766.0315551757812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 62, "type": "text", "text": "References ", "text_level": 1, "page_idx": 5, "bbox": [71, 64, 128, 75], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 63, "type": "text", "text": "Elizabeth Black and Anthony Hunter. 2012. A relevance-theoretic framework for constructing and deconstructing enthymemes . J. Log. Comput. , 22:55–78. Teresa Botschen, Daniil Sorokin, and Iryna Gurevych. 2018. Frame- and entity-based knowledge for common-sense argumentative reasoning. In ArgMining@EMNLP . Samuel R. Bowman, Gabor Angeli, Christopher Potts, and Christopher D. Manning. 2015.  A large anno- tated corpus for learning natural language inference . CoRR , abs/1508.05326. Qian Chen, Xiaodan Zhu, Zhen-Hua Ling, Si Wei, and Hui Jiang. 2016.  Enhancing and combining sequen- tial and tree LSTM for natural language inference . CoRR , abs/1609.06038. HongSeok Choi and Hyunju Lee. 2018. Gist at semeval-2018 task 12: A network transferring infer- ence knowledge to argument reasoning comprehen- sion task . In  Proceedings of The 12th International Workshop on Semantic Evaluation , pages 773–777. Association for Computational Linguistics. Alexis Conneau, Douwe Kiela, Holger Schwenk, Lo¨ ıc Barrault, and Antoine Bordes. 2017. Su- pervised learning of universal sentence representa- tions from natural language inference data .  CoRR , abs/1705.02364. Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. 2018. BERT: pre-training of deep bidirectional transformers for language under- standing .  CoRR , abs/1810.04805. Max Glockner, Vered Shwartz, and Yoav Goldberg. 2018. Breaking NLI systems with sentences that require simple lexical inferences . CoRR , abs/1805.02266. Suchin Gururangan, Swabha Swayamdipta, Omer Levy, Roy Schwartz, Samuel R. Bowman, and Noah A. Smith. 2018.  Annotation artifacts in natu- ral language inference data .  CoRR , abs/1803.02324. Ivan Habernal, Judith Eckle-Kohler, and Iryna Gurevych. 2014. Argumentation mining on the web from information seeking perspective. In  ArgNLP . Ivan Habernal, Henning Wachsmuth, Iryna Gurevych, and Benno Stein. 2018a.  The argument reasoning comprehension task: Identiﬁcation and reconstruc- tion of implicit warrants . In  Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long Papers) , pages 1930–1940, New Orleans, Louisiana. Asso- ciation for Computational Linguistics. Ivan Habernal, Henning Wachsmuth, Iryna Gurevych, and Benno Stein. 2018b. Semeval-2018 task 12: ", "page_idx": 5, "bbox": [72, 82.3985595703125, 290, 765.76513671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 64, "type": "text", "text": "The argument reasoning comprehension task . In Proceedings of The 12th International Workshop on Semantic Evaluation , pages 763–772. Association for Computational Linguistics. Sepp Hochreiter and J¨ urgen Schmidhuber. 1997. Long short-term memory. Neural computation , 9(8):1735–1780. Robin Jia and Percy Liang. 2017.  Adversarial exam- ples for evaluating reading comprehension systems . CoRR , abs/1707.07328. Jason Jo and Yoshua Bengio. 2017.  Measuring the ten- dency of cnns to learn surface statistical regularities . CoRR , abs/1711.11561. Diederik P. Kingma and Jimmy Ba. 2014. Adam: A method for stochastic optimization . CoRR , abs/1412.6980.Marco Lippi and Paolo Torroni. 2016.  Argumentation mining: State of the art and emerging trends .  ACM Trans. Internet Technol. , 16(2):10:1–10:25. R. Thomas McCoy, Ellie Pavlick, and Tal Linzen. 2019. Right for the wrong reasons: Diagnosing syntactic heuristics in natural language inference . CoRR , abs/1902.01007. Raquel Mochales and Marie-Francine Moens. 2011. Argumentation mining .  Artif. Intell. Law , 19(1):1– 22. Timothy Niven and Hung-Yu Kao. 2018. NLITrans at SemEval-2018 task 12: Transfer of semantic knowledge for argument comprehension . In  Pro- ceedings of The 12th International Workshop on Se- mantic Evaluation , pages 1099–1103, New Orleans, Louisiana. Association for Computational Linguis- tics. Jeffrey Pennington, Richard Socher, and Christo- pher D. Manning. 2014.  Glove: Global vectors for word representation . In  Empirical Methods in Nat- ural Language Processing (EMNLP) , pages 1532– 1543. Adam Poliak, Jason Naradowsky, Aparajita Haldar, Rachel Rudinger, and Benjamin Van Durme. 2018. Hypothesis only baselines in natural language infer- ence .  CoRR , abs/1805.01042. Pranav Rajpurkar, Robin Jia, and Percy Liang. 2018. Know what you don’t know: Unanswerable ques- tions for squad .  CoRR , abs/1806.03822. Ivan Sanchez, Jeff Mitchell, and Sebastian Riedel. 2018. Behavior analysis of NLI models: Uncov- ering the inﬂuence of three factors on robustness . In  Proceedings of the 2018 Conference of the North American Chapter of the Association for Computa- tional Linguistics: Human Language Technologies, Volume 1 (Long Papers) , pages 1975–1985, New Orleans, Louisiana. Association for Computational Linguistics. ", "page_idx": 5, "bbox": [307, 64.56121826171875, 525, 765.7638549804688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 65, "type": "text", "text": "Nitish Srivastava, Geoffrey Hinton, Alex Krizhevsky, Ilya Sutskever, and Ruslan Salakhutdinov. 2014. Dropout: A simple way to prevent neural networks from overﬁtting .  Journal of Machine Learning Re- search , 15:1929–1958. Stephen E. Toulmin. 1958. The Uses of Argument . Cambridge University Press. Douglas N. Walton. 2005. Informal logic: a hand- book of critical argumentation . Cambridge Univer- sity Press. Adina Williams, Nikita Nangia, and Samuel R. Bow- man. 2017.  A broad-coverage challenge corpus for sentence understanding through inference . CoRR , abs/1704.05426. Meiqian Zhao, Chunhua Liu, Lu Liu, Yan Zhao, and Dong Yu. 2018.  Blcu nlp at semeval-2018 task 12: An ensemble model for argument reasoning based on hierarchical attention . In  Proceedings of The 12th International Workshop on Semantic Evalua- tion , pages 1104–1108. Association for Computa- tional Linguistics. ", "page_idx": 6, "bbox": [72, 64.56158447265625, 290, 331.61041259765625], "page_size": [595.2760009765625, 841.8900146484375]}
