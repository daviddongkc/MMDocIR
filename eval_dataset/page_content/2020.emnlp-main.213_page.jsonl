{"page": 0, "image_path": "doc_images/2020.emnlp-main.213_0.jpg", "ocr_text": "CoMET: A Neural Framework for MT Evaluation\n\nRicardo Rei Craig Stewart\n\nAna C Farinha Alon Lavie\n\nUnbabel AI\n\n{ricardo.rei, craig.stewart, catarina.farinha, alon.lavie}@unbabel.com\n\nAbstract\n\nWe present COMET, a neural framework for\ntraining multilingual machine translation eval-\nuation models which obtains new state-of-the-\nart levels of correlation with human judge-\nments. Our framework leverages recent break-\nthroughs in cross-lingual pretrained language\nmodeling resulting in highly multilingual and\nadaptable MT evaluation models that exploit\ninformation from both the source input and a\ntarget-language reference translation in order\nto more accurately predict MT quality. To\nshowcase our framework, we train three mod-\nels with different types of human judgements:\nDirect Assessments, Human-mediated Trans-\nlation Edit Rate and Multidimensional Qual-\nity Metrics. Our models achieve new state-of-\nthe-art performance on the WMT 2019 Met-\nrics shared task and demonstrate robustness to\nhigh-performing systems.\n\n1 Introduction\n\nHistorically, metrics for evaluating the quality of\nmachine translation (MT) have relied on assessing\nthe similarity between an MT-generated hypothesis\nand a human-generated reference translation in the\ntarget language. Traditional metrics have focused\non basic, lexical-level features such as counting\nthe number of matching n-grams between the MT\nhypothesis and the reference translation. Metrics\nsuch as BLEU (Papineni et al., 2002) and METEOR\n(Lavie and Denkowski, 2009) remain popular as\na means of evaluating MT systems due to their\nlight-weight and fast computation.\n\nModern neural approaches to MT result in much\nhigher quality of translation that often deviates\nfrom monotonic lexical transfer between languages.\nFor this reason, it has become increasingly evident\nthat we can no longer rely on metrics such as BLEU\nto provide an accurate estimate of the quality of\nMT (Barrault et al., 2019).\n\nWhile an increased research interest in neural\nmethods for training MT models and systems has\nresulted in a recent, dramatic improvement in MT\nquality, MT evaluation has fallen behind. The MT\nresearch community still relies largely on outdated\nmetrics and no new, widely-adopted standard has\nemerged. In 2019, the WMT News Translation\nShared Task received a total of 153 MT system\nsubmissions (Barrault et al., 2019). The Metrics\nShared Task of the same year saw only 24 sub-\nmissions, almost half of which were entrants to the\nQuality Estimation Shared Task, adapted as metrics\n(Ma et al., 2019).\n\nThe findings of the above-mentioned task high-\nlight two major challenges to MT evaluation which\nwe seek to address herein (Ma et al., 2019).\nNamely, that current metrics struggle to accu-\nrately correlate with human judgement at seg-\nment level and fail to adequately differentiate\nthe highest performing MT systems.\n\nIn this paper, we present COMET!, a PyTorch-\nbased framework for training highly multilingual\nand adaptable MT evaluation models that can func-\ntion as metrics. Our framework takes advantage\nof recent breakthroughs in cross-lingual language\nmodeling (Artetxe and Schwenk, 2019; Devlin\net al., 2019; Conneau and Lample, 2019; Conneau\net al., 2019) to generate prediction estimates of hu-\nman judgments such as Direct Assessments (DA)\n(Graham et al., 2013), Human-mediated Transla-\ntion Edit Rate (HTER) (Snover et al., 2006) and\nmetrics compliant with the Multidimensional Qual-\nity Metric framework (Lommel et al., 2014).\n\nInspired by recent work on Quality Estimation\n(QE) that demonstrated that it is possible to achieve\nhigh levels of correlation with human judgements\neven without a reference translation (Fonseca et al.,\n2019), we propose a novel approach for incorporat-\n\n'Crosslingual\nTranslation.\n\nOptimized Metric for Evaluation of\n\n2685\n\nProceedings of the 2020 Conference on Empirical Methods in Natural Language Processing, pages 2685-2702,\nNovember 16-20, 2020. ©2020 Association for Computational Linguistics\n", "vlm_text": "C OMET : A Neural Framework for MT Evaluation \nRicardo Rei Craig Stewart Ana C Farinha Alon Lavie Unbabel AI \n{ ricardo.rei, craig.stewart, catarina.farinha, alon.lavie } @unbabel.com \nAbstract \nWe present C OMET , a neural framework for training multilingual machine translation eval- uation models which obtains new state-of-the- art levels of correlation with human judge- ments. Our framework leverages recent break- throughs in cross-lingual pretrained language modeling resulting in highly multilingual and adaptable MT evaluation models that exploit information from both the source input and a target-language reference translation in order to more accurately predict MT quality. To showcase our framework, we train three mod- els with different types of human judgements: Direct Assessments ,  Human-mediated Trans- lation Edit Rate  and  Multidimensional Qual- ity Metrics . Our models achieve new state-of- the-art performance on the WMT 2019 Met- rics shared task and demonstrate robustness to high-performing systems. \n1 Introduction \nHistorically, metrics for evaluating the quality of machine translation (MT) have relied on assessing the similarity between an MT-generated hypothesis and a human-generated reference translation in the target language. Traditional metrics have focused on basic, lexical-level features such as counting the number of matching n-grams between the MT hypothesis and the reference translation. Metrics such as B LEU  ( Papineni et al. ,  2002 ) and M ETEOR ( Lavie and Denkowski ,  2009 ) remain popular as a means of evaluating MT systems due to their light-weight and fast computation. \nModern neural approaches to MT result in much higher quality of translation that often deviates from monotonic lexical transfer between languages. For this reason, it has become increasingly evident that we can no longer rely on metrics such as B LEU to provide an accurate estimate of the quality of MT ( Barrault et al. ,  2019 ). \nWhile an increased research interest in neural methods for training MT models and systems has resulted in a recent, dramatic improvement in MT quality, MT evaluation has fallen behind. The MT research community still relies largely on outdated metrics and no new, widely-adopted standard has emerged. In 2019, the WMT News Translation Shared Task received a total of   $153~\\mathrm{MT}$   system submissions ( Barrault et al. ,  2019 ). The Metrics Shared Task of the same year saw only 24 sub- missions, almost half of which were entrants to the Quality Estimation Shared Task, adapted as metrics ( Ma et al. ,  2019 ). \nThe ﬁndings of the above-mentioned task high- light two major challenges to MT evaluation which we seek to address herein ( Ma et al. ,  2019 ). Namely, that current metrics  struggle to accu- rately correlate with human judgement at seg- ment level  and  fail to adequately differentiate the highest performing MT systems . \nIn this paper, we present C OMET 1 , a PyTorch- based framework for training highly multilingual and adaptable MT evaluation models that can func- tion as metrics. Our framework takes advantage of recent breakthroughs in cross-lingual language modeling ( Artetxe and Schwenk ,  2019 ;  Devlin et al. ,  2019 ;  Conneau and Lample ,  2019 ;  Conneau et al. ,  2019 ) to generate prediction estimates of hu- man judgments such as  Direct Assessments  (DA) ( Graham et al. ,  2013 ),  Human-mediated Transla- tion Edit Rate  (HTER) ( Snover et al. ,  2006 ) and metrics compliant with the  Multidimensional Qual- ity Metric  framework ( Lommel et al. ,  2014 ). \nInspired by recent work on Quality Estimation (QE) that demonstrated that it is possible to achieve high levels of correlation with human judgements even without a reference translation ( Fonseca et al. , 2019 ), we propose a novel approach for incorporat- ing the source-language input into our MT evalu- ation models. Traditionally only QE models have made use of the source input, whereas MT evalu- ation metrics rely instead on the reference transla- tion. As in ( Takahashi et al. ,  2020 ), we show that using a multilingual embedding space allows us to leverage information from all three inputs and demonstrate the value added by the source as input to our MT evaluation models. "}
{"page": 1, "image_path": "doc_images/2020.emnlp-main.213_1.jpg", "ocr_text": "ing the source-language input into our MT evalu-\nation models. Traditionally only QE models have\nmade use of the source input, whereas MT evalu-\nation metrics rely instead on the reference transla-\ntion. As in (Takahashi et al., 2020), we show that\nusing a multilingual embedding space allows us\nto leverage information from all three inputs and\ndemonstrate the value added by the source as input\nto our MT evaluation models.\n\nTo illustrate the effectiveness and flexibility of\nthe COMET framework, we train three models that\nestimate different types of human judgements and\nshow promising progress towards both better cor-\nrelation at segment level and robustness to high-\nquality MT.\n\nWe will release both the COMET framework and\nthe trained MT evaluation models described in this\npaper to the research community upon publication.\n\n2 Model Architectures\n\nHuman judgements of MT quality usually come\nin the form of segment-level scores, such as DA,\nMQM and HTER. For DA, it is common practice to\nconvert scores into relative rankings (DARR) when\nthe number of annotations per segment is limited\n(Bojar et al., 2017b; Ma et al., 2018, 2019). This\nmeans that, for two MT hypotheses h; and h; of\nthe same source s, if the DA score assigned to h;\nis higher than the score assigned to hj, hj is re-\ngarded as a “better” hypothesis.? To encompass\nthese differences, our framework supports two dis-\ntinct architectures: The Estimator model and the\nTranslation Ranking model. The fundamental\ndifference between them is the training objective.\nWhile the Estimator is trained to regress directly on\na quality score, the Translation Ranking model is\ntrained to minimize the distance between a “better”\nhypothesis and both its corresponding reference\nand its original source. Both models are composed\nof a cross-lingual encoder and a pooling layer.\n\n2.1 Cross-lingual Encoder\n\nThe primary building block of all the models\nin our framework is a pretrained, cross-lingual\nmodel such as multilingual BERT (Devlin et al.,\n2019), XLM (Conneau and Lample, 2019) or XLM-\nRoBERTa (Conneau et al., 2019). These models\ncontain several transformer encoder layers that are\n\nIn the WMT Metrics Shared Task, if the difference be-\ntween the DA scores is not higher than 25 points, those seg-\nments are excluded from the DARR data.\n\ntrained to reconstruct masked tokens by uncover-\ning the relationship between those tokens and the\nsurrounding ones. When trained with data from\nmultiple languages this pretrained objective has\nbeen found to be highly effective in cross-lingual\ntasks such as document classification and natural\nlanguage inference (Conneau et al., 2019), gener-\nalizing well to unseen languages and scripts (Pires\net al., 2019). For the experiments in this paper,\nwe rely on XLM-RoBERTa (base) as our encoder\nmodel.\n\nGiven an input sequence x = [x0, 21,...,Un],\nthe encoder produces an embedding e( for each\ntoken x; and each layer ¢ € {0,1,...,k}. In our\nframework, we apply this process to the source,\nMT hypothesis, and reference in order to map them\ninto a shared feature space.\n\n2.2 Pooling Layer\n\nThe embeddings generated by the last layer of the\npretrained encoders are usually used for fine-tuning\nmodels to new tasks. However, (Tenney et al.,\n2019) showed that different layers within the net-\nwork can capture linguistic information that is rel-\nevant for different downstream tasks. In the case\nof MT evaluation, (Zhang et al., 2020) showed that\ndifferent layers can achieve different levels of cor-\nrelation and that utilizing only the last layer often\nresults in inferior performance. In this work, we\nused the approach described in Peters et al. (2018)\nand pool information from the most important en-\ncoder layers into a single embedding for each to-\nken, e;, by using a layer-wise attention mechanism.\nThis embedding is then computed as:\n\ner, = BE, (1)\n\nwhere ju is a trainable weight coefficient, Ej =\neo, el, Lee e() corresponds to the vector of\nlayer embeddings for token xj}, and @ =\nsoftmax([a\\, a), ...,a)]) is a vector corre-\nsponding to the layer-wise trainable weights. In\norder to avoid overfitting to the information con-\ntained in any single layer, we used layer dropout\n(Kondratyuk and Straka, 2019), in which with a\nprobability p the weight a) is set to —oo.\n\nFinally, as in (Reimers and Gurevych, 2019),\nwe apply average pooling to the resulting word\nembeddings to derive a sentence embedding for\neach segment.\n\n2686\n", "vlm_text": "\nTo illustrate the effectiveness and ﬂexibility of the C OMET  framework, we train three models that estimate different types of human judgements and show promising progress towards both better cor- relation at segment level and robustness to high- quality MT. \nWe will release both the C OMET  framework and the trained MT evaluation models described in this paper to the research community upon publication. \n2 Model Architectures \nHuman judgements of MT quality usually come in the form of segment-level scores, such as DA, MQM and HTER. For DA, it is common practice to convert scores into relative rankings ( DA RR) when the number of annotations per segment is limited ( Bojar et al. ,  2017b ;  Ma et al. ,  2018 ,  2019 ). This means that, for two MT hypotheses  $h_{i}$   and    $h_{j}$   of the same source    $s$  , if the DA score assigned to  $h_{i}$  is higher than the score assigned to    $h_{j}$  ,    $h_{i}$   is re- garded as a “better” hypothesis.   To encompass these differences, our framework supports two dis- tinct architectures: The  Estimator model  and the Translation Ranking model . The fundamental difference between them is the training objective. While the Estimator is trained to regress directly on a quality score, the Translation Ranking model is trained to minimize the distance between a “better” hypothesis and both its corresponding reference and its original source. Both models are composed of a cross-lingual encoder and a pooling layer. \n2.1 Cross-lingual Encoder \nThe primary building block of all the models in our framework is a pretrained, cross-lingual model such as multilingual BERT ( Devlin et al. , 2019 ), XLM ( Conneau and Lample ,  2019 ) or XLM- RoBERTa ( Conneau et al. ,  2019 ). These models contain several transformer encoder layers that are trained to reconstruct masked tokens by uncover- ing the relationship between those tokens and the surrounding ones. When trained with data from multiple languages this pretrained objective has been found to be highly effective in cross-lingual tasks such as document classiﬁcation and natural language inference ( Conneau et al. ,  2019 ), gener- alizing well to unseen languages and scripts ( Pires et al. ,  2019 ). For the experiments in this paper, we rely on XLM-RoBERTa (base) as our encoder model. \n\nGiven an input sequence    $x\\;=\\;[x_{0},x_{1},...,x_{n}],$  , the encoder produces an embedding    $e_{j}^{(\\ell)}$  for each token    $x_{j}$   and each layer    $\\ell\\in\\{0,1,...,k\\}$  . In our framework, we apply this process to the source, MT hypothesis, and reference in order to map them into a shared feature space. \n2.2 Pooling Layer \nThe embeddings generated by the last layer of the pretrained encoders are usually used for ﬁne-tuning models to new tasks. However, ( Tenney et al. , 2019 ) showed that different layers within the net- work can capture linguistic information that is rel- evant for different downstream tasks. In the case of MT evaluation, ( Zhang et al. ,  2020 ) showed that different layers can achieve different levels of cor- relation and that utilizing only the last layer often results in inferior performance. In this work, we used the approach described in  Peters et al.  ( 2018 ) and pool information from the most important en- coder layers into a single embedding for each to- ken,  $e_{j}$  , by using a layer-wise attention mechanism. This embedding is then computed as: \n\n$$\ne_{x_{j}}=\\mu E_{x_{j}}^{\\top}\\alpha\n$$\n \nwhere    $\\mu$   is a trainable weight coefﬁcient,    $E_{j}\\;=\\;$   $[e_{j}^{(0)},e_{j}^{(1)},\\cdot\\cdot\\cdot e_{j}^{(k)}]$   corresponds to the vector of layer embeddings for token    $x_{j}$  , and    $\\begin{array}{r l}{\\alpha}&{{}=}\\end{array}$  soft  $\\operatorname*{max}([\\alpha^{(1)},\\bar{\\alpha^{(2)}},.\\,.\\,.\\,,\\alpha^{(k)}])$   is a vector corre- sponding to the layer-wise trainable weights. In order to avoid overﬁtting to the information con- tained in any single layer, we used layer dropout ( Kondratyuk and Straka ,  2019 ), in which with a probability  $p$   the weight    $\\alpha^{(i)}$    is set to  $-\\infty$  . \nFinally, as in ( Reimers and Gurevych ,  2019 ), we apply average pooling to the resulting word embeddings to derive a sentence embedding for each segment. "}
{"page": 2, "image_path": "doc_images/2020.emnlp-main.213_2.jpg", "ocr_text": "=)\n\nFeed-Forward\n\nEmbeddings Concatenation\n\n1\nHypothesis Source Reference\n\nFigure 1: Estimator model architecture. The source,\nhypothesis and reference are independently encoded us-\ning a pretrained cross-lingual encoder. The resulting\nword embeddings are then passed through a pooling\nlayer to create a sentence embedding for each segment.\nFinally, the resulting sentence embeddings are com-\nbined and concatenated into one single vector that is\npassed to a feed-forward regressor. The entire model is\ntrained by minimizing the Mean Squared Error (MSE).\n\n2.3. Estimator Model\n\nGiven a d-dimensional sentence embedding for the\nsource, the hypothesis, and the reference, we adopt\nthe approach proposed in RUSE (Shimanaka et al.,\n2018) and extract the following combined features:\n\ne Element-wise source product: h © s\ne Element-wise reference product: h © r\n\ne Absolute element-wise source difference:\n|h— s|\n\ne Absolute element-wise reference difference:\n|h—r|\n\nThese combined features are then concatenated\nto the reference embedding r and hypothesis em-\nbedding h into a single vector « = [h;r;h ©\ns;h©r;|h — s|;|h — r|] that serves as input to\na feed-forward regressor. The strength of these\nfeatures is in highlighting the differences between\nembeddings in the semantic feature space.\n\nThe model is then trained to minimize the mean\nsquared error between the predicted scores and\nquality assessments (DA, HTER or MQM). Fig-\nure | illustrates the proposed architecture.\n\nTriplet Margin Loss\n\nSentence Embeddings\n\n1 ' 1\nBetter Anchors Worse\n\nHypothesis (source/reference) Hypothesis\n\nFigure 2: Translation Ranking model architecture.\nThis architecture receives 4 segments: the source, the\nreference, a “better” hypothesis, and a “worse” one.\nThese segments are independently encoded using a pre-\ntrained cross-lingual encoder and a pooling layer on\ntop. Finally, using the triplet margin loss (Schroff et al.,\n2015) we optimize the resulting embedding space to\nminimize the distance between the “better” hypothesis\nand the “anchors” (source and reference).\n\nNote that we chose not to include the raw source\nembedding (s) in our concatenated input. Early\nexperimentation revealed that the value added by\nthe source embedding as extra input features to our\nregressor was negligible at best. A variation on\nour HTER estimator model trained with the vector\nx = [h;s;r;h©s;hOr;|h — s|;|h — rl] as\ninput to the feed-forward only succeed in boost-\ning segment-level performance in 8 of the 18 lan-\nguage pairs outlined in section 5 below and the\naverage improvement in Kendall’s Tau in those set-\ntings was +0.0009. As noted in Zhao et al. (2020),\nwhile cross-lingual pretrained models are adaptive\nto multiple languages, the feature space between\nlanguages is poorly aligned. On this basis we de-\ncided in favor of excluding the source embedding\non the intuition that the most important information\ncomes from the reference embedding and reduc-\ning the feature space would allow the model to\nfocus more on relevant information. This does not\nhowever negate the general value of the source to\nour model; where we include combination features\nsuch as h © s and |h — s| we do note gains in\ncorrelation as explored further in section 5.5 below.\n\n2687\n", "vlm_text": "The image is a neural network architecture diagram, showcasing the flow of data through various components used for processing input data. Here's a breakdown of its elements:\n\n1. **Pretrained Encoder (bottom block, blue color)**: This component takes in three different types of inputs labeled as \"Hypothesis,\" \"Source,\" and \"Reference\". It performs initial feature extraction or representation learning from these inputs.\n\n2. **Pooling Layer (light orange block)**: After processing by the Pretrained Encoder, the resulting data is passed through a Pooling Layer to condense the information.\n\n3. **Embeddings Concatenation (yellow block)**: The pooled representations of the inputs are concatenated into a single embedding vector.\n\n4. **Feed-Forward (beige block)**: This concatenated embedding is passed through a feed-forward neural network for further processing or transformation.\n\n5. **MSE (Mean Squared Error, purple block at the top)**: The final output from the Feed-Forward layer is compared to a target output using the Mean Squared Error (MSE) loss function, which is often used to measure the difference between predicted and actual values in regression tasks.\n\nArrows between the layers indicate the direction of data flow through the network architecture.\nFigure 1: Estimator model architecture. The source, hypothesis and reference are independently encoded us- ing a pretrained cross-lingual encoder. The resulting word embeddings are then passed through a pooling layer to create a sentence embedding for each segment. Finally, the resulting sentence embeddings are com- bined and concatenated into one single vector that is passed to a feed-forward regressor. The entire model is trained by minimizing the Mean Squared Error (MSE). \n2.3 Estimator Model \nGiven a    $d$  -dimensional sentence embedding for the source, the hypothesis, and the reference, we adopt the approach proposed in RUSE ( Shimanaka et al. , 2018 ) and extract the following combined features: \n•  Element-wise source product:    $h\\odot s$  •  Element-wise reference product:    $\\pmb{h}\\odot\\pmb{r}$  •  Absolute element-wise source difference:  $|h-s|$  •  Absolute element-wise reference difference:  $|h-r|$  \nThese combined features are then concatenated to the reference embedding  $\\mathbfit{r}$   and hypothesis em- bedding    $h$   into a single vector    $\\pmb{x}\\ =\\ [h;r;h\\odot$   $s;h\\odot r;|h-s|;|h-r|]$   that serves as input to a feed-forward regressor. The strength of these features is in highlighting the differences between embeddings in the semantic feature space. \nThe model is then trained to minimize the mean squared error between the predicted scores and quality assessments (DA, HTER or MQM). Fig- ure  1  illustrates the proposed architecture. \nThe image is a diagram representing a workflow used in natural language processing (NLP) or machine learning models focused on generating sentence embeddings. Here's a breakdown of the components seen in the image:\n\n1. **Pretrained Encoder:** This is the initial stage where input data goes through a model that has already been trained on large datasets to understand language. The encoder converts the raw input text into a numerical format (usually vectors).\n\n2. **Pooling Layer:** After the encoding process, the output vectors go through a pooling layer. This layer is responsible for aggregating the encoded features to produce a fixed-size vector representation for the entire sentence, regardless of its length.\n\n3. **Sentence Embeddings:** The result after pooling are sentence embeddings. These are dense vector representations of the original text input, capturing semantic meaning in a form that's suitable for comparison or downstream tasks.\n\n4. **Triplet Margin Loss:** This is a loss function used during training to ensure that the sentence embeddings map closely related sentences (such as variations of the same sentence) near each other in the embedding space while pushing unrelated sentences farther apart.\n\nThe flow of data is from \"Anchor\" (the primary input sentence), \"Positive\" (another sentence that is semantically similar to the anchor), and \"Negative\" (a sentence that is different) through the model to optimize the embeddings using the triplet margin loss.\nFigure 2: Translation Ranking model architecture. This architecture receives 4 segments: the source, the reference, a “better” hypothesis, and a “worse” one. These segments are independently encoded using a pre- trained cross-lingual encoder and a pooling layer on top. Finally, using the triplet margin loss ( Schroff et al. , 2015 ) we optimize the resulting embedding space to minimize the distance between the “better” hypothesis and the “anchors” (source and reference). \nNote that we chose not to include the raw source embedding ( s ) in our concatenated input. Early experimentation revealed that the value added by the source embedding as extra input features to our regressor was negligible at best. A variation on our HTER estimator model trained with the vector  $\\pmb{x}\\,=\\,[h;s;r;h\\odot s;h\\odot r;|h-s|;|h-r|]$   as input to the feed-forward only succeed in boost- ing segment-level performance in 8 of the 18 lan- guage pairs outlined in section  5  below and the average improvement in Kendall’s Tau in those set- tings was  $+0.0009$  . As noted in  Zhao et al.  ( 2020 ), while cross-lingual pretrained models are adaptive to multiple languages, the feature space between languages is poorly aligned. On this basis we de- cided in favor of excluding the source embedding on the intuition that the most important information comes from the reference embedding and reduc- ing the feature space would allow the model to focus more on relevant information. This does not however negate the general value of the source to our model; where we include combination features such as    $h\\odot s$   and    $|h-s|$   we do note gains in correlation as explored further in section  5.5  below. "}
{"page": 3, "image_path": "doc_images/2020.emnlp-main.213_3.jpg", "ocr_text": "2.4 Translation Ranking Model\n\nOur Translation Ranking model (Figure 2) receives\nas input a tuple y = (s,h*,h7,r) where h* de-\nnotes an hypothesis that was ranked higher than\nanother hypothesis h~. We then pass x through\nour cross-lingual encoder and pooling layer to ob-\ntain a sentence embedding for each segment in the\nx. Finally, using the embeddings {s,h+,h—,r},\nwe compute the triplet margin loss (Schroff et al.,\n2015) in relation to the source and reference:\nL(x) =L(s,ht,h7)+L(r,ht,h7) (2)\n\nwhere:\nL(s,ht+,h-) =\n+ _ (3)\nmax{0,d(s,h™) —d(s,h~) +}\nL(r,h* ho) =\n+ _ (4)\nmax{0,d(r,h™) —d(r,h7) +e}\n\nd(u, v) denotes the euclidean distance between u\nand v and «€ is a margin. Thus, during training the\nmodel optimizes the embedding space so the dis-\ntance between the anchors (s and r) and the “worse”\nhypothesis h~ is greater by at least € than the dis-\ntance between the anchors and “better” hypothesis\nht.\n\nDuring inference, the described model receives\na triplet (s, h,r) with only one hypothesis. The\nquality score assigned to h is the harmonic mean\nbetween the distance to the source d(s, f) and the\ndistance to the reference d(r, h):\n\n2x d(r,h) x d(s,h)\nd(r,h) + d(s, h)\n\nf(s, h, r) (5)\n\nFinally, we convert the resulting distance into a\nsimilarity score bounded between 0 and | as fol-\nlows:\n\n1\n\nf(s,h,r) = 14 fls,h,r)\n\n(6)\n\n3 Corpora\n\nTo demonstrate the effectiveness of our described\nmodel architectures (section 2), we train three MT\nevaluation models where each model targets a dif-\nferent type of human judgment. To train these\nmodels, we use data from three different corpora:\nthe QT21 corpus, the DARR from the WMT Met-\nrics shared task (2017 to 2019) and a proprietary\nMQM annotated corpus.\n\n3.1 The QT21 corpus\n\nThe QT21 corpus is a publicly available* dataset\ncontaining industry generated sentences from either\nan information technology or life sciences domains\n(Specia et al., 2017). This corpus contains a total\nof 173K tuples with source sentence, respective\nhuman-generated reference, MT hypothesis (either\nfrom a phrase-based statistical MT or from a neu-\nral MT), and post-edited MT (PE). The language\npairs represented in this corpus are: English to Ger-\nman (en-de), Latvian (en-It) and Czech (en-cs), and\nGerman to English (de-en).\n\nThe HTER score is obtained by computing the\ntranslation edit rate (TER) (Snover et al., 2006) be-\ntween the MT hypothesis and the corresponding PE.\nFinally, after computing the HTER for each MT,\nwe built a training dataset D = {s;, hi, ri, yi}*_y,\nwhere s; denotes the source text, h; denotes the MT\nhypothesis, r; the reference translation, and y; the\nHTER score for the hypothesis h,. In this manner\nwe seek to learn a regression f(s,h,r) — y that\npredicts the human-effort required to correct the\nhypothesis by looking at the source, hypothesis,\nand reference (but not the post-edited hypothesis).\n\n3.2. The WMT DARR corpus\n\nSince 2017, the organizers of the WMT News\nTranslation Shared Task (Barrault et al., 2019) have\ncollected human judgements in the form of ad-\nequacy DAs (Graham et al., 2013, 2014, 2017).\nThese DAs are then mapped into relative rank-\nings (DARR) (Ma et al., 2019). The resulting\ndata for each year (2017-19) form a dataset D =\n{sj, hi, h>,ri}h_, where h* denotes a “better”\nhypothesis and h; denotes a “worse” one. Here\nwe seek to learn a function r(s, h,7) such that the\nscore assigned to h7* is strictly higher than the score\nassigned to hy (r(s;,hf,ri) > r(si,hj,ri)).\nThis data* contains a total of 24 high and low-\nresource language pairs such as Chinese to English\n(zh-en) and English to Gujarati (en-gu).\n\n3.3. The MQM corpus\n\nThe MQM corpus is a proprietary internal database\nof MT-generated translations of customer support\n\n3QT21 data: https://lindat.mff.cuni.cz/\nrepository/xmlui/handle/11372/LRT-2390\n\n‘The raw data for each year of the WMT Metrics shared\ntask is publicly available in the results page (2019 ex-\nample: http: //www.statmt.org/wmt19/results.\nhtm1). Note, however, that in the README files it is high-\nlighted that this data is not well documented and the scripts\noccasionally require custom utilities that are not available.\n\n2688\n", "vlm_text": "2.4 Translation Ranking Model \nOur Translation Ranking model (Figure  2 ) receives as input a tuple    $\\chi=(s,h^{+},h^{-},r)$   where    $h^{+}$    de- notes an hypothesis that was ranked higher than another hypothesis  $h^{-}$  . We then pass    $\\chi$   through our cross-lingual encoder and pooling layer to ob- tain a sentence embedding for each segment in the  $\\chi$  . Finally, using the embeddings    $\\{s,h^{+},h^{-},r\\}$  , we compute the triplet margin loss ( Schroff et al. , 2015 ) in relation to the source and reference: \n\n$$\nL(\\chi)=L(s,h^{+},h^{-})+L(r,h^{+},h^{-})\n$$\n \nwhere: \n\n$$\n\\begin{array}{l}{{L(s,h^{+},h^{-})=}}\\\\ {{\\qquad\\operatorname*{max}\\{0,d(s,h^{+})\\ -d(s,h^{-})+\\epsilon\\}}}\\end{array}\n$$\n \n\n$$\n\\begin{array}{l}{{{\\cal L}({\\pmb r},{\\pmb h}^{+},{\\pmb h}^{-})=\\nonumber}}\\\\ {{\\qquad\\operatorname*{max}\\{0,d({\\pmb r},{\\pmb h}^{+})~-d({\\pmb r},{\\pmb h}^{-})+\\epsilon\\}}}\\end{array}\n$$\n \n $d(\\pmb{u},\\pmb{v})$   denotes the euclidean distance between    $\\mathbfcal{U}$  and  $\\mathbfit{v}$   and  $\\epsilon$   is a margin. Thus, during training the model optimizes the embedding space so the dis- tance between the anchors (  $\\cdot_{s}$   and  $\\mathbfit{\\mathbf{r}}$  ) and the “worse” hypothesis  $h^{-}$  is greater by at least  $\\epsilon$   than the dis- tance between the anchors and “better” hypothesis  $h^{+}$  . \nDuring inference, the described model receives a triplet    $(s,\\hat{h},r)$   with only one hypothesis. The quality score assigned to    $\\dot{h}$   is the harmonic mean between the distance to the source    $d(\\pmb{s},\\hat{\\pmb{h}})$   and the distance to the reference    $d(\\pmb{r},\\hat{\\pmb{h}})$  : \n\n$$\nf(s,\\hat{h},r)={\\frac{2\\times d(\\pmb{r},\\hat{h})\\times d(\\pmb{s},\\hat{h})}{d(\\pmb{r},\\hat{h})+d(\\pmb{s},\\hat{h})}}\n$$\n \nFinally, we convert the resulting distance into a similarity score bounded between 0 and 1 as fol- lows: \n\n$$\n\\hat{f}(s,\\hat{h},r)=\\frac{1}{1+f(s,\\hat{h},r)}\n$$\n \n3 Corpora \nTo demonstrate the effectiveness of our described model architectures (section  2 ), we train three MT evaluation models where each model targets a dif- ferent type of human judgment. To train these models, we use data from three different corpora: the QT21 corpus, the  DA RR from the WMT Met- rics shared task (2017 to 2019) and a proprietary MQM annotated corpus. \n3.1 The QT21 corpus \nThe QT21 corpus is a publicly available 3   dataset containing industry generated sentences from either an information technology or life sciences domains ( Specia et al. ,  2017 ). This corpus contains a total of 173K tuples with source sentence, respective human-generated reference, MT hypothesis (either from a phrase-based statistical MT or from a neu- ral MT), and post-edited MT (PE). The language pairs represented in this corpus are: English to Ger- man (en-de), Latvian (en-lt) and Czech (en-cs), and German to English (de-en). \nThe HTER score is obtained by computing the translation edit rate (TER) ( Snover et al. ,  2006 ) be- tween the MT hypothesis and the corresponding PE. Finally, after computing the HTER for each MT, we built a training dataset    $D=\\{s_{i},h_{i},r_{i},y_{i}\\}_{n=1}^{N}$  , where  $s_{i}$   denotes the source text,  $h_{i}$   denotes the MT hypothesis,  $r_{i}$   the reference translation, and    $y_{i}$   the HTER score for the hypothesis    $h_{i}$  . In this manner we seek to learn a regression    $f(s,h,r)\\to y$   that predicts the human-effort required to correct the hypothesis by looking at the source, hypothesis, and reference (but not the post-edited hypothesis). \n3.2 The WMT  DA RR corpus \nSince 2017, the organizers of the WMT News Translation Shared Task ( Barrault et al. ,  2019 ) have collected human judgements in the form of ad- equacy DAs ( Graham et al. ,  2013 ,  2014 ,  2017 ). These DAs are then mapped into relative rank- ings ( DA RR) ( Ma et al. ,  2019 ). The resulting data for each year (2017-19) form a dataset    $D=$   $\\{s_{i},h_{i}^{+},h_{i}^{-},r_{i}\\}_{n=1}^{N}$  }   where    $h_{i}^{+}$    denotes a “better” hypothesis and    $h_{i}^{-}$    denotes a “worse” one. Here we seek to learn a function    $r(s,h,r)$   such that the score assigned to  $h_{i}^{+}$    is strictly higher than the score assigned to    $h_{i}^{-}$   $(r(s_{i},h_{i}^{+},r_{i})\\;\\;>\\;\\;r(s_{i},h_{i}^{-},r_{i}))$  ). This data 4   contains a total of 24 high and low- resource language pairs such as Chinese to English (zh-en) and English to Gujarati (en-gu). \n3.3 The MQM corpus \nThe MQM corpus is a proprietary internal database of MT-generated translations of customer support chat messages that were annotated according to the guidelines set out in  Burchardt and Lommel  ( 2014 ). This data contains a total of 12K tuples, cover- ing 12 language pairs from English to: German (en-de), Spanish (en-es), Latin-American Span- ish (en-es-latam), French (en-fr), Italian (en-it), Japanese (en-ja), Dutch (en-nl), Portuguese (en-pt), Brazilian Portuguese (en-pt-br), Russian (en-ru), Swedish (en-sv), and Turkish (en-tr). Note that in this corpus English is always seen as the source lan- guage, but never as the target language. Each tuple consists of a source sentence, a human-generated reference, a MT hypothesis, and its MQM score, derived from error annotations by one (or more) trained annotators. The MQM metric referred to throughout this paper is an internal metric deﬁned in accordance with the MQM framework ( Lommel et al. ,  2014 ) (MQM). Errors are annotated under an internal typology deﬁned under three main er- ror types; ‘Style’, ‘Fluency’ and ‘Accuracy’. Our MQM scores range from    $-\\infty$  to 100 and are de- ﬁned as: "}
{"page": 4, "image_path": "doc_images/2020.emnlp-main.213_4.jpg", "ocr_text": "chat messages that were annotated according to the\nguidelines set out in Burchardt and Lommel (2014).\nThis data contains a total of 12K tuples, cover-\ning 12 language pairs from English to: German\n(en-de), Spanish (en-es), Latin-American Span-\nish (en-es-latam), French (en-fr), Italian (en-it),\nJapanese (en-ja), Dutch (en-nl), Portuguese (en-pt),\nBrazilian Portuguese (en-pt-br), Russian (en-ru),\nSwedish (en-sv), and Turkish (en-tr). Note that in\nthis corpus English is always seen as the source lan-\nguage, but never as the target language. Each tuple\nconsists of a source sentence, a human-generated\nreference, a MT hypothesis, and its MQM score,\nderived from error annotations by one (or more)\ntrained annotators. The MQM metric referred to\nthroughout this paper is an internal metric defined\nin accordance with the MQM framework (Lommel\net al., 2014) (MQM). Errors are annotated under\nan internal typology defined under three main er-\nror types; ‘Style’, ‘Fluency’ and ‘Accuracy’. Our\nMQM scores range from —oo to 100 and are de-\nfined as:\n\nIinor + 5 X IMajor + 10 x Terie.\nSentence Length x 100\n\nMQM = 100\n\n(7)\n\nwhere Iino denotes the number of minor errors,\nIajor the number of major errors and J¢;i, the num-\nber of critical errors.\n\nOur MQM metric takes into account the sever-\nity of the errors identified in the MT hypothesis,\nleading to a more fine-grained metric than HTER\nor DA. When used in our experiments, these val-\nues were divided by 100 and truncated at 0. As\nin section 3.1, we constructed a training dataset\nD = {s;,hi,ri,yi}X_1, where s; denotes the\nsource text, h; denotes the MT hypothesis, 1; the\nreference translation, and y; the MQM score for\nthe hypothesis h;.\n\n4 Experiments\n\nWe train two versions of the Estimator model de-\nscribed in section 2.3: one that regresses on HTER\n(COMET-HTER) trained with the QT21 corpus, and\nanother that regresses on our proprietary implemen-\ntation of MQM (COMET-MQM) trained with our\ninternal MQM corpus. For the Translation Ranking\nmodel, described in section 2.4, we train with the\nWMT DARR corpus from 2017 and 2018 (COMET-\nRANK). In this section, we introduce the training\n\nsetup for these models and corresponding evalua-\ntion setup.\n\n4.1 Training Setup\n\nThe two versions of the Estimators (COMET-\nHTER/MQM) share the same training setup and\nhyper-parameters (details are included in the Ap-\npendices). For training, we load the pretrained\nencoder and initialize both the pooling layer and\nthe feed-forward regressor. Whereas the layer-wise\nscalars a from the pooling layer are initially set\nto zero, the weights from the feed-forward are ini-\ntialized randomly. During training, we divide the\nmodel parameters into two groups: the encoder pa-\nrameters, that include the encoder model and the\nscalars from a; and the regressor parameters, that\ninclude the parameters from the top feed-forward\nnetwork. We apply gradual unfreezing and discrim-\ninative learning rates (Howard and Ruder, 2018),\nmeaning that the encoder model is frozen for one\nepoch while the feed-forward is optimized with a\nlearning rate of 3e—5. After the first epoch, the\nentire model is fine-tuned but the learning rate for\nthe encoder parameters is set to le—5 in order to\navoid catastrophic forgetting.\n\nIn contrast with the two Estimators, for the\nCOMET-RANK model we fine-tune from the outset.\nFurthermore, since this model does not add any\nnew parameters on top of XLM-RoBERTa (base)\nother than the layer scalars a, we use one single\nlearning rate of le—5 for the entire model.\n\n4.2. Evaluation Setup\n\nWe use the test data and setup of the WMT 2019\nMetrics Shared Task (Ma et al., 2019) in order to\ncompare the COMET models with the top perform-\ning submissions of the shared task and other recent\nstate-of-the-art metrics such as BERTSCORE and\nBLEURT.> The evaluation method used is the of-\nficial Kendall’s Tau-like formulation, 7, from the\nWMT 2019 Metrics Shared Task (Ma et al., 2019)\ndefined as:\n\n_ Concordant — Discordant\n\n(8)\n\nConcordant + Discordant\n\nwhere Concordant is the number of times a metric\nassigns a higher score to the “better” hypothesis\nh* and Discordant is the number of times a metric\nassigns a higher score to the “worse” hypothesis\n\n>To ease future research we will also provide, within our\n\nframework, detailed instructions and scripts to run other met-\nrics such as CHRF, BLEU, BERTSCORE, and BLEURT\n\n2689\n", "vlm_text": "\n\n$$\n\\mathrm{MQM}=100-\\frac{I_{\\mathrm{Mink}}+5\\times I_{\\mathrm{Mair}}+10\\times I_{\\mathrm{Crit}}}{\\mathrm{Sentence\\;Length}\\times100}\n$$\n \nwhere    $I_{\\mathrm{minor}}$   denotes the number of minor errors,  $I_{\\mathrm{Mair}}$   the number of major errors and    $I_{\\mathrm{Crit.}}$   the num- ber of critical errors. \nOur MQM metric takes into account the sever- ity of the errors identiﬁed in the MT hypothesis, leading to a more ﬁne-grained metric than HTER or DA. When used in our experiments, these val- ues were divided by 100 and truncated at 0. As in section  3.1 , we constructed a training dataset  $D\\ \\ =\\ \\ \\{s_{i},h_{i},r_{i},y_{i}\\}_{n=1}^{N}$  , where    $s_{i}$   denotes the source text,    $h_{i}$   denotes the MT hypothesis,    $r_{i}$   the reference translation, and  $y_{i}$   the MQM score for the hypothesis  $h_{i}$  . \n4 Experiments \nWe train two versions of the Estimator model de- scribed in section  2.3 : one that regresses on HTER (C OMET - HTER ) trained with the QT21 corpus, and another that regresses on our proprietary implemen- tation of MQM (C OMET - MQM ) trained with our internal MQM corpus. For the Translation Ranking model, described in section  2.4 , we train with the WMT  DA RR corpus from 2017 and 2018 (C OMET - RANK ). In this section, we introduce the training setup for these models and corresponding evalua- tion setup. \n\n4.1 Training Setup \nThe two versions of the Estimators (C OMET - HTER/MQM) share the same training setup and hyper-parameters (details are included in the Ap- pendices). For training, we load the pretrained encoder and initialize both the pooling layer and the feed-forward regressor. Whereas the layer-wise scalars    $_{\\alpha}$   from the pooling layer are initially set to zero, the weights from the feed-forward are ini- tialized randomly. During training, we divide the model parameters into two groups: the encoder pa- rameters, that include the encoder model and the scalars from    $_{\\alpha}$  ; and the regressor parameters, that include the parameters from the top feed-forward network. We apply gradual unfreezing and discrim- inative learning rates ( Howard and Ruder ,  2018 ), meaning that the encoder model is frozen for one epoch while the feed-forward is optimized with a learning rate of    $\\mathrm{3e}{-5}$  . After the ﬁrst epoch, the entire model is ﬁne-tuned but the learning rate for the encoder parameters is set to    $\\mathrm{1e}{-5}$   in order to avoid catastrophic forgetting. \nIn contrast with the two Estimators, for the C OMET - RANK  model we ﬁne-tune from the outset. Furthermore, since this model does not add any new parameters on top of XLM-RoBERTa (base) other than the layer scalars    $_{\\alpha}$  , we use one single learning rate of  1e 5  for the entire model. \n4.2 Evaluation Setup \nWe use the test data and setup of the WMT 2019 Metrics Shared Task ( Ma et al. ,  2019 ) in order to compare the C OMET  models with the top perform- ing submissions of the shared task and other recent state-of-the-art metrics such as B ERTSCORE  and B LEURT .   The evaluation method used is the of- ﬁcial Kendall’s Tau-like formulation,  $\\tau$  , from the WMT 2019 Metrics Shared Task ( Ma et al. ,  2019 ) deﬁned as: \n\n$$\n\\tau=\\frac{C o n c o r d a n t-D i s c o r d a n t}{C o n c o r d a n t+D i s c o r d a n t}\n$$\n \nwhere  Concordant  is the number of times a metric assigns a higher score to the “better” hypothesis  $h^{+}$    and  Discordant  is the number of times a metric assigns a higher score to the “worse” hypothesis "}
{"page": 5, "image_path": "doc_images/2020.emnlp-main.213_5.jpg", "ocr_text": "Table 1: Kendall’s Tau (7) correlations on language pairs with English as source for the WMT19 Metrics DARR\ncorpus. For BERTSCORE we report results with the default encoder model for a complete comparison, but also\nwith XLM-RoBERTa (base) for fairness with our models. The values reported for YiSi-1 are taken directly from\n\nthe shared task paper (Ma et al., 2019).\n\nMetric en-cs en-de en-fi en-gu  en-kk en-It | en-ru_ en-zh\nBLEU 0.364 0.248 0.395 0.463 0.363 0.333 0.469 0.235\nCHRF 0.444 0.321 0.518 0.548 0.510 0.438 0.548 0.241\nYISI-1 0.475 0.351 0.537 0.551 0.546 0.470 0.585 0.355\nBERTSCORE (default) 0.500 0.363 0.527 0.568 0.540 0.464 0.585 0.356\nBERTSCORE (xlmr-base) 0.503 0.369 0.553 0.584 0.536 0.514 0.599 0.317\nCOMET-HTER 0.524 0.383 0.560 0.552 0.508 0.577 0.539 0.380\nCOMET-MQM 0.537 0.398 0.567 0.564 0.534 0.574 0.615 0.378\nCOMET-RANK 0.603 0.427 0.664 0.611 0.693 0.665 0.580 0.449\n\nh~ or the scores assigned to both hypotheses is the\nsame.\n\nAs mentioned in the findings of (Ma et al., 2019),\nsegment-level correlations of all submitted metrics\nwere frustratingly low. Furthermore, all submit-\nted metrics exhibited a dramatic lack of ability to\ncorrectly rank strong MT systems. To evaluate\nwhether our new MT evaluation models better ad-\ndress this issue, we followed the described evalu-\nation setup used in the analysis presented in (Ma\net al., 2019), where correlation levels are examined\nfor portions of the DARR data that include only the\ntop 10, 8, 6 and 4 MT systems.\n\n5 Results\n5.1 From English into X\n\nTable 1 shows results for all eight language pairs\nwith English as source. We contrast our three\nCOMET models against baseline metrics such as\nBLEU and CHRF, the 2019 task winning metric\nYISI-1, as well as the more recent BERTSCORE.\nWe observe that across the board our three models\ntrained with the COMET framework outperform,\noften by significant margins, all other metrics. Our\nDARR Ranker model outperforms the two Estima-\ntors in seven out of eight language pairs. Also, even\nthough the MQM Estimator is trained on only 12K\nannotated segments, it performs roughly on par\nwith the HTER Estimator for most language-pairs,\nand outperforms all the other metrics in en-ru.\n\n5.2 From X into English\n\nTable 2 shows results for the seven to-English lan-\nguage pairs. Again, we contrast our three COMET\nmodels against baseline metrics such as BLEU and\nCHRF, the 2019 task winning metric YISI-1, as\n\nwell as the recently published metrics BERTSCORE\nand BLEuRT. As in Table | the DARR model shows\nstrong correlations with human judgements out-\nperforming the recently proposed English-specific\nBLEURT metric in five out of seven language pairs.\nAgain, the MQM Estimator shows surprising strong\nresults despite the fact that this model was trained\nwith data that did not include English as a target.\nAlthough the encoder used in our trained models is\nhighly multilingual, we hypothesise that this pow-\nerful “zero-shot” result is due to the inclusion of\nthe source in our models.\n\n5.3. Language pairs not involving English\n\nAll three of our COMET models were trained on\ndata involving English (either as a source or as a\ntarget). Nevertheless, to demonstrate that our met-\nrics generalize well we test them on the three WMT\n2019 language pairs that do not include English in\neither source or target. As can be seen in Table\n3, our results are consistent with observations in\nTables 1 and 2.\n\n5.4 Robustness to High-Quality MT\n\nFor analysis, we use the DARR corpus from the\n2019 Shared Task and evaluate on the subset of\nthe data from the top performing MT systems for\neach language pair. We included language pairs\nfor which we could retrieve data for at least ten\ndifferent MT systems (i.e. all but kk-en and gu-en).\nWe contrast against the strong recently proposed\nBERTSCORE and BLEURT, with BLEU as a base-\nline. Results are presented in Figure 3. For lan-\nguage pairs where English is the target, our three\nmodels are either better or competitive with all oth-\ners; where English is the source we note that in\ngeneral our metrics exceed the performance of oth-\n\n2690\n", "vlm_text": "The table presents various metric scores for translation quality evaluation across different language pairs. The metrics include BLEU, CHRF, YiSi-1, BERTScore (default and xlm-r-base), COMET-HTER, COMET-MQM, and COMET-Rank. Language pairs evaluated are en-cs, en-de, en-fi, en-gu, en-kk, en-lt, en-ru, and en-zh. Scores are presented as numerical values, likely representing the accuracy or performance of each metric for the given language pairs. The highest scores for each language pair are bolded, indicating the best-performing metric for that pair.\n $h^{-}$  or the scores assigned to both hypotheses is the same. \nAs mentioned in the ﬁndings of ( Ma et al. ,  2019 ), segment-level correlations of all submitted metrics were frustratingly low. Furthermore, all submit- ted metrics exhibited a dramatic lack of ability to correctly rank strong MT systems. To evaluate whether our new MT evaluation models better ad- dress this issue, we followed the described evalu- ation setup used in the analysis presented in ( Ma et al. ,  2019 ), where correlation levels are examined for portions of the  DA RR data that include only the top 10, 8, 6 and 4 MT systems. \n5 Results \n5.1 From English into X \nTable  1  shows results for all eight language pairs with English as source. We contrast our three C OMET  models against baseline metrics such as B LEU  and  CHR F, the 2019 task winning metric Y I S I -1, as well as the more recent B ERTSCORE . We observe that across the board our three models trained with the C OMET  framework outperform, often by signiﬁcant margins, all other metrics. Our DA RR Ranker model outperforms the two Estima- tors in seven out of eight language pairs. Also, even though the MQM Estimator is trained on only 12K annotated segments, it performs roughly on par with the HTER Estimator for most language-pairs, and outperforms all the other metrics in en-ru. \n5.2 From X into English \nTable  2  shows results for the seven to-English lan- guage pairs. Again, we contrast our three C OMET models against baseline metrics such as B LEU  and CHR F, the 2019 task winning metric Y I S I -1, as well as the recently published metrics B ERTSCORE and B LEURT . As in Table  1  the  DA RR model shows strong correlations with human judgements out- performing the recently proposed English-speciﬁc B LEURT  metric in ﬁve out of seven language pairs. Again, the MQM Estimator shows surprising strong results despite the fact that this model was trained with data that did not include English as a target. Although the encoder used in our trained models is highly multilingual, we hypothesise that this pow- erful “zero-shot” result is due to the inclusion of the source in our models. \n\n5.3 Language pairs not involving English \nAll three of our C OMET  models were trained on data involving English (either as a source or as a target). Nevertheless, to demonstrate that our met- rics generalize well we test them on the three WMT 2019 language pairs that do not include English in either source or target. As can be seen in Table 3 , our results are consistent with observations in Tables  1  and  2 . \n5.4 Robustness to High-Quality MT \nFor analysis, we use the  DA RR corpus from the 2019 Shared Task and evaluate on the subset of the data from the top performing MT systems for each language pair. We included language pairs for which we could retrieve data for at least ten different MT systems (i.e. all but kk-en and gu-en). We contrast against the strong recently proposed B ERTSCORE  and B LEURT , with B LEU  as a base- line. Results are presented in Figure  3 . For lan- guage pairs where English is the target, our three models are either better or competitive with all oth- ers; where English is the source we note that in general our metrics exceed the performance of oth- Table 2: Kendall’s Tau   $(\\tau)$   correlations on language pairs with English as a target for the WMT19 Metrics  DA RR corpus. As for B ERTSCORE , for B LEURT  we report results for two models: the base model, which is comparable in size with the encoder we used and the large model that is twice the size. "}
{"page": 6, "image_path": "doc_images/2020.emnlp-main.213_6.jpg", "ocr_text": "Table 2: Kendall’s Tau (7) correlations on language pairs with English as a target for the WMT19 Metrics DARR\ncorpus. As for BERTSCORE, for BLEURT we report results for two models: the base model, which is comparable\nin size with the encoder we used and the large model that is twice the size.\n\nMetric de-en fi-en gu-en kk-en It-en  ru-en zh-en\nBLEU 0.053 0.236 0.194 0.276 0.249 0.177 0.321\nCHRF 0.123 0.292 0.240 0.323 0.304 0.115 0.371\nYISI-1 0.164 0.347 0.312 0.440 0.376 0.217 0.426\nBERTSCORE (default) 0.190 0.354 0.292 0.351 0.381 0.221 0.432\nBERTSCORE (xlmr-base) 0.171 0.335 0.295 0.354 0.356 0.202 0.412\nBLEURT (base-128) 0.171 0.372 0.302 0.383 0.387 0.218 0.417\nBLEURT (large-512) 0.174 0.374 0.313 0.372 0.388 0.220 0.436\nCOMET-HTER 0.185 0.333 0.274 0.297 0.364 0.163 0.391\nCOMET-MQM 0.207 0.343 0.282 0.339 =0.368 +0.187 0.422\nCOMET-RANK 0.202 0.399 0.341 0.358 0.407 0.180 0.445\nTable 3: Kendall’s Tau (7) correlations on language —.COMET-RANK—- BLEU\npairs not involving English for the WMT19 Metrics —— COMET-MQM —— BERTSCORE\nDARR corpus. —— COMET-HTER © BLEURT\nMetric de-cs_ de-fr_fr-de 03\nBLEU 0.222 0.226 0.173\nCHRF 0.341 0.287 0.274 S\nYISI-1 0.376 0.349 0.310 & 0.2\nBERTSCORE (default) 0.358 0.329 0.300 3\nBERTSCORE (xImr-base) 0.386 0.336 0.309 g ot\nCOMET-HTER 0.358 0.397 0.315 :\nCOMET-MQM 0.386 0.367 0.296\nCOMET-RANK 0.389 0.444 0.331 0\nAll 10 8 6 4\nTop models from X to English\ners. Even the MQM Estimator, trained with only 0.6\n12K segments, is competitive, which highlights the\npower of our proposed framework. eS\n5 04\n5.5 The Importance of the Source iS\nTo shed some light on the actual value and contri- 3\nbution of the source language input in our models’ 0.2\nability to learn accurate predictions, we trained two\nversions of our DARR Ranker model: one that uses 0\n\nonly the reference, and another that uses both refer-\nence and source. Both models were trained using\nthe WMT 2017 corpus that only includes language\npairs from English (en-de, en-cs, en-fi, en-tr). In\nother words, while English was never observed as\na target language during training for both variants\nof the model, the training of the second variant in-\ncludes English source embeddings. We then tested\nthese two model variants on the WMT 2018 corpus\nfor these language pairs and for the reversed di-\nrections (with the exception of en-cs because cs-en\ndoes not exist for WMT 2018). The results in Table\n\nAll 10 8 6 4\nTop models from English to X\n\nFigure 3: Metrics performance over all and the top (10,\n8, 6, and 4) MT systems.\n\n4 clearly show that for the translation ranking archi-\ntecture, including the source improves the overall\ncorrelation with human judgments. Furthermore,\nthe inclusion of the source exposed the second vari-\nant of the model to English embeddings which is\n\n2691\n", "vlm_text": "\nThe table presents evaluation metrics for machine translation systems across various language pairs. The languages indicated are German-English (de-en), Finnish-English (fi-en), Gujarati-English (gu-en), Kazakh-English (kk-en), Lithuanian-English (lt-en), Russian-English (ru-en), and Chinese-English (zh-en).\n\nEach row in the table corresponds to a different metric used to evaluate the translation systems:\n\n- BLEU\n- chrF\n- YiSi-1\n- BERTScore (default settings)\n- BERTScore (using the XLM-RoBERTa base)\n- BLEURT (base-128 model)\n- BLEURT (large-512 model)\n- COMET-HTER\n- COMET-MQM\n- COMET-RANK\n\nThe numbers in the table represent the scores achieved by each metric for each language pair. Higher scores typically indicate better translation quality as measured by the respective metric.\n\nAdditionally, the highest score for each language pair is highlighted in bold, showing which metric rated the translations highest for each specific language combination. For instance, the highest score for kk-en (Kazakh-English) is 0.440 with the YiSi-1 metric.\nThe table presents the performance of various metrics for evaluating machine translation quality across three language pairs: German-Czech (de-cs), German-French (de-fr), and French-German (fr-de). The metrics assessed are BLEU, chrF, YiSi-1, BERTScore (using both default and XLM-R base settings), and three variations of COMET: COMET-HTER, COMET-MQM, and COMET-RANK. Each metric shows its corresponding score for each language pair, with higher scores typically indicating better translation quality. Notably, COMET-RANK achieves the highest scores in its respective language pairs when compared to other metrics.\ners. Even the MQM Estimator, trained with only 12K segments, is competitive, which highlights the power of our proposed framework. \n5.5 The Importance of the Source \nTo shed some light on the actual value and contri- bution of the source language input in our models’ ability to learn accurate predictions, we trained two versions of our  DA RR Ranker model: one that uses only the reference, and another that uses both refer- ence and source. Both models were trained using the WMT 2017 corpus that only includes language pairs from English (en-de, en-cs, en-ﬁ, en-tr). In other words, while English was never observed as a target language during training for both variants of the model, the training of the second variant in- cludes English source embeddings. We then tested these two model variants on the WMT 2018 corpus for these language pairs and for the reversed di- rections (with the exception of en-cs because cs-en does not exist for WMT 2018). The results in Table \nThe image consists of two line graphs that display the performance of various metrics across different sets of machine translation (MT) systems. The caption indicates that the metrics' performances are evaluated over all systems, as well as the top 10, 8, 6, and 4 systems.\n\nThe top graph shows the performance for translations from language X to English, while the bottom graph shows the performance for translations from English to language X. \n\nIn both graphs, the y-axis represents the Kendall Tau (τ) statistic, which is a measure of correlation, while the x-axis shows different groups of MT systems evaluated: all, top 10, top 8, top 6, and top 4. \n\nThe metrics evaluated include:\n- COMET-RANK (cyan line)\n- COMET-MQM (dark blue line)\n- COMET-HTER (blue line)\n- BLEU (red line)\n- BERTSCORE (brown line)\n- BLEURT (yellow line)\n\nFrom the graphs, it is evident that COMET metrics (Rank, MQM, HTER) and BERTSCORE generally perform better than BLEU and BLEURT across different sets of systems, as indicated by higher Kendall Tau values. BLEU shows the lowest performance as demonstrated by the downward trend in the red line.\n4  clearly show that for the translation ranking archi- tecture, including the source improves the overall correlation with human judgments. Furthermore, the inclusion of the source exposed the second vari- ant of the model to English embeddings which is "}
{"page": 7, "image_path": "doc_images/2020.emnlp-main.213_7.jpg", "ocr_text": "Table 4: Comparison between COMET-RANK (section 2.4) and a reference-only version thereof on WMT18 data.\nBoth models were trained with WMT17 which means that the reference-only model is never exposed to English\n\nduring training.\n\nMetric en-cs en-de en-fi en-tr cs-en de-en fi-en  tr-en\nCOMET-RANK (ref. only) | 0.660 0.764 0.630 0.539 | 0.249 0.390 0.159 0.128\nCOMET-RANK 0.711 0.799 0.671 0.563 | 0.356 0.542 0.278 0.260\nAr 0.051 0.035 0.041 0.024 | 0.107 0.155 0.119 0.132\n\nreflected in a higher Av for the language pairs with\nEnglish as a target.\n\n6 Reproducibility\n\nWe will release both the code-base of the COMET\nframework and the trained MT evaluation models\ndescribed in this paper to the research community\nupon publication, along with the detailed scripts\nrequired in order to run all reported baselines.° All\nthe models reported in this paper were trained on a\nsingle Tesla T4 (16GB) GPU. Moreover, our frame-\nwork builds on top of PyTorch Lightning (Falcon,\n2019), a lightweight PyTorch wrapper, that was\ncreated for maximal flexibility and reproducibility.\n\n7 Related Work\n\nClassic MT evaluation metrics are commonly char-\nacterized as n-gram matching metrics because,\nusing hand-crafted features, they estimate MT qual-\nity by counting the number and fraction of n-\ngrams that appear simultaneous in a candidate\ntranslation hypothesis and one or more human-\nreferences. Metrics such as BLEU (Papineni et al.,\n2002), METEOR (Lavie and Denkowski, 2009),\nand CHRF (Popovic, 2015) have been widely stud-\nied and improved (Koehn et al., 2007; Popovic,\n2017; Denkowski and Lavie, 2011; Guo and Hu,\n2019), but, by design, they usually fail to recognize\nand capture semantic similarity beyond the lexical\nlevel.\n\nIn recent years, word embeddings (Mikolov\net al., 2013; Pennington et al., 2014; Peters et al.,\n2018; Devlin et al., 2019) have emerged as a com-\nmonly used alternative to n-gram matching for\ncapturing word semantics similarity. Embedding-\nbased metrics like METEOR-VECTOR (Servan\net al., 2016), BLEU2VEC (Tattar and Fishel, 2017),\nYISI-1 (Lo, 2019), MOVERSCORE (Zhao et al.,\n2019), and BERTSCORE (Zhang et al., 2020) create\nsoft-alignments between reference and hypothesis\n\nThese will be hosted at: https://github.com/\nUnbabel/COMET\n\nin an embedding space and then compute a score\nhat reflects the semantic similarity between those\nsegments. However, human judgements such as\nDA and MQM, capture much more than just se-\nmantic similarity, resulting in a correlation upper-\nbound between human judgements and the scores\nproduced by such metrics.\nLearnable metrics (Shimanaka et al., 2018;\nMathur et al., 2019; Shimanaka et al., 2019) at-\nempt to directly optimize the correlation with hu-\nman judgments, and have recently shown promis-\ning results. BLEURT (Sellam et al., 2020), a learn-\nable metric based on BERT (Devlin et al., 2019),\nclaims state-of-the-art performance for the last 3\nyears of the WMT Metrics Shared task. Because\nBLEURT builds on top of English-BERT (Devlin\net al., 2019), it can only be used when English is the\ntarget language which limits its applicability. Also,\nto the best of our knowledge, all the previously\nproposed learnable metrics have focused on opti-\nmizing DA which, due to a scarcity of annotators,\ncan prove inherently noisy (Ma et al., 2019).\nReference-less MT evaluation, also known as\nQuality Estimation (QE), has historically often re-\ngressed on HTER for segment-level evaluation (Bo-\njar et al., 2013, 2014, 2015, 2016, 2017a). More\nrecently, MQM has been used for document-level\nevaluation (Specia et al., 2018; Fonseca et al.,\n2019). By leveraging highly multilingual pre-\ntrained encoders such as multilingual BERT (De-\nvlin et al., 2019) and XLM (Conneau and Lam-\nple, 2019), QE systems have been showing aus-\npicious correlations with human judgements (Ke-\npler et al., 2019a). Concurrently, the OpenKiwi\nframework (Kepler et al., 2019b) has made it easier\nfor researchers to push the field forward and build\nstronger QE models.\n\n8 Conclusions and Future Work\n\nIn this paper we present COMET, a novel neu-\nral framework for training MT evaluation models\nthat can serve as automatic metrics and easily be\n\n2692\n", "vlm_text": "The table presents the results of a translation performance metric called COMET-RANK for various language pairs. The first row lists the language pairs, using ISO language codes; for example, \"en-cs\" refers to English to Czech, and \"cs-en\" refers to Czech to English. The metrics are evaluated in two scenarios: using only reference translations (COMET-RANK (ref. only)) and using the COMET-RANK metric more generally. The values in this table represent scores that likely indicate the quality of translation, with higher values suggesting better performance. \n\nThe last row, labeled \"Δτ,\" shows the difference between the COMET-RANK score without using reference translations and the score using reference translations. This value indicates the improvement in the metric when references are included. \n\nHere are the details for each metric and language pair:\n\n- For \"en-cs,\" the scores are 0.660 (ref. only) and 0.711, with a Δτ of 0.051.\n- For \"en-de,\" the scores are 0.764 (ref. only) and 0.799, with a Δτ of 0.035.\n- For \"en-fi,\" the scores are 0.630 (ref. only) and 0.671, with a Δτ of 0.041.\n- For \"en-tr,\" the scores are 0.539 (ref. only) and 0.563, with a Δτ of 0.024.\n- For \"cs-en,\" the scores are 0.249 (ref. only) and 0.356, with a Δτ of 0.107.\n- For \"de-en,\" the scores are 0.390 (ref. only) and 0.542, with a Δτ of 0.155.\n- For \"fi-en,\" the scores are 0.159 (ref. only) and 0.278, with a Δτ of 0.119.\n- For \"tr-en,\" the scores are 0.128 (ref. only) and 0.260, with a Δτ of 0.132.\n\nThis suggests that the inclusion of references improves the COMET-RANK score across all languages, with the most significant improvements observed in the reverse language pairs (source to English).\nreﬂected in a higher    $\\Delta\\tau$   for the language pairs with English as a target. \n6 Reproducibility \nWe will release both the code-base of the C OMET framework and the trained MT evaluation models described in this paper to the research community upon publication, along with the detailed scripts required in order to run all reported baselines.   All the models reported in this paper were trained on a single Tesla T4 (16GB) GPU. Moreover, our frame- work builds on top of PyTorch Lightning ( Falcon , 2019 ), a lightweight PyTorch wrapper, that was created for maximal ﬂexibility and reproducibility. \n7 Related Work \nClassic MT evaluation metrics are commonly char- acterized as  $n$  -gram matching metrics  because, using hand-crafted features, they estimate MT qual- ity by counting the number and fraction of    $n$  - grams that appear simultaneous in a candidate translation hypothesis and one or more human- references. Metrics such as B LEU  ( Papineni et al. , 2002 ), M ETEOR  ( Lavie and Denkowski ,  2009 ), and  CHR F ( Popovi c ,  2015 ) have been widely stud- ied and improved ( Koehn et al. ,  2007 ;  Popovi c , 2017 ;  Denkowski and Lavie ,  2011 ;  Guo and Hu , 2019 ), but, by design, they usually fail to recognize and capture semantic similarity beyond the lexical level. \nIn recent years, word embeddings ( Mikolov et al. ,  2013 ;  Pennington et al. ,  2014 ;  Peters et al. , 2018 ;  Devlin et al. ,  2019 ) have emerged as a com- monly used alternative to    $n$  -gram matching for capturing word semantics similarity.  Embedding- based metrics  like M ETEOR -V ECTOR  ( Servan et al. ,  2016 ), B LEU 2 VEC  ( T attar and Fishel ,  2017 ), Y I S I -1 ( Lo ,  2019 ), M OVER S CORE  ( Zhao et al. , 2019 ), and B ERTSCORE  ( Zhang et al. ,  2020 ) create soft-alignments between reference and hypothesis in an embedding space and then compute a score that reﬂects the semantic similarity between those segments. However, human judgements such as DA and MQM, capture much more than just se- mantic similarity, resulting in a correlation upper- bound between human judgements and the scores produced by such metrics. \n\nLearnable metrics  ( Shimanaka et al. ,  2018 ; Mathur et al. ,  2019 ;  Shimanaka et al. ,  2019 ) at- tempt to directly optimize the correlation with hu- man judgments, and have recently shown promis- ing results. B LEURT  ( Sellam et al. ,  2020 ), a learn- able metric based on BERT ( Devlin et al. ,  2019 ), claims state-of-the-art performance for the last 3 years of the WMT Metrics Shared task. Because B LEURT  builds on top of English-BERT ( Devlin et al. ,  2019 ), it can only be used when English is the target language which limits its applicability. Also, to the best of our knowledge, all the previously proposed learnable metrics have focused on opti- mizing DA which, due to a scarcity of annotators, can prove inherently noisy ( Ma et al. ,  2019 ). \nReference-less MT evaluation , also known as Quality Estimation (QE), has historically often re- gressed on HTER for segment-level evaluation ( Bo- jar et al. ,  2013 ,  2014 ,  2015 ,  2016 ,  2017a ). More recently, MQM has been used for document-level evaluation ( Specia et al. ,  2018 ;  Fonseca et al. , 2019 ). By leveraging highly multilingual pre- trained encoders such as multilingual BERT ( De- vlin et al. ,  2019 ) and XLM ( Conneau and Lam- ple ,  2019 ), QE systems have been showing aus- picious correlations with human judgements ( Ke- pler et al. ,  2019a ). Concurrently, the OpenKiwi framework ( Kepler et al. ,  2019b ) has made it easier for researchers to push the ﬁeld forward and build stronger QE models. \n8 Conclusions and Future Work \nIn this paper we present C OMET , a novel neu- ral framework for training MT evaluation models that can serve as automatic metrics and easily be adapted and optimized to different types of human judgements of MT quality. "}
{"page": 8, "image_path": "doc_images/2020.emnlp-main.213_8.jpg", "ocr_text": "adapted and optimized to different types of human\njudgements of MT quality.\n\nTo showcase the effectiveness of our framework,\nwe sought to address the challenges reported in the\n2019 WMT Metrics Shared Task (Ma et al., 2019).\nWe trained three distinct models which achieve new\nstate-of-the-art results for segment-level correlation\nwith human judgments, and show promising ability\nto better differentiate high-performing systems.\n\nOne of the challenges of leveraging the power of\npretrained models is the burdensome weight of pa-\nrameters and inference time. A primary avenue for\nfuture work on COMET will look at the impact of\nmore compact solutions such as Disti[BERT (Sanh\net al., 2019).\n\nAdditionally, whilst we outline the potential im-\nportance of the source text above, we note that our\nCOMET-RANK model weighs source and reference\ndifferently during inference but equally in its train-\ning loss function. Future work will investigate the\noptimality of this formulation and further examine\nthe interdependence of the different inputs.\n\nAcknowledgments\n\nWe are grateful to André Martins, Austin Matthews,\nFabio Kepler, Daan Van Stigt, Miguel Vera, and\nthe reviewers, for their valuable feedback and dis-\ncussions. This work was supported in part by the\nP2020 Program through projects MATA and Unba-\nbel4EU, supervised by ANI under contract num-\nbers 045909 and 042671, respectively.\n\nReferences\n\nMikel Artetxe and Holger Schwenk. 2019. Mas-\nsively multilingual sentence embeddings for zero-\nshot cross-lingual transfer and beyond. Transac-\ntions of the Association for Computational Linguis-\ntics, 7:597-610.\n\nLoic Barrault, Ondfej Bojar, Marta R. Costa-jussa,\nChristian Federmann, Mark Fishel, Yvette Gra-\nham, Barry Haddow, Matthias Huck, Philipp Koehn,\nShervin Malmasi, Christof Monz, Mathias Miiller,\nSantanu Pal, Matt Post, and Marcos Zampieri. 2019.\nFindings of the 2019 conference on machine transla-\ntion (WMT19). In Proceedings of the Fourth Con-\nference on Machine Translation (Volume 2: Shared\nTask Papers, Day 1), pages 1-61, Florence, Italy. As-\nsociation for Computational Linguistics.\n\nOndyej Bojar, Christian Buck, Chris Callison-Burch,\nChristian Federmann, Barry Haddow, Philipp\nKoehn, Christof Monz, Matt Post, Radu Soricut, and\n\nLucia Specia. 2013. Findings of the 2013 Work-\nshop on Statistical Machine Translation. In Proceed-\nings of the Eighth Workshop on Statistical Machine\nTranslation, pages 1-44, Sofia, Bulgaria. Associa-\ntion for Computational Linguistics.\n\nOndfej Bojar, Christian Buck, Christian Federmann,\nBarry Haddow, Philipp Koehn, Johannes Leveling,\nChristof Monz, Pavel Pecina, Matt Post, Herve\nSaint-Amand, Radu Soricut, Lucia Specia, and Ales\nTamchyna. 2014. Findings of the 2014 workshop on\nstatistical machine translation. In Proceedings of the\nNinth Workshop on Statistical Machine Translation,\npages 12-58, Baltimore, Maryland, USA. Associa-\ntion for Computational Linguistics.\n\nOndfej Bojar, Rajen Chatterjee, Christian Federmann,\nYvette Graham, Barry Haddow, Shujian Huang,\nMatthias Huck, Philipp Koehn, Qun Liu, Varvara Lo-\ngacheva, Christof Monz, Matteo Negri, Matt Post,\nRaphael Rubino, Lucia Specia, and Marco Turchi.\n2017a. Findings of the 2017 conference on machine\ntranslation (WMT17). In Proceedings of the Sec-\nond Conference on Machine Translation, pages 169-\n214, Copenhagen, Denmark. Association for Com-\nputational Linguistics.\n\nOndfej Bojar, Rajen Chatterjee, Christian Federmann,\nYvette Graham, Barry Haddow, Matthias Huck, An-\ntonio Jimeno Yepes, Philipp Koehn, Varvara Lo-\ngacheva, Christof Monz, Matteo Negri, Aurélie\nNévéol, Mariana Neves, Martin Popel, Matt Post,\nRaphael Rubino, Carolina Scarton, Lucia Spe-\ncia, Marco Turchi, Karin Verspoor, and Marcos\nZampieri. 2016. Findings of the 2016 conference\non machine translation. In Proceedings of the\nFirst Conference on Machine Translation: Volume\n2, Shared Task Papers, pages 131-198, Berlin, Ger-\nmany. Association for Computational Linguistics.\n\nOndfej Bojar, Rajen Chatterjee, Christian Federmann,\nBarry Haddow, Matthias Huck, Chris Hokamp,\nPhilipp Koehn, Varvara Logacheva, Christof Monz,\nMatteo Negri, Matt Post, Carolina Scarton, Lucia\nSpecia, and Marco Turchi. 2015. Findings of the\n2015 workshop on statistical machine translation. In\nProceedings of the Tenth Workshop on Statistical\nMachine Translation, pages 1-46, Lisbon, Portugal.\nAssociation for Computational Linguistics.\n\nOndyej Bojar, Yvette Graham, and Amir Kamran.\n2017b. Results of the WMT17 metrics shared\ntask. In Proceedings of the Second Conference on\nMachine Translation, pages 489-513, Copenhagen,\nDenmark. Association for Computational Linguis-\ntics.\n\nAljoscha Burchardt and Arle Lommel. 2014. Practi-\ncal Guidelines for the Use of MQM in Scientific Re-\nsearch on Translation quality. (access date: 2020-\n05-26).\n\nAlexis Conneau, Kartikay Khandelwal, Naman Goyal,\nVishrav Chaudhary, Guillaume Wenzek, Francisco\n\n2693\n", "vlm_text": "\nTo showcase the effectiveness of our framework, we sought to address the challenges reported in the 2019 WMT Metrics Shared Task ( Ma et al. ,  2019 ). We trained three distinct models which achieve new state-of-the-art results for segment-level correlation with human judgments, and show promising ability to better differentiate high-performing systems. \nOne of the challenges of leveraging the power of pretrained models is the burdensome weight of pa- rameters and inference time. A primary avenue for future work on C OMET  will look at the impact of more compact solutions such as DistilBERT ( Sanh et al. ,  2019 ). \nAdditionally, whilst we outline the potential im- portance of the source text above, we note that our C OMET - RANK  model weighs source and reference differently during inference but equally in its train- ing loss function. Future work will investigate the optimality of this formulation and further examine the interdependence of the different inputs. \nAcknowledgments \nWe are grateful to Andr e Martins, Austin Matthews, Fabio Kepler, Daan Van Stigt, Miguel Vera, and the reviewers, for their valuable feedback and dis- cussions. This work was supported in part by the P2020 Program through projects MAIA and Unba- bel4EU, supervised by ANI under contract num- bers 045909 and 042671, respectively. \nReferences \nMikel Artetxe and Holger Schwenk. 2019. Mas- sively multilingual sentence embeddings for zero- shot cross-lingual transfer and beyond . Transac- tions of the Association for Computational Linguis- tics , 7:597–610. \nLo¨ ıc Barrault, Ondˇ rej Bojar, Marta R. Costa-juss\\` a, Christian Federmann, Mark Fishel, Yvette Gra- ham, Barry Haddow, Matthias Huck, Philipp Koehn, Shervin Malmasi, Christof Monz, Mathias M¨ uller, Santanu Pal, Matt Post, and Marcos Zampieri. 2019. Findings of the 2019 conference on machine transla- tion (WMT19) . In  Proceedings of the Fourth Con- ference on Machine Translation (Volume 2: Shared Task Papers, Day 1) , pages 1–61, Florence, Italy. As- sociation for Computational Linguistics. \nOndˇ rej Bojar, Christian Buck, Chris Callison-Burch, Christian Federmann, Barry Haddow, Philipp Koehn, Christof Monz, Matt Post, Radu Soricut, and \nLucia Specia. 2013. Findings of the 2013 Work- shop on Statistical Machine Translation . In  Proceed- ings of the Eighth Workshop on Statistical Machine Translation , pages 1–44, Soﬁa, Bulgaria. Associa- tion for Computational Linguistics. \nOndˇ rej Bojar, Christian Buck, Christian Federmann, Barry Haddow, Philipp Koehn, Johannes Leveling, Christof Monz, Pavel Pecina, Matt Post, Herve Saint-Amand, Radu Soricut, Lucia Specia, and Aleˇ Tamchyna. 2014.  Findings of the 2014 workshop on statistical machine translation . In  Proceedings of the Ninth Workshop on Statistical Machine Translation , pages 12–58, Baltimore, Maryland, USA. Associa- tion for Computational Linguistics. \nOndˇ rej Bojar, Rajen Chatterjee, Christian Federmann, Yvette Graham, Barry Haddow, Shujian Huang, Matthias Huck, Philipp Koehn, Qun Liu, Varvara Lo- gacheva, Christof Monz, Matteo Negri, Matt Post, Raphael Rubino, Lucia Specia, and Marco Turchi. 2017a.  Findings of the 2017 conference on machine translation (WMT17) . In  Proceedings of the Sec- ond Conference on Machine Translation , pages 169– 214, Copenhagen, Denmark. Association for Com- putational Linguistics. \nOndˇ rej Bojar, Rajen Chatterjee, Christian Federmann, Yvette Graham, Barry Haddow, Matthias Huck, An- tonio Jimeno Yepes, Philipp Koehn, Varvara Lo- gacheva, Christof Monz, Matteo Negri, Aur´ elie N´ ev´ eol, Mariana Neves, Martin Popel, Matt Post, Raphael Rubino, Carolina Scarton, Lucia Spe- cia, Marco Turchi, Karin Verspoor, and Marcos Zampieri. 2016.  Findings of the 2016 conference on machine translation . In  Proceedings of the First Conference on Machine Translation: Volume 2, Shared Task Papers , pages 131–198, Berlin, Ger- many. Association for Computational Linguistics. \nOndˇ rej Bojar, Rajen Chatterjee, Christian Federmann, Barry Haddow, Matthias Huck, Chris Hokamp, Philipp Koehn, Varvara Logacheva, Christof Monz, Matteo Negri, Matt Post, Carolina Scarton, Lucia Specia, and Marco Turchi. 2015. Findings of the 2015 workshop on statistical machine translation . In Proceedings of the Tenth Workshop on Statistical Machine Translation , pages 1–46, Lisbon, Portugal. Association for Computational Linguistics. \nOndˇ rej Bojar, Yvette Graham, and Amir Kamran. 2017b. Results of the WMT17 metrics shared task . In  Proceedings of the Second Conference on Machine Translation , pages 489–513, Copenhagen, Denmark. Association for Computational Linguis- tics. \nAljoscha Burchardt and Arle Lommel. 2014. Practi- cal Guidelines for the Use of MQM in Scientiﬁc Re- search on Translation quality.  (access date: 2020- 05-26). \nAlexis Conneau, Kartikay Khandelwal, Naman Goyal, Vishrav Chaudhary, Guillaume Wenzek, Francisco "}
{"page": 9, "image_path": "doc_images/2020.emnlp-main.213_9.jpg", "ocr_text": "Guzman, Edouard Grave, Myle Ott, Luke Zettle-\nmoyer, and Veselin Stoyanov. 2019. Unsupervised\ncross-lingual representation learning at scale. arXiv\npreprint arXiv:1911.02116.\n\nAlexis Conneau and Guillaume Lample. 2019. Cross-\nlingual language model pretraining. In H. Wal-\nlach, H. Larochelle, A. Beygelzimer, F. d‘Alché Buc,\nE. Fox, and R. Garnett, editors, Advances in Neu-\nral Information Processing Systems 32, pages 7059-\n7069. Curran Associates, Inc.\n\nMichael Denkowski and Alon Lavie. 2011. Meteor 1.3:\nAutomatic metric for reliable optimization and eval-\nuation of machine translation systems. In Proceed-\nings of the Sixth Workshop on Statistical Machine\nTranslation, pages 85-91, Edinburgh, Scotland. As-\nsociation for Computational Linguistics.\n\nJacob Devlin, Ming-Wei Chang, Kenton Lee, and\nKristina Toutanova. 2019. BERT: Pre-training of\ndeep bidirectional transformers for language under-\nstanding. In Proceedings of the 2019 Conference\nof the North American Chapter of the Association\nfor Computational Linguistics: Human Language\nTechnologies, Volume I (Long and Short Papers),\npages 4171-4186, Minneapolis, Minnesota. Associ-\nation for Computational Linguistics.\n\nWA Falcon. 2019. PyTorch Lightning: The lightweight\nPyTorch wrapper for high-performance AI research.\nGitHub.\n\nErick Fonseca, Lisa Yankovskaya, André F. T. Martins,\nMark Fishel, and Christian Federmann. 2019. Find-\nings of the WMT 2019 shared tasks on quality esti-\nmation. In Proceedings of the Fourth Conference on\nMachine Translation (Volume 3: Shared Task Papers,\nDay 2), pages 1-10, Florence, Italy. Association for\nComputational Linguistics.\n\nYvette Graham, Timothy Baldwin, Alistair Moffat, and\nJustin Zobel. 2013. Continuous measurement scales\nin human evaluation of machine translation. In Pro-\nceedings of the 7th Linguistic Annotation Workshop\nand Interoperability with Discourse, pages 33-41,\nSofia, Bulgaria. Association for Computational Lin-\nguistics.\n\nYvette Graham, Timothy Baldwin, Alistair Moffat, and\nJustin Zobel. 2014. Is machine translation getting\nbetter over time? In Proceedings of the 14th Confer-\nence of the European Chapter of the Association for\nComputational Linguistics, pages 443-451, Gothen-\nburg, Sweden. Association for Computational Lin-\nguistics.\n\nYvette Graham, Timothy Baldwin, Alistair Moffat, and\nJustin Zobel. 2017. Can machine translation sys-\ntems be evaluated by the crowd alone. Natural Lan-\nguage Engineering, 23(1):330.\n\nYinuo Guo and Junfeng Hu. 2019. Meteor++ 2.0:\nAdopt syntactic level paraphrase knowledge into ma-\nchine translation evaluation. In Proceedings of the\n\nFourth Conference on Machine Translation (Volume\n2: Shared Task Papers, Day 1), pages 501-506, Flo-\nrence, Italy. Association for Computational Linguis-\ntics.\n\nJeremy Howard and Sebastian Ruder. 2018. Universal\nlanguage model fine-tuning for text classification. In\nProceedings of the 56th Annual Meeting of the As-\nsociation for Computational Linguistics (Volume 1:\nLong Papers), pages 328-339, Melbourne, Australia.\nAssociation for Computational Linguistics.\n\nFabio Kepler, Jonay Trénous, Marcos Treviso, Miguel\nVera, Anténio Gdis, M. Amin Farajian, Anténio V.\nLopes, and André F. T. Martins. 2019a.  Unba-\nbel’s participation in the WMT19 translation qual-\nity estimation shared task. In Proceedings of the\nFourth Conference on Machine Translation (Volume\n3: Shared Task Papers, Day 2), pages 78-84, Flo-\nrence, Italy. Association for Computational Linguis-\ntics.\n\nFabio Kepler, Jonay Trénous, Marcos Treviso, Miguel\nVera, and André F. T. Martins. 2019b. OpenKiwi:\nAn open source framework for quality estimation.\nIn Proceedings of the 57th Annual Meeting of the\nAssociation for Computational Linguistics: System\nDemonstrations, pages 117-122, Florence, Italy. As-\nsociation for Computational Linguistics.\n\nPhilipp Koehn, Hieu Hoang, Alexandra Birch, Chris\nCallison-Burch, Marcello Federico, Nicola Bertoldi,\nBrooke Cowan, Wade Shen, Christine Moran,\nRichard Zens, Chris Dyer, Ondéej Bojar, Alexandra\nConstantin, and Evan Herbst. 2007. Moses: Open\nsource toolkit for statistical machine translation. In\nProceedings of the 45th Annual Meeting of the As-\nsociation for Computational Linguistics Companion\nVolume Proceedings of the Demo and Poster Ses-\nsions, pages 177-180, Prague, Czech Republic. As-\nsociation for Computational Linguistics.\n\nDan Kondratyuk and Milan Straka. 2019. 75 lan-\nguages, 1 model: Parsing universal dependencies\nuniversally. In Proceedings of the 2019 Confer-\nence on Empirical Methods in Natural Language\nProcessing and the 9th International Joint Confer-\nence on Natural Language Processing (EMNLP-\nIJCNLP), pages 2779-2795, Hong Kong, China. As-\nsociation for Computational Linguistics.\n\nAlon Lavie and Michael Denkowski. 2009. The meteor\nmetric for automatic evaluation of machine transla-\ntion. Machine Translation, 23:105—-115.\n\nChi-kiu Lo. 2019. YiSi - a unified semantic MT quality\nevaluation and estimation metric for languages with\ndifferent levels of available resources. In Proceed-\nings of the Fourth Conference on Machine Transla-\ntion (Volume 2: Shared Task Papers, Day 1), pages\n507-513, Florence, Italy. Association for Computa-\ntional Linguistics.\n\nArle Lommel, Aljoscha Burchardt, and Hans Uszkoreit.\n2014. Multidimensional quality metrics (MQM): A\n\n2694\n", "vlm_text": "Guzm´ an, Edouard Grave, Myle Ott, Luke Zettle- moyer, and Veselin Stoyanov. 2019.  Unsupervised cross-lingual representation learning at scale .  arXiv preprint arXiv:1911.02116 . \nAlexis Conneau and Guillaume Lample. 2019.  Cross- lingual language model pretraining . In H. Wal- lach, H. Larochelle, A. Beygelzimer, F. d‘Alch´ e Buc, E. Fox, and R. Garnett, editors,  Advances in Neu- ral Information Processing Systems 32 , pages 7059– 7069. Curran Associates, Inc. \nMichael Denkowski and Alon Lavie. 2011.  Meteor 1.3: Automatic metric for reliable optimization and eval- uation of machine translation systems . In  Proceed- ings of the Sixth Workshop on Statistical Machine Translation , pages 85–91, Edinburgh, Scotland. As- sociation for Computational Linguistics. \nJacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. 2019. BERT: Pre-training of deep bidirectional transformers for language under- standing . In  Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long and Short Papers) , pages 4171–4186, Minneapolis, Minnesota. Associ- ation for Computational Linguistics. \nWA Falcon. 2019.  PyTorch Lightning: The lightweight PyTorch wrapper for high-performance AI research GitHub . \nErick Fonseca, Lisa Yankovskaya, Andr´ e F. T. Martins, Mark Fishel, and Christian Federmann. 2019.  Find- ings of the WMT 2019 shared tasks on quality esti- mation . In  Proceedings of the Fourth Conference on Machine Translation (Volume 3: Shared Task Papers, Day 2) , pages 1–10, Florence, Italy. Association for Computational Linguistics. \nYvette Graham, Timothy Baldwin, Alistair Moffat, and Justin Zobel. 2013.  Continuous measurement scales in human evaluation of machine translation . In  Pro- ceedings of the 7th Linguistic Annotation Workshop and Interoperability with Discourse , pages 33–41, Soﬁa, Bulgaria. Association for Computational Lin- guistics. \nYvette Graham, Timothy Baldwin, Alistair Moffat, and Justin Zobel. 2014.  Is machine translation getting better over time?  In  Proceedings of the 14th Confer- ence of the European Chapter of the Association for Computational Linguistics , pages 443–451, Gothen- burg, Sweden. Association for Computational Lin- guistics. \nYvette Graham, Timothy Baldwin, Alistair Moffat, and Justin Zobel. 2017. Can machine translation sys- tems be evaluated by the crowd alone .  Natural Lan- guage Engineering , 23(1):330. \nYinuo Guo and Junfeng Hu. 2019. Meteor  $\\mathrm{++}\\ 2.0$  : Adopt syntactic level paraphrase knowledge into ma- chine translation evaluation . In  Proceedings of the \nFourth Conference on Machine Translation (Volume 2: Shared Task Papers, Day 1) , pages 501–506, Flo- rence, Italy. Association for Computational Linguis- tics. \nJeremy Howard and Sebastian Ruder. 2018.  Universal language model ﬁne-tuning for text classiﬁcation . In Proceedings of the 56th Annual Meeting of the As- sociation for Computational Linguistics (Volume 1: Long Papers) , pages 328–339, Melbourne, Australia. Association for Computational Linguistics. \nFabio Kepler, Jonay Tr´ enous, Marcos Treviso, Miguel Vera, Ant´ onio G´ ois, M. Amin Farajian, Ant´ onio V. Lopes, and Andr´ e F. T. Martins. 2019a. Unba- bel’s participation in the WMT19 translation qual- ity estimation shared task . In  Proceedings of the Fourth Conference on Machine Translation (Volume 3: Shared Task Papers, Day 2) , pages 78–84, Flo- rence, Italy. Association for Computational Linguis- tics. \nFabio Kepler, Jonay Tr´ enous, Marcos Treviso, Miguel Vera, and Andr´ e F. T. Martins. 2019b.  OpenKiwi: An open source framework for quality estimation . In  Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics: System Demonstrations , pages 117–122, Florence, Italy. As- sociation for Computational Linguistics. \nPhilipp Koehn, Hieu Hoang, Alexandra Birch, Chris Callison-Burch, Marcello Federico, Nicola Bertoldi, Brooke Cowan, Wade Shen, Christine Moran, Richard Zens, Chris Dyer, Ondˇ rej Bojar, Alexandra Constantin, and Evan Herbst. 2007.  Moses: Open source toolkit for statistical machine translation . In Proceedings of the 45th Annual Meeting of the As- sociation for Computational Linguistics Companion Volume Proceedings of the Demo and Poster Ses- sions , pages 177–180, Prague, Czech Republic. As- sociation for Computational Linguistics. \nDan Kondratyuk and Milan Straka. 2019. 75 lan- guages, 1 model: Parsing universal dependencies universally . In  Proceedings of the 2019 Confer- ence on Empirical Methods in Natural Language Processing and the 9th International Joint Confer- ence on Natural Language Processing (EMNLP- IJCNLP) , pages 2779–2795, Hong Kong, China. As- sociation for Computational Linguistics. \nAlon Lavie and Michael Denkowski. 2009.  The meteor metric for automatic evaluation of machine transla- tion .  Machine Translation , 23:105–115. \nChi-kiu Lo. 2019.  YiSi - a uniﬁed semantic MT quality evaluation and estimation metric for languages with different levels of available resources . In  Proceed- ings of the Fourth Conference on Machine Transla- tion (Volume 2: Shared Task Papers, Day 1) , pages 507–513, Florence, Italy. Association for Computa- tional Linguistics. \nArle Lommel, Aljoscha Burchardt, and Hans Uszkoreit. 2014.  Multidimensional quality metrics (MQM): A "}
{"page": 10, "image_path": "doc_images/2020.emnlp-main.213_10.jpg", "ocr_text": "framework for declaring and describing translation\nquality metrics. Tradumtica: tecnologies de la tra-\nducci, 0:455—463.\n\nQingsong Ma, Ondfej Bojar, and Yvette Graham. 2018.\nResults of the WMT18 metrics shared task: Both\ncharacters and embeddings achieve good perfor-\nmance. In Proceedings of the Third Conference on\nMachine Translation: Shared Task Papers, pages\n671-688, Belgium, Brussels. Association for Com-\nputational Linguistics.\n\nQingsong Ma, Johnny Wei, Ondiej Bojar, and Yvette\nGraham. 2019. Results of the WMT19 metrics\nshared task: Segment-level and strong MT sys-\ntems pose big challenges. In Proceedings of the\nFourth Conference on Machine Translation (Volume\n2: Shared Task Papers, Day 1), pages 62-90, Flo-\nrence, Italy. Association for Computational Linguis-\ntics.\n\nNitika Mathur, Timothy Baldwin, and Trevor Cohn.\n2019. Putting evaluation in context: Contextual\nembeddings improve machine translation evaluation.\nIn Proceedings of the 57th Annual Meeting of the\nAssociation for Computational Linguistics, pages\n2799-2808, Florence, Italy. Association for Compu-\ntational Linguistics.\n\nTomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-\nrado, and Jeff Dean. 2013. Distributed representa-\ntions of words and phrases and their compositional-\nity. In Advances in Neural Information Processing\nSystems 26, pages 3111-3119. Curran Associates,\nInc.\n\nKishore Papineni, Salim Roukos, Todd Ward, and Wei-\nJing Zhu. 2002. Bleu: a method for automatic eval-\nuation of machine translation. In Proceedings of\nthe 40th Annual Meeting of the Association for Com-\nputational Linguistics, pages 311-318, Philadelphia,\nPennsylvania, USA. Association for Computational\nLinguistics.\n\nJeffrey Pennington, Richard Socher, and Christopher\nManning. 2014. Glove: Global vectors for word rep-\nresentation. In Proceedings of the 2014 Conference\non Empirical Methods in Natural Language Process-\ning (EMNLP), pages 1532-1543, Doha, Qatar. Asso-\nciation for Computational Linguistics.\n\nMatthew Peters, Mark Neumann, Mohit Lyyer, Matt\nGardner, Christopher Clark, Kenton Lee, and Luke\nZettlemoyer. 2018. Deep contextualized word rep-\nresentations. In Proceedings of the 2018 Confer-\nence of the North American Chapter of the Associ-\nation for Computational Linguistics: Human Lan-\nguage Technologies, Volume 1 (Long Papers), pages\n2227-2237, New Orleans, Louisiana. Association\nfor Computational Linguistics.\n\nTelmo Pires, Eva Schlinger, and Dan Garrette. 2019.\nHow multilingual is multilingual BERT? In Pro-\nceedings of the 57th Annual Meeting of the Asso-\nciation for Computational Linguistics, pages 4996—\n\n5001, Florence, Italy. Association for Computa-\ntional Linguistics.\n\nMaja Popovic. 2015. chrF: character n-gram f-score\nfor automatic MT evaluation. In Proceedings of the\nTenth Workshop on Statistical Machine Translation,\npages 392-395, Lisbon, Portugal. Association for\nComputational Linguistics.\n\nMaja Popovié. 2017. chrF++: words helping charac-\nter n-grams. In Proceedings of the Second Con-\nference on Machine Translation, pages 612-618,\nCopenhagen, Denmark. Association for Computa-\ntional Linguistics.\n\nNils Reimers and Iryna Gurevych. 2019. Sentence-\nBERT: Sentence embeddings using Siamese BERT-\nnetworks. In Proceedings of the 2019 Conference on\nEmpirical Methods in Natural Language Processing\nand the 9th International Joint Conference on Natu-\nral Language Processing (EMNLP-IJCNLP), pages\n3982-3992, Hong Kong, China. Association for\nComputational Linguistics.\n\nVictor Sanh, Lysandre Debut, Julien Chaumond, and\nThomas Wolf. 2019. Distilbert, a distilled version\nof BERT: smaller, faster, cheaper and lighter. arXiv\npreprint arXiv:1910.01108.\n\nF. Schroff, D. Kalenichenko, and J. Philbin. 2015.\nFacenet: A unified embedding for face recognition\nand clustering. In 20/5 IEEE Conference on Com-\nputer Vision and Pattern Recognition (CVPR), pages\n815-823.\n\nThibault Sellam, Dipanjan Das, and Ankur Parikh.\n2020. BLEURT: Learning robust metrics for text\ngeneration. In Proceedings of the 58th Annual Meet-\ning of the Association for Computational Linguistics,\npages 7881-7892, Online. Association for Computa-\ntional Linguistics.\n\nChristophe Servan, Alexandre Bérard, Zied Elloumi,\nHervé Blanchon, and Laurent Besacier. 2016.\nWord2Vec vs DBnary: Augmenting METEOR us-\ning vector representations or lexical resources? In\nProceedings of COLING 2016, the 26th Interna-\ntional Conference on Computational Linguistics:\nTechnical Papers, pages 1159-1168, Osaka, Japan.\nThe COLING 2016 Organizing Committee.\n\nHiroki Shimanaka, Tomoyuki Kajiwara, and Mamoru\nKomachi. 2018. RUSE: Regressor using sentence\nembeddings for automatic machine translation eval-\nuation. In Proceedings of the Third Conference on\nMachine Translation: Shared Task Papers, pages\n751-758, Belgium, Brussels. Association for Com-\nputational Linguistics.\n\nHiroki Shimanaka, Tomoyuki Kajiwara, and Mamoru\nKomachi. 2019. Machine Translation Evalu-\nation with BERT Regressor. arXiv preprint\narXiv:1907.12679.\n\n2695\n", "vlm_text": "framework for declaring and describing translation quality metrics .  Tradumtica: tecnologies de la tra- ducci , 0:455–463. \nQingsong Ma, Ondˇ rej Bojar, and Yvette Graham. 2018. Results of the WMT18 metrics shared task: Both characters and embeddings achieve good perfor- mance . In  Proceedings of the Third Conference on Machine Translation: Shared Task Papers , pages 671–688, Belgium, Brussels. Association for Com- putational Linguistics. \nQingsong Ma, Johnny Wei, Ondˇ rej Bojar, and Yvette Graham. 2019. Results of the WMT19 metrics shared task: Segment-level and strong MT sys- tems pose big challenges . In  Proceedings of the Fourth Conference on Machine Translation (Volume 2: Shared Task Papers, Day 1) , pages 62–90, Flo- rence, Italy. Association for Computational Linguis- tics. \nNitika Mathur, Timothy Baldwin, and Trevor Cohn. 2019. Putting evaluation in context: Contextual embeddings improve machine translation evaluation In  Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics , pages 2799–2808, Florence, Italy. Association for Compu- tational Linguistics. \nTomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor- rado, and Jeff Dean. 2013.  Distributed representa- tions of words and phrases and their compositional- ity . In  Advances in Neural Information Processing Systems 26 , pages 3111–3119. Curran Associates, Inc. \nKishore Papineni, Salim Roukos, Todd Ward, and Wei- Jing Zhu. 2002.  Bleu: a method for automatic eval- uation of machine translation . In  Proceedings of the 40th Annual Meeting of the Association for Com- putational Linguistics , pages 311–318, Philadelphia, Pennsylvania, USA. Association for Computational Linguistics. \nJeffrey Pennington, Richard Socher, and Christopher Manning. 2014.  Glove: Global vectors for word rep- resentation . In  Proceedings of the 2014 Conference on Empirical Methods in Natural Language Process- ing (EMNLP) , pages 1532–1543, Doha, Qatar. Asso- ciation for Computational Linguistics. \nMatthew Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke Zettlemoyer. 2018.  Deep contextualized word rep- resentations . In  Proceedings of the 2018 Confer- ence of the North American Chapter of the Associ- ation for Computational Linguistics: Human Lan- guage Technologies, Volume 1 (Long Papers) , pages 2227–2237, New Orleans, Louisiana. Association for Computational Linguistics. \nTelmo Pires, Eva Schlinger, and Dan Garrette. 2019. How multilingual is multilingual BERT? In  Pro- ceedings of the 57th Annual Meeting of the Asso- ciation for Computational Linguistics , pages 4996– \n5001, Florence, Italy. Association for Computa- tional Linguistics. \nMaja Popovi´ c. 2015.  chrF: character n-gram f-score for automatic MT evaluation . In  Proceedings of the Tenth Workshop on Statistical Machine Translation , pages 392–395, Lisbon, Portugal. Association for Computational Linguistics. \nMaja Popovi´ c. 2017.  chrF  $^{++}$  : words helping charac- ter n-grams . In  Proceedings of the Second Con- ference on Machine Translation , pages 612–618, Copenhagen, Denmark. Association for Computa- tional Linguistics. \nNils Reimers and Iryna Gurevych. 2019. Sentence- BERT: Sentence embeddings using Siamese BERT- networks . In  Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natu- ral Language Processing (EMNLP-IJCNLP) , pages 3982–3992, Hong Kong, China. Association for Computational Linguistics. \nVictor Sanh, Lysandre Debut, Julien Chaumond, and Thomas Wolf. 2019.  Distilbert, a distilled version of BERT: smaller, faster, cheaper and lighter .  arXiv preprint arXiv:1910.01108 . \nF. Schroff, D. Kalenichenko, and J. Philbin. 2015. Facenet: A uniﬁed embedding for face recognition and clustering . In  2015 IEEE Conference on Com- puter Vision and Pattern Recognition (CVPR) , pages 815–823. \nThibault Sellam, Dipanjan Das, and Ankur Parikh. 2020. BLEURT: Learning robust metrics for text generation . In  Proceedings of the 58th Annual Meet- ing of the Association for Computational Linguistics , pages 7881–7892, Online. Association for Computa- tional Linguistics. \nChristophe Servan, Alexandre B´ erard, Zied Elloumi, Herv´ e Blanchon, and Laurent Besacier. 2016. Word2Vec vs DBnary: Augmenting METEOR us- ing vector representations or lexical resources? In Proceedings of COLING 2016, the 26th Interna- tional Conference on Computational Linguistics: Technical Papers , pages 1159–1168, Osaka, Japan. The COLING 2016 Organizing Committee. \nHiroki Shimanaka, Tomoyuki Kajiwara, and Mamoru Komachi. 2018.  RUSE: Regressor using sentence embeddings for automatic machine translation eval- uation . In  Proceedings of the Third Conference on Machine Translation: Shared Task Papers , pages 751–758, Belgium, Brussels. Association for Com- putational Linguistics. \nHiroki Shimanaka, Tomoyuki Kajiwara, and Mamoru Komachi. 2019. Machine Translation Evalu- ation with BERT Regressor . arXiv preprint arXiv:1907.12679 . "}
{"page": 11, "image_path": "doc_images/2020.emnlp-main.213_11.jpg", "ocr_text": "Matthew Snover, Bonnie Dorr, Richard Schwartz, Lin-\nnea Micciulla, and John Makhoul. 2006. A study\nof translation edit rate with targeted human annota-\ntion. In Jn Proceedings of Association for Machine\nTranslation in the Americas, pages 223-231.\n\nLucia Specia, Frédéric Blain, Varvara Logacheva,\nRamén Astudillo, and André F. T. Martins. 2018.\nFindings of the WMT 2018 shared task on quality\nestimation. In Proceedings of the Third Conference\non Machine Translation: Shared Task Papers, pages\n689-709, Belgium, Brussels. Association for Com-\nputational Linguistics.\n\nLucia Specia, Kim Harris, Frédéric Blain, Aljoscha\nBurchardt, Viviven Macketanz, Inguna Skadina,\nMatteo Negri, , and Marco Turchi. 2017. Transla-\ntion quality and productivity: A study on rich mor-\nphology languages. In Machine Translation Summit\nXVI, pages 55-71, Nagoya, Japan.\n\nKosuke Takahashi, Katsuhito Sudoh, and Satoshi Naka-\nmura. 2020. Automatic machine translation evalua-\ntion using source language inputs and cross-lingual\nlanguage model. In Proceedings of the 58th Annual\nMeeting of the Association for Computational Lin-\nguistics, pages 3553-3558, Online. Association for\nComputational Linguistics.\n\nAndre Tattar and Mark Fishel. 2017. bleu2vec: the\npainfully familiar metric on continuous vector space\nsteroids. In Proceedings of the Second Conference\non Machine Translation, pages 619-622, Copen-\nhagen, Denmark. Association for Computational\nLinguistics.\n\nIan Tenney, Dipanjan Das, and Ellie Pavlick. 2019.\nBERT rediscovers the classical NLP pipeline. In\nProceedings of the 57th Annual Meeting of the Asso-\nciation for Computational Linguistics, pages 4593-\n4601, Florence, Italy. Association for Computational\nLinguistics.\n\nTianyi Zhang, Varsha Kishore, Felix Wu, Kilian Q.\nWeinberger, and Yoav Artzi. 2020. Bertscore: Eval-\nuating text generation with bert. In International\nConference on Learning Representations.\n\nWei Zhao, Goran GlavaS, Maxime Peyrard, Yang Gao,\nRobert West, and Steffen Eger. 2020. On the lim-\nitations of cross-lingual encoders as exposed by\nreference-free machine translation evaluation. In\nProceedings of the 58th Annual Meeting of the Asso-\nciation for Computational Linguistics, pages 1656—\n1671, Online. Association for Computational Lin-\nguistics.\n\nWei Zhao, Maxime Peyrard, Fei Liu, Yang Gao, Chris-\ntian M. Meyer, and Steffen Eger. 2019. MoverScore:\nText generation evaluating with contextualized em-\nbeddings and earth mover distance. In Proceedings\nof the 2019 Conference on Empirical Methods in\nNatural Language Processing and the 9th Interna-\ntional Joint Conference on Natural Language Pro-\ncessing (EMNLP-IJCNLP), pages 563-578, Hong\n\n2696\n\nKong, China. Association for Computational Lin-\nguistics.\n", "vlm_text": "Matthew Snover, Bonnie Dorr, Richard Schwartz, Lin- nea Micciulla, and John Makhoul. 2006.  A study of translation edit rate with targeted human annota- tion . In  In Proceedings of Association for Machine Translation in the Americas , pages 223–231. \nKong, China. Association for Computational Lin- guistics. \nLucia Specia, Fr´ ed´ eric Blain, Varvara Logacheva, Ram´ on Astudillo, and Andr´ e F. T. Martins. 2018. Findings of the WMT 2018 shared task on quality estimation . In  Proceedings of the Third Conference on Machine Translation: Shared Task Papers , pages 689–709, Belgium, Brussels. Association for Com- putational Linguistics. \nLucia Specia, Kim Harris, Fr´ ed´ eric Blain, Aljoscha Burchardt, Viviven Macketanz, Inguna Skadina, Matteo Negri, , and Marco Turchi. 2017.  Transla- tion quality and productivity: A study on rich mor- phology languages . In  Machine Translation Summit XVI , pages 55–71, Nagoya, Japan. \nKosuke Takahashi, Katsuhito Sudoh, and Satoshi Naka- mura. 2020.  Automatic machine translation evalua- tion using source language inputs and cross-lingual language model . In  Proceedings of the 58th Annual Meeting of the Association for Computational Lin- guistics , pages 3553–3558, Online. Association for Computational Linguistics. \nAndre T¨ attar and Mark Fishel. 2017. bleu2vec: the painfully familiar metric on continuous vector space steroids . In  Proceedings of the Second Conference on Machine Translation , pages 619–622, Copen- hagen, Denmark. Association for Computational Linguistics. \nIan Tenney, Dipanjan Das, and Ellie Pavlick. 2019. BERT rediscovers the classical NLP pipeline . In Proceedings of the 57th Annual Meeting of the Asso- ciation for Computational Linguistics , pages 4593– 4601, Florence, Italy. Association for Computational Linguistics. \nTianyi Zhang, Varsha Kishore, Felix Wu, Kilian Q. Weinberger, and Yoav Artzi. 2020.  Bertscore: Eval- uating text generation with bert . In  International Conference on Learning Representations . \nWei Zhao, Goran Glavaˇ s, Maxime Peyrard, Yang Gao, Robert West, and Steffen Eger. 2020.  On the lim- itations of cross-lingual encoders as exposed by reference-free machine translation evaluation . In Proceedings of the 58th Annual Meeting of the Asso- ciation for Computational Linguistics , pages 1656– 1671, Online. Association for Computational Lin- guistics. \nWei Zhao, Maxime Peyrard, Fei Liu, Yang Gao, Chris- tian M. Meyer, and Steffen Eger. 2019.  MoverScore: Text generation evaluating with contextualized em- beddings and earth mover distance . In  Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th Interna- tional Joint Conference on Natural Language Pro- cessing (EMNLP-IJCNLP) , pages 563–578, Hong "}
{"page": 12, "image_path": "doc_images/2020.emnlp-main.213_12.jpg", "ocr_text": "A Appendices\n\nIn Table 5 we list the hyper-parameters used to train\nour models. Before initializing these models a ran-\ndom seed was set to 3 in all libraries that perform\n“random” operations (torch, numpy, random\nand cuda).\n\n2697\n", "vlm_text": "A Appendices \nIn Table  5  we list the hyper-parameters used to train our models. Before initializing these models a ran- dom seed was set to 3 in all libraries that perform “random” operations ( torch ,  numpy ,  random and  cuda ). "}
{"page": 13, "image_path": "doc_images/2020.emnlp-main.213_13.jpg", "ocr_text": "Table 5: Hyper-parameters used in our COMET framework to train the presented models.\n\nHyper-parameter\n\nComET(Est-HTER/MQM)\n\nCOMET-RANK\n\nEncoder Model XLM-RoBERTa (base) XLM-RoBERTa (base)\nOptimizer Adam (default parameters) | Adam (default parameters)\nn frozen epochs 1 0\nLearning rate 3e-05 and le-05 le-05\nBatch size 16 16\nLoss function MSE Triplet Margin (€ = 1.0)\nLayer-wise dropout 0.1 0.1\nFP precision 32 32\nFeed-Forward hidden units 2304,1152 -\nFeed-Forward activations Tanh -\nFeed-Forward dropout 0.1 -\nTable 6: Statistics for the QT21 corpus.\nen-de en-cs_ en-lv_de-en\nTotal tuples 54000 42000 35474 41998\nAvg. tokens (reference) | 17.80 15.56 16.42 17.71\nAvg. tokens (source) 16.70 17.37 18.39 17.18\nAvg. tokens (MT) 17.65 15.64 16.42 17.78\nTable 7: Statistics for the WMT 2017 DARR corpus.\nen-cs en-de en-fi en-lv_ en-tr\nTotal tuples 32810 6454 3270 3456 247\nAvg. tokens (reference) | 19.70 22.15 15.59 21.42 17.57\nAvg. tokens (source) 22.37 23.41 21.73 26.08 22.51\nAvg. tokens (MT) 19.45 22.58 16.06 22.18 17.25\n\n2698\n", "vlm_text": "The table presents hyper-parameters used in two different configurations: COMET (for Estimated HTER/MQM) and COMET-RANK. Here's a summary of the information in the table:\n\n1. **Encoder Model**:\n   - COMET(Est-HTER/MQM): XLM-RoBERTa (base)\n   - COMET-RANK: XLM-RoBERTa (base)\n\n2. **Optimizer**:\n   - Both configurations use: Adam (default parameters)\n\n3. **n frozen epochs**:\n   - COMET(Est-HTER/MQM): 1\n   - COMET-RANK: 0\n\n4. **Learning rate**:\n   - COMET(Est-HTER/MQM): 3e-05 and 1e-05\n   - COMET-RANK: 1e-05\n\n5. **Batch size**:\n   - Both configurations: 16\n\n6. **Loss function**:\n   - COMET(Est-HTER/MQM): MSE (Mean Squared Error)\n   - COMET-RANK: Triplet Margin (ε = 1.0)\n\n7. **Layer-wise dropout**:\n   - Both configurations: 0.1\n\n8. **FP precision**:\n   - Both configurations: 32\n\n9. **Feed-Forward hidden units**:\n   - COMET(Est-HTER/MQM): 2304, 1152\n   - COMET-RANK: No data (indicated by \"---\")\n\n10. **Feed-Forward activations**:\n    - COMET(Est-HTER/MQM): Tanh\n    - COMET-RANK: No data (indicated by \"---\")\n\n11. **Feed-Forward dropout**:\n    - COMET(Est-HTER/MQM): 0.1\n    - COMET-RANK: No data (indicated by \"---\")\n\nThis table outlines the various configurations and parameters used in the two approaches for the specified purposes or datasets.\nTable 6: Statistics for the QT21 corpus. \nThe table presents statistical information about different language pair datasets (en-de, en-cs, en-lv, de-en). It consists of the following rows:\n\n1. **Total tuples**: Represents the number of data tuples or instances for each language pair. The values are:\n   - en-de: 54,000\n   - en-cs: 42,000\n   - en-lv: 35,474\n   - de-en: 41,998\n\n2. **Avg. tokens (reference)**: Indicates the average number of tokens in the reference data for each language pair. The values are:\n   - en-de: 17.80\n   - en-cs: 15.56\n   - en-lv: 16.42\n   - de-en: 17.71\n\n3. **Avg. tokens (source)**: Shows the average number of tokens in the source data for each language pair. The values are:\n   - en-de: 16.70\n   - en-cs: 17.37\n   - en-lv: 18.39\n   - de-en: 17.18\n\n4. **Avg. tokens (MT)**: Provides the average number of tokens in the machine translation (MT) output for each language pair. The values are:\n   - en-de: 17.65\n   - en-cs: 15.64\n   - en-lv: 16.42\n   - de-en: 17.78\n\nThese statistics offer insights into the size and token distribution of the datasets used for each language pair.\nTable 7: Statistics for the WMT 2017  DA RR corpus. \nThe table shows data related to translation or language processing tasks for various language pairs. The language pairs in the table are English to Czech (en-cs), English to German (en-de), English to Finnish (en-fi), English to Latvian (en-lv), and English to Turkish (en-tr). \n\n1. **Total tuples**: This row presents the total number of data tuples available for each language pair. For example, there are 32,810 tuples for English-Czech and 247 tuples for English-Turkish.\n\n2. **Avg. tokens (reference)**: This row provides the average number of tokens in the reference translations for each language pair. For instance, the average is 19.70 tokens for English-Czech and 17.57 tokens for English-Turkish.\n\n3. **Avg. tokens (source)**: This row gives the average number of tokens in the source language (English) for each language pair. For example, the average is 22.37 tokens for English-Czech and 22.51 tokens for English-Turkish.\n\n4. **Avg. tokens (MT)**: This row indicates the average number of tokens in the machine-translated (MT) outputs for each language pair. For instance, the average is 19.45 tokens for English-Czech and 17.25 tokens for English-Turkish. \n\nOverall, the table provides insights into the dataset size and tokenization characteristics across different English into other language translation scenarios."}
{"page": 14, "image_path": "doc_images/2020.emnlp-main.213_14.jpg", "ocr_text": "89ST 68 IT 9EET £89 Leet LOOC COSI LOTE 696T 8672 09 (LIN) suayo} “Say\n9ETT COST OBC OFC SVC OKC BLET TEHE ETST LOVE 867 (901N0s) suayo} “SAV\nCELT LOT 89°C St6 OL YT OOIZ 6881 EEE TZIOZ S9SZ OTT | (@OUOIOJOI) SUAYO} “BAY\nC98r PvoletT O69ET 89981 PEErc IOPLI CLI8I SSEIT OC8IE 07866 8LILZ safdny [20],\nJJj-op = $0-ap)ap-J YZ-U9—s I-uUd—s-Ud—s‘YY-U9_—s S-ud_—s-U9—s« op-ua_—s SD-.\n\n‘sured oSen8ur] yst[suq-ou pure yst[suq-woly WAV 6107 LIAM PY) Joy sonsneis :6 oq],\n\nOL6E O8TT STSC 8961 COLT OLLI C70~ (LIN) suayo} “Say\n\nLSL OO8I ceOC CE9T OIC O6YTI PSI (20IN0s) suayoy “Say\n687 PLIZT SS9T VENT PILE SS8l 67OT | (@dUes0Jo1) suayo) “Bay\nOLOTE CS86E CIBIT B8CL6 OIIOT GLITE S9ES8 saydny [eo],\n\nud-yZ Ud-nI = Ua-,, Ua-YYs-N'S—sa-Y_—sUa-ap\n\n‘sured oSen8ury Yyst[suq-oul WAV 6107 LIAM PY) JOJ sonsneis :g o1qQe],\n\n2699\n", "vlm_text": "The table contains data related to several language pairs (aligned parallel texts) which appear to involve translation, with columns representing different target languages: `de-en`, `fi-en`, `gu-en`, `kk-en`, `lt-en`, `ru-en`, and `zh-en`. \n\nThe rows contain the following categories of information for each language pair:\n1. \"Total tuples\" - Represents the total number of tuples (sentence pairs) available for each language pair.\n2. \"Avg. tokens (reference)\" - The average number of tokens in the reference translations for each language pair.\n3. \"Avg. tokens (source)\" - The average number of tokens in the source languages for each language pair.\n4. \"Avg. tokens (MT)\" - The average number of tokens for machine-translated output for each language pair.\n\nData example from the table:\n- For `de-en` (German to English), there are 85365 tuples, with average token counts of 20.29 for reference, 18.44 for source, and 20.22 for MT.\n- For `zh-en` (Chinese to English), there are 31070 tuples, with average token counts of 42.89 for reference, 7.57 for source, and 39.70 for MT."}
{"page": 15, "image_path": "doc_images/2020.emnlp-main.213_15.jpg", "ocr_text": "cSet «IDS «=6OBIT STLI OLEBT) «60h Et OELOI «=6P9OCTT «COB TT OSTST OOW OT «OL IT «=6P6VI «=SHLT (LIN) suayo) “Say\nST8l Lev? pest C8 LET CWHT LOT SOIT OF8I LEIT COST LIOBI LT8Z YB ET (201N0s) SUdyo} “SAV\nOVetT STOC IIT TE9T IT8T SET OS6I G6TET STET LOPT ELIT 8OIZ POT 98ST | (POUEIOJOr) sUdyO} “SAY\nIZL9S 8SeI I8I7Z 6086 cOccE IIL6I E€IrS II8LL Scss PpOvOl 89ST OTIS 70987 LSEEE safdnq [e310],\nua-j9 «j-U9_ ss I-ud—s Y-Ua_—Ss«yd-U9—s«O-Ua—s S0-U_—Ssa-ap = U-—s-MAs-Ysa-S9-—ssYZ-U—sU-YZ\n‘sured oSen3ury WAV S107 LAA OU) Joy sonsneig 211 eqeL\nLVOL 7? 66L 67 COE O6SEl 8801 O6TEl Ivel PSLI T6El 99'ET (LIN) suayoy “say\ncecl Srel 9 OI OVTI CTPI S8TI ETIL peel OLET 69ET IEST ETI (20mMos) sudyo} “BAY\nCeol sil col Sr7I IMEI SLE O6OI LEE LET TEOT PTT OT'PT | (eourEJor) suayo) “BAY\n9 16 OLE POS cI8 =o VLbl 6St ¢PrOl Y9SL7 06ST OL6 = LvbT safdny (e301,\nweyey-sa-ua_yd-ua_ ss sy-ua_—sq-jd-ua ss 4-ua—sj-ua_—s sa-ua_—s -ua_s ap-ua_—s ef-ua—s AS-ua_—s Ju-ua\n\n“sonsneys (¢\"¢ UONIas) snd109 WOW ‘O01 148L\n\n2700\n", "vlm_text": "The table provides a data breakdown with columns representing different language pairs and corresponding numerical values. Here is the breakdown organized by columns:\n\n1. **Language Pairs**\n   - en-nl\n   - en-sw\n   - en-ja\n   - en-de\n   - en-ru\n   - en-es\n   - en-fr\n   - en-it\n   - en-pt-br\n   - en-tr\n   - en-pt\n   - en-es-latam\n\n2. **Total Tuples**\n   - en-nl: 2447\n   - en-sw: 970\n   - en-ja: 1590\n   - en-de: 2756\n   - en-ru: 1043\n   - en-es: 259\n   - en-fr: 1474\n   - en-it: 812\n   - en-pt-br: 504\n   - en-tr: 370\n   - en-pt: 91\n   - en-es-latam: 6\n\n3. **Avg. tokens (reference)**\n   - en-nl: 14.10\n   - en-sw: 14.24\n   - en-ja: 20.32\n   - en-de: 13.78\n   - en-ru: 13.37\n   - en-es: 10.90\n   - en-fr: 13.75\n   - en-it: 13.61\n   - en-pt-br: 12.48\n   - en-tr: 10.36\n   - en-pt: 12.18\n   - en-es-latam: 10.33\n\n4. **Avg. tokens (source)**\n   - en-nl: 14.23\n   - en-sw: 14.30\n   - en-ja: 13.69\n   - en-de: 13.76\n   - en-ru: 13.94\n   - en-es: 11.23\n   - en-fr: 13.28\n   - en-it: 14.22\n   - en-pt-br: 12.46\n   - en-tr: 7.99\n   - en-pt: 13.45\n   - en-es-latam: 12.33\n\n5. **Avg. tokens (MT)**\n   - en-nl: 13.66\n   - en-sw: 14.00\n   - en-ja: 17.84\n   - en-de: 13.41\n   - en-ru: 13.19\n   - en-es: 10.88\n   - en-fr: 13.59\n   - en-it: 13.02\n   - en-pt-br: 12.19\n   - en-tr"}
{"page": 16, "image_path": "doc_images/2020.emnlp-main.213_16.jpg", "ocr_text": "0.6\n2\n3\n3 0.4\n&\n3\n§ 02\nAll 10 8 6 4 ~~ ALL 10 8 6 4\nTop models en-cs Top models en-de\n0.6 f\n0.6\ng\n3 0.5\n3 _\n= 04\n=? 0.4\nZz\n5\nM\n0.2 0.3\nAll 10 8 6 4 All 10 8 6 4\nTop models en-fi Top models en-gu\n> 06 0.6\n8\n2\n3 0.4 0.4\ni}\nz 0.2 0.2\nM\n0\n0\nAll 10 8 6 4 All 10 8 6 4\nTop models en-kk Top models en-It\n0.6\ng 0.4\n3\nz 0.4\nE 0.3\n~ 2 i \\\n\nAll 10 8 6 4 0.1\nTop models en-ru Top models en-zh\n\nTable 12: Metrics performance over all and the top (10,8, 6, and 4) MT systems for all from-English language\n\npairs. The color scheme is as follows: ——- COMET-RANK, ——- COMET-HTER, —— COMET-MQM, —— BLEU, ——\nBERTSCORE\n\n2701\n", "vlm_text": "The image consists of eight line graphs, each illustrating the Kendall Tau score for different metrics across various top machine translation (MT) systems for specific language pairs from English. Each graph corresponds to a different language pair: en-cs (Czech), en-de (German), en-fi (Finnish), en-gu (Gujarati), en-kk (Kazakh), en-lt (Lithuanian), en-ru (Russian), and en-zh (Chinese).\n\nThe x-axis of each graph displays categories labeled as \"All, 10, 8, 6, and 4,\" indicating the number of top MT systems being evaluated. The y-axis represents the Kendall Tau score, a measure of correlation.\n\nThe color scheme for the lines in the graphs is specified in the image caption:\n- COMET - RANK\n- COMET - HTER\n- COMET - MQM\n- BLEU\n- BERTSCORE\n\nThe lines decrease as the number of models decreases from \"All\" to \"4\", indicating how well the different metrics perform in ranking quality among different numbers of top MT systems for each language pair."}
{"page": 17, "image_path": "doc_images/2020.emnlp-main.213_17.jpg", "ocr_text": "0.2\n\n2\nco)\n2\nE 0.1\n&\nie\nZz\n5 0\nM\n\n—0.1\n\nAll 10 8 6 4 All 10 8 6 4\nTop models de-en Top models fi-en\n\noO\n\n~\nl/\n|\n\nS\nbo\n\nKendall Tau score\noO\ntwo\n\n2\na\n\n&\n\nAll 10 8 6 All 10 8 6 4\n\nTop models It-en Top models ru-en\n\nKendall Tau score\noO oO\niy ~\n\n°o\n\nAll 10 8 6 4\nTop models zh-en\n\nTable 13: Metrics performance over all and the top (10,8, 6, and 4) MT systems for all into-English language\n\npairs. The color scheme is as follows: —- COMET-RANK, —— COMET-HTER, —— COMET-MQM, — BLEU, ——\nBERTSCORE , — BLEURT\n\n2702\n", "vlm_text": "The image contains five line graphs, each representing the performance of different machine translation (MT) evaluation metrics over various top MT systems translated into English from different languages. The graphs are titled based on language pairs: de-en (German to English), fi-en (Finnish to English), lt-en (Lithuanian to English), ru-en (Russian to English), and zh-en (Chinese to English).\n\nEach graph displays the Kendall Tau score, plotted on the vertical axis, against the number of top models considered (All, 10, 8, 6, and 4) on the horizontal axis. The different lines in each graph represent different evaluation metrics with a specific color scheme:\n\n- COMET-Rank\n- COMET-HTER\n- COMET-MQM\n- BLEU\n- BERTScore\n- BLEURT\n\nThe graphs generally show that the Kendall Tau score tends to decrease as fewer top models are considered, indicating a potential decline in metric effectiveness when focusing on a smaller set of high-performing translation systems."}
