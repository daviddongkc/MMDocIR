{"layout": 0, "type": "text", "text": "L OGIC -LM: Empowering Large Language Models with Symbolic Solvers for Faithful Logical Reasoning ", "text_level": 1, "page_idx": 0, "bbox": [123, 76, 471, 111], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 1, "type": "text", "text": "Liangming Pan Alon Albalak Xinyi Wang William Yang Wang ", "page_idx": 0, "bbox": [113.97068786621094, 126.8162612915039, 484.3015441894531, 142.37074279785156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 2, "type": "text", "text": "University of California, Santa Barbara {liang ming pan, al on alba lak, xinyi_wang, wang william yang}@ucsb.edu ", "page_idx": 0, "bbox": [101.86408233642578, 149.69882202148438, 496.4054260253906, 179.64596557617188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 3, "type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0, "bbox": [157, 214, 203, 225], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 4, "type": "text", "text": "Large Language Models (LLMs) have shown human-like reasoning abilities but still strug- gle with complex logical problems. This pa- per introduces a novel framework, L OGIC - LM, which integrates LLMs with symbolic solvers to improve logical problem-solving. Our method first utilizes LLMs to translate a natural language problem into a symbolic formulation. Afterward, a deterministic sym- bolic solver performs inference on the for- mulated problem. We also introduce a self- refinement module, which utilizes the symbolic solver’s error messages to revise symbolic for- mali zat ions. We demonstrate L OGIC -LM’s ef- fec ti ve ness on five logical reasoning datasets: Proof Writer, PrOntoQA, FOLIO, LogicalDe- duction, and AR-LSAT. On average, L OGIC - LM achieves a significant performance boost of  $39.2\\%$   over using LLM alone with standard prompting and   $18.4\\%$   over LLM with chain-of- thought prompting. Our findings suggest that L OGIC -LM, by combining LLMs with sym- bolic logic, offers a promising avenue for faith- ful logical reasoning.   1 ", "page_idx": 0, "bbox": [87, 236.39230346679688, 273, 523.3805541992188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 5, "type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0, "bbox": [70, 534, 154, 547], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 6, "type": "text", "text": "Logical reasoning is a cognitive process that in- volves using evidence, arguments, and logic to ar- rive at conclusions or make judgments ( Huang and Chang ,  2023 ). It plays a central role in intelligent systems for problem-solving, decision-making, and critical thinking. Recently, large language models (LLMs) ( Brown et al. ,  2020 ;  Ouyang et al. ,  2022a ; OpenAI ,  2023 ) have exhibited emergent ability to “reason” like human ( Wei et al. ,  2022a ). When prompted with step-wise explanations of reasoning (“chain of thoughts”), or a simple prompt “Let’s think step by step.”, these models are able to an- swer questions with explicit reasoning steps ( Wei et al. ,  2022b ;  Kojima et al. ,  2022 ). ", "page_idx": 0, "bbox": [69, 555.5357055664062, 290, 744.8296508789062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 7, "type": "image", "page_idx": 0, "img_path": "layout_images/2023.findings-emnlp.248_0.jpg", "img_caption": "Figure 1: Overview of our L OGIC -LM framework. ", "bbox": [309, 212, 522, 422], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "a Problem\n\n@\nSelf-\nRefine\n\nLo\n\nG Goal\n\n> Problem\n>\n'/ Formulator\n\nSymbolic\nFormulation\n\n——— IW.\n@- i\n8 Symbolic\n\n(© »@ Reasoner\n\n—. at—-,\n\nLgq Interpreter\n\nSymbolic\nResult\n\n— |\n\n(a =\nB-o esr — Answer\n", "vlm_text": "The image is a flowchart depicting the overview of the LOGIC-LM framework. It consists of three main components:\n\n1. **Problem Formulator**: Takes input from \"Problem\" and \"Goal\" and produces a \"Symbolic Formulation.\"\n2. **Symbolic Reasoner**: Uses the symbolic formulation to generate a \"Symbolic Result.\"\n3. **Result Interpreter**: Interprets the symbolic result to provide an \"Answer.\"\n\nThere is also a \"Self-Refine\" component that feeds back into the Problem Formulator to refine the process iteratively."}
{"layout": 8, "type": "text", "text": "Despite the advances of LLMs, they still strug- gle with complex logical reasoning problems ( Liu et al. ,  2023b ). Recent studies ( Golovneva et al. , 2023 ;  Ribeiro et al. ,  2023b ;  Lyu et al. ,  2023 ) found that LLMs occasionally make  unfaithful  reason- ing,  i.e. , the derived conclusion does not follow the previously generated reasoning chain. While chain-of-thought may imitate human reasoning pro- cesses, the fundamental nature of LLMs remains that of black-box probabilistic models, lacking a mechanism to guarantee the faithfulness of reason- ing ( Shanahan ,  2022 ). In contrast,  symbolic infer- ence engines , such as expert systems ( Metaxiotis et al. ,  2002 ), are faithful and transparent because the reasoning is based on symbolic-represented knowledge and follows well-defined inference rules that adhere to logical principles. The main obsta- cle is how to accurately translate a problem into symbolic representations, considering the inherent ambiguity and flexibility of natural language. This is precisely where LLMs excel, making LLMs a promising complement to symbolic solvers. ", "page_idx": 0, "bbox": [306, 433.4856262207031, 526, 731.178955078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 9, "type": "text", "text": "This drives our exploration of neuro-symbolic methods that integrate LLMs with symbolic reason- ing. As illustrated in Figure  1 , we present L OGIC - LM, a novel framework that decomposes a logical reasoning problem into three stages:  Problem For- mulation ,  Symbolic Reasoning , and  Result Inter- pretation . During problem formulation, an LLM converts the natural language description of the problem into an appropriate symbolic formulation, identifying key entities, facts, and rules present in the problem statement. Subsequently, at the symbolic reasoning stage, a deterministic symbolic solver performs inference on the symbolic formula- tion. Lastly, a result interpreter explains the output and maps it to the correct answer. By incorporating LLMs with symbolic solvers, we can exploit the robust natural language understanding capabilities of LLMs to precisely represent the problem using symbolic representations, while also taking advan- tage of the logical faithfulness and transparency offered by symbolic solvers. To improve the accu- racy of the symbolic parsing, we also incorporate the idea of self-refinement to iterative ly revise the generated logical form using the error messages from the symbolic solver as feedback. ", "page_idx": 0, "bbox": [306, 733.8576049804688, 526, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 10, "type": "text", "text": "", "page_idx": 1, "bbox": [70, 71.72454071044922, 290, 369.4178771972656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 11, "type": "text", "text": "We showcase the adaptability and effective- ness of L OGIC -LM on five logical reasoning datasets:  Proof Writer  ( Tafjord et al. ,  2021 ),  PrOn- toQA  ( Saparov and He ,  2023 ),  FOLIO  ( Han et al. , 2022 ),  AR-LSAT  ( Zhong et al. ,  2022 ), and the  Log- ical Deduction  dataset from BigBench ( Srivastava et al. ,  2022 ). These datasets cover a wide range of logical reasoning problems, including: ", "page_idx": 1, "bbox": [70, 371.4995422363281, 290, 479.494384765625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 12, "type": "text", "text": "•  Deductive Reasoning problems •  First-Order Logic (FOL) reasoning problems •  Constraint Satisfaction Problems (CSP)  Analytical Reasoning (AR) problems ", "page_idx": 1, "bbox": [81, 481.5750427246094, 290, 540.4024658203125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 13, "type": "text", "text": "We integrate four types of symbolic inference tools tailored to these problems: 1)  logic programming engine  that supports deductive reasoning through forward/backward chaining; 2)  FOL inference en- gine  that derives new conclusions based on FOL rules and facts, 3)  constraint optimization  engine that provides solvers for CSP over finite domains, and 4)  boolean satisfiability problem (SAT) solver that solves analytical reasoning problems. ", "page_idx": 1, "bbox": [70, 542.4830932617188, 290, 664.027587890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 14, "type": "text", "text": "Our evaluations show that the strategy of inte- grating LLMs with symbolic solvers performs sig- nificantly better than purely relying on LLMs for logical reasoning, with an average improvement of  $39.2\\%$   over the standard prompting and   $18.4\\%$  over the chain-of-thought prompting   $(\\S\\ 4.1)$  . We also find that L OGIC -LM becomes increasingly ef- fective as the required reasoning depth increases  $(\\S~4.3)$  . Finally, by analyzing the impact of self- refinement, we highlight the effectiveness of incre- mentally revising symbolic formalization s when interacting with the symbolic solver (§  4.4 ). ", "page_idx": 1, "bbox": [70, 666.1082153320312, 290, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 15, "type": "text", "text": "", "page_idx": 1, "bbox": [305, 71.72454071044922, 526, 125.52069091796875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 16, "type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1, "bbox": [305, 135, 396, 149], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 17, "type": "text", "text": "Language Models for Logical Reasoning. Re- cent works in adapting LLMs for logical reasoning tasks can be broadly categorized into two groups: 1)  fine-tuning approaches  that optimize LLMs’ rea- soning ability through fine-tuning or training spe- cialized modules ( Clark et al. ,  2020 ;  Tafjord et al. , 2022 ;  Yang et al. ,  2022 ), and 2)  in-context learning approaches  that design special prompts to elicit LLMs’ step-by-step reasoning capabilities. Typical methods include chain-of-thought prompting ( Wei et al. ,  2022b ;  Wang et al. ,  2023 ) that generates ex- planations before the final answer and the least-to- most prompting ( Zhou et al. ,  2023 ) that breaks the problem down into simpler components that can be solved individually. Both the above approaches perform reasoning directly over natural language (NL), providing greater flexibility than symbolic- based reasoning. However, the intrinsic complexity and ambiguity of NL also bring undesired issues such as unfaithful reasoning and hallucinations. ", "page_idx": 1, "bbox": [305, 156.84205627441406, 526, 427.82879638671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 18, "type": "text", "text": "Different from prior works, we use  symbolic language  as the basic unit of reasoning. This effec- tively transfers the burden of executing complex, precise reasoning from LLMs to more reliable, in- ter pre table external symbolic solvers. Simultane- ously, we leverage the strong in-context learning ability of LLMs to formulate the NL-based prob- lem into suitable symbolic representations, thus maintaining the benefit of flexibility. ", "page_idx": 1, "bbox": [305, 428.2623596191406, 526, 549.806884765625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 19, "type": "text", "text": "Although prior works ( Mao et al. ,  2019 ;  Gupta et al. ,  2020 ;  Manhaeve et al. ,  2021 ;  Cai et al. ,  2021 ; Tian et al. ,  2022 ;  Pryor et al. ,  2023 ) also propose neuro-symbolic methods to combine neural net- works with symbolic reasoning, these methods suf- fer from limitations such as hand-crafted or spe- cialized module designs that are not easily gen- eralizable, or brittleness due to the difficulty of optimization. In contrast, we propose a more gen- eralizable framework that integrates modern LLMs with symbolic logic without the need for training or designing complex problem-specific modules. ", "page_idx": 1, "bbox": [305, 550.241455078125, 526, 712.4359741210938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 20, "type": "text", "text": "Tool-augmented Language Models. Language models have inherent limitations such as the inabil- ity to access up-to-date information, take actions, or perform precise mathematical reasoning. To ", "page_idx": 1, "bbox": [305, 719.9151611328125, 526, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 21, "type": "image", "page_idx": 2, "img_path": "layout_images/2023.findings-emnlp.248_1.jpg", "img_caption": "Figure 2: Overview of our L OGIC -LM model, which consists of three modules: ( 1 )  Problem Formulator  generates a symbolic representation for the input problem with LLMs via in-context learning ( 2 )  Symbolic Reasoner  performs logical inference on the formulated problem, and ( 3 )  Result Interpreter  interprets the symbolic answer. ", "bbox": [69, 68, 526, 385], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Metals conduct electricity No giant language model could have bad performance. In an antique car show, there are three vehicles: a tractor,\n\nInsulators do not conduct electricity. Ifa language model has good performance, it is used by some researchers. ‘a convertible, and a minivan. The tractor is the second-\nIf something is made of iron, then it is metal. ‘Awork used by some researchers should be popular. newest. The minivan is newer than the convertible.\nNails are made of iron. If BERT is a giant language model, then the same for GPT3.\nBERT is a giant language model Which of the following is true?\n‘A) The tractor is the oldest.\n\nIs the following statement true, false, or\n\nIs the following statement true, false, or unknown? GPTS is popular. 8) The convertible is the oldest.\nunknown? Nails cannot conduct electricity.\n\nC) The minivan is the oldest.\n\nProblem Formulator\n\nRules: Facts: Domain: Variables:\n\n+ Metal(x, True)  ConductElectricity(x, True) + 4(3x(LanguageModel(x) A Giant(x) A sGoodPerformance(x))) 1: oldest tractor € [1, 2, 3]\n\n+ MadeOfiron(x, True) > Metal(x, True) + vx(LanguageModel(x) A GoodPerformance(x) > UsedbySomeReseachers(x)) B newest minivan € (1, 2,3]\nFacts: + x (UsedbySomeResearchers(x) + Popular(x)) convertible € [1, 2, 3]\n+ MadeOflron(Nails, True) + LanguageModel(bert) A Giant (bert) > LanguageModel(gpt3) A Giant(gpt3) Constr\n\n+ ConductElectricity (Insulator, False) + Language(bert) tractor\n\nQuery: + Giant(bert) minivan > convertible\n\n+ ConductElectricity(Nail, False) Query: Polular(gpt3) AllDifferentConstraint(tractor, minivan, convertible)\n\now Symbolic\n©+@ Reasoner\n\nss First-order Logic Prover\n\nr@ Result\n\n2 ConductElectricity(Nail, True) Entailment {convertible: 1, tractor: 2, minivan: 3}\nLg Interpreter\n\nThe statement “Nails cannot The statement “GPT3\nconduct electricity” is false. is popular” is true.\n\nAnswer A) The convertible is the oldest.\n\n", "vlm_text": "The image is a diagram outlining the structure of the LOGIC-LM model, which is composed of three main modules: \n\n1. **Problem Formulator**: This module generates a symbolic representation of the input problem using language processing models (LLMs) through a technique called in-context learning. The image shows three different problems being represented with distinct sets of rules, facts, and queries.\n\n2. **Symbolic Reasoner**: This component performs logical inference on the formulated problem using various methods such as Logic Programming, First-order Logic Prover, and Constraint Optimization. Each method is utilized based on the nature of the problem: logic programming is used for problems related to rules, first-order logic provers are used for logical entailment, and constraint optimization is employed for problems involving constraints.\n\n3. **Result Interpreter**: This module interprets the symbolic answer derived by the Symbolic Reasoner to provide a comprehensible answer to the original problem posed.\n\nThe image visually partitions these modules and illustrates how they work together to process queries related to three different scenarios: electricity conduction, language model popularity, and determining the oldest vehicle. Each scenario involves posing a problem, formulating it symbolically, reasoning through logic or constraints, and finally interpreting the result to answer the query."}
{"layout": 22, "type": "text", "text": "address this, recent work has begun to augment lan- guage models with access to external tools and re- sources, such as the information retriever ( Nakano et al. ,  2021 ;  Shi et al. ,  2023 ;  Lazaridou et al. , 2022 ), calculator ( Cobbe et al. ,  2021 ), code in- terpreter ( Wang et al. ,  2022 ), planner ( Liu et al. , 2023a ), and other pre-trained models ( Shen et al. , 2023 ). Recent works ( Gao et al. ,  2023 ;  Chen et al. , 2022 ) have achieved improved performance on arithmetic reasoning tasks by generating Python programs that specify the reasoning procedure as chained commands in the order of execution. How- ever, this idea has not been extended to logical reasoning problems, primarily due to the challenge of representing their highly “non-linear” reasoning procedure ( e.g. , hypothesizing, case-by-case analy- sis, and the process of elimination) with functional programming. Our work provides a novel way to solve this within the framework of augmented LLMs. Instead of parsing the problem-solving pro- cedure as programs, we only describe the problem with symbolic language using LLMs and then of- fload the reasoning to external symbolic solvers. ", "page_idx": 2, "bbox": [70, 400.5549621582031, 290, 711.7979736328125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 23, "type": "text", "text": "Auto-Formalization. The concept of convert- ing natural language into symbolic representations has been widely adopted in auto-formalization for mathematical reasoning ( Wu et al. ,  2022 ;  Drori et al. ,  2022 ;  He-Yueya et al. ,  2023 ;  Jiang et al. , 2023 ). These works demonstrate the proficiency of LLMs in translating a considerable fraction of mathematical problems into formal specifications defined in tools like SymPy ( Meurer et al. ,  2017 ), Isabelle/HOL ( Paulson ,  1994 ), and Lean ( de Moura et al. ,  2015 ). Mathematical reasoning can be con- sidered a specialized subset of logical reasoning, primarily focused on numeric deductions. Due to this numeric specificity, mathematical problems are often more readily transl a table to symbolic forms. In contrast, logical reasoning covers a wider array of problem types, often requiring a deeper under- standing of world knowledge and commonsense for effective parsing into symbolic forms. Despite plenty of works studying mathematical reasoning, our work pioneers in extending the concept of auto- formalization to a broader range of logical reason- ing tasks with modern LLMs. ", "page_idx": 2, "bbox": [70, 719.9151611328125, 290, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 24, "type": "text", "text": "", "page_idx": 2, "bbox": [305, 400.5549621582031, 526, 657.5982666015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 25, "type": "text", "text": "3 L OGIC -LM ", "text_level": 1, "page_idx": 2, "bbox": [306, 671, 386, 683], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 26, "type": "text", "text": "As shown in Figure  2 , the inputs of our model are a logical reasoning problem  $P$   described in natural language, along with a goal    $G$   in the form of a multiple-choice or free-form question. L OGIC -LM then follows a  problem formulation-and-reasoning paradigm to solve the problem. ", "page_idx": 2, "bbox": [305, 693.2085571289062, 526, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 27, "type": "text", "text": "In the  Problem Formulation  stage, we prompt an LLM to translate the problem and the goal into a task-specific symbolic language. In the  Symbolic Reasoning  stage, we call a deterministic symbolic solver,  e.g. , a logic programming engine, to ob- tain a symbolic-represented answer. Finally, an LLM- or rule-based  Result Interpreter  is respon- sible for translating the answer back to natural language. Using this approach, the reasoning is guaranteed to be faithful as long as the problem formulation is correct since the answer    $A$   is the result of executing deterministic algorithms ( e.g. , forward/backward-chaining) embedded within the symbolic reasoner. Compared to previous methods based on chain-of-thought, our framework reduces the burden of LLMs by shifting their focus from\n\n “ solving  the problem by reasoning step-by-step” to\n\n “ representing  the problem in symbolic language”. ", "page_idx": 3, "bbox": [70, 71.72454071044922, 291, 315.8736877441406], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 28, "type": "text", "text": "3.1 Problem Formulator ", "text_level": 1, "page_idx": 3, "bbox": [70, 332, 193, 343], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 29, "type": "text", "text": "Intuitively, LLMs may struggle with directly solv- ing complex reasoning problems. However, they have demonstrated a notable ability to comprehend textual inputs and translate them into formal pro- grams, such as mathematical equations ( He-Yueya et al. ,  2023 ) or Python codes ( Gao et al. ,  2023 ). We posit that this capability to  formulate problems into different languages  can be extended to symbolic languages as well. We leverage the few-shot gener- alization ability of LLMs to achieve this. By pro- viding the LLM with detailed instructions about the grammar of the symbolic language, alongside a few demonstrations as in-context examples, we observe that LLMs, like Instruct GP T ( Ouyang et al. ,  2022b ) and GPT-4 ( OpenAI ,  2023 ), can effectively follow the instructions to identify key entities, facts, and rules present in the problem statement, and then translate these elements into symbolic language following our defined grammar. ", "page_idx": 3, "bbox": [70, 352.51959228515625, 291, 609.5639038085938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 30, "type": "text", "text": "Specifically, we use four different symbolic for- mulations to cover four common types of logical reasoning problems:  deductive reasoning ,  first- order logic reasoning ,  constraint satisfaction prob- lem , and  analytical reasoning . These formula- tions provide a foundation for translating natu- ral language-based problem statements. By defin- ing additional problem-specific formulations, our framework retains the flexibility to accommodate a wider range of reasoning tasks. Next, we will delve into the grammar of each symbolic formulation. Examples of each problem type are in Figure  2 . ", "page_idx": 3, "bbox": [70, 611.9095458984375, 291, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 31, "type": "text", "text": "Logic Programming (LP) Language. Deduc- tive reasoning typically starts from known facts and rules, and iterative ly makes new inferences until the goal statement can be proved or disproved ( Poole and Mackworth ,  2010 ). The  Prolog  logic pro- gramming language ( Clocksin and Mellish ,  2003 ; Körner et al. ,  2022 ) is arguably the most prominent symbolic language to describe deductive reasoning problems. We adopt its grammar to represent a problem as facts, rules, and queries. ", "page_idx": 3, "bbox": [304, 71.33179473876953, 526, 206.81976318359375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 32, "type": "text", "text": "•  Facts : a fact    $F$   is a simple statement with a predicate  and a set of  arguments , formulated as  $P(a_{1},\\cdot\\cdot\\cdot,a_{n})$  , where    $P$   is the predicate name and each argument    $a_{i}$   can be a variable, entity, num- ber, or bool. For example,  Age ( Peter ,  31)  means “Peter’s age is   $31^{\\circ}$  , and  MadeOfIron ( Nails ,  True ) represents the fact “Nails are made of iron”. ", "page_idx": 3, "bbox": [304, 209.66566467285156, 526, 304.503662109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 33, "type": "text", "text": "•  Rules : rules are written in the form of cla es:  $F_{1}\\wedge\\cdot\\cdot\\cdot\\wedge F_{m}\\to F_{m+1}\\wedge\\cdot\\cdot\\cdot\\wedge F_{n}$  , whe  $F_{i}$  a fact and the rule means “if the facts  $F_{1},\\cdot\\cdot\\cdot\\ ,F_{m}$   · · · are true, then the facts  $F_{m+1}\\cdot\\cdot\\cdot F_{n}$   are also true.” •  Queries : a query    $Q$   is simply another fact re- quired to be proved based on known facts and rules. ", "page_idx": 3, "bbox": [304, 307.34954833984375, 526, 391.4729919433594], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 34, "type": "text", "text": "First-Order Logic (FOL). While the logic pro- gramming language efficiently represents common deductive reasoning problems, it may fail to rep- resent more complex first-order logic (FOL) prob- lems. To address this, we also include the FOL grammar ( Enderton ,  2001 ) in Appendix  A . A prob- lem is then parsed into a list of FOL formulas, which are divided into  Premises  (the known in- formation from the problem) and  Conclusion  (the unknown formula to be proved). An example sen- tence and its FOL formula are given in Table  1 . ", "page_idx": 3, "bbox": [304, 398.4591064453125, 526, 547.4967651367188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 35, "type": "text", "text": "Constraint Satisfaction (CSP). Constraint sat- isfaction problems (CSPs) ( Kumar ,  1992 ) aims to find the value assignment of a set of objects that satisfy a number of constraints. A CSP is often defined as a triple    $(X,D,C)$  , where  $X~=~\\{x_{1},\\cdot\\cdot\\cdot,x_{n}\\}$   is a set of variables,    $D\\ =$   $\\{D_{1},\\cdot\\cdot\\cdot\\ ,D_{n}\\}$   is a set of their respective domains of values, and    $C=\\{C_{1},\\cdot\\cdot\\cdot,C_{m}\\}$   is a set of con- straints. Each variable    $x_{i}$   can take on the values in the nonempty domain  $D_{i}$  . Every constraint    $C_{j}$  is a pair    $\\langle t_{j},R_{j}\\rangle$  , wh e    $t_{j}\\subset X$   is a subset of    $k$  variables and  $R_{j}$   is a  k -ary relation on the corre- sponding subset of domains  $D_{j}$  . We use the above syntax to define a CSP problem as variables, do- mains, and constraints. An example is given in both Figure  2  and Table  1 . ", "page_idx": 3, "bbox": [304, 557.3170166015625, 526, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 36, "type": "table", "page_idx": 4, "img_path": "layout_images/2023.findings-emnlp.248_2.jpg", "table_footnote": "Table 1: A summary of the symbolic formulations (with examples) and symbolic solvers we use for the five datasets in our study, representing four different types of logical reasoning problems. ", "bbox": [69, 69, 525, 255], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Example\n\nProblem | Formulation NL Seniehee Symbolic Formulation Solver Dataset\n. If the circuit is complete and Complete(Circuit, True)/A\nRawat’ LP the circuit has the light bulb Has (Circuit, LightBulb) Pyke . roe\n. e then the light bulb is glowing. — Glowing(LightBulb, True)\nFirst-Order A Czech person wrote a book | Sa23x1(Czech(2x1) A Author (x9, 21)\nLogic HO in 1946. ABook(2:) \\ Publish(s’, 1946)) Prover? FOLIO\nCanes On a shelf, there are five books. blue_book € {1, 2,3, 4,5} ‘tier.\nSatiehacion CSP The blue book is to the right yellow_book € {1,2,3,4,5} ey LogicalDeduction\n. of the yellow book. blue_book > yellow_book :\ns repairs(Xena, radios) A\nAnalytical SAT Xena and exactly three other | ont([titechnicians], tséXena 23 AR-LSAT\nReasoning technicians repair radios\n\nA repairs(t, radios))) == 3)\n\n", "vlm_text": "The table presents an overview of different problem types and their corresponding formulations in the context of logic and reasoning, along with examples, solvers used, and datasets associated with each problem type. Here's a breakdown of the information provided for each row:\n\n1. **Problem: Deductive Reasoning**\n   - **Formulation:** LP (Logical Programming)\n   - **Example NL Sentence:** \"If the circuit is complete and the circuit has the light bulb then the light bulb is glowing.\"\n   - **Symbolic Formulation:** `Complete(Circuit, True) ∧ Has(Circuit, LightBulb) → Glowing(LightBulb, True)`\n   - **Solver:** Pyke\n   - **Dataset:** ProntoQA, ProofWriter\n\n2. **Problem: First-Order Logic**\n   - **Formulation:** FOL (First-Order Logic)\n   - **Example NL Sentence:** \"A Czech person wrote a book in 1946.\"\n   - **Symbolic Formulation:** `∃x2 ∃x1 (Czech(x1) ∧ Author(x2, x1) ∧ Book(x2) ∧ Publish(x2, 1946))`\n   - **Solver:** Prover9\n   - **Dataset:** FOLIO\n\n3. **Problem: Constraint Satisfaction**\n   - **Formulation:** CSP (Constraint Satisfaction Problem)\n   - **Example NL Sentence:** \"On a shelf, there are five books. The blue book is to the right of the yellow book.\"\n   - **Symbolic Formulation:** \n     - `blue_book ∈ {1, 2, 3, 4, 5}`\n     - `yellow_book ∈ {1, 2, 3, 4, 5}`\n     - `blue_book > yellow_book`\n   - **Solver:** python-constraint\n   - **Dataset:** LogicalDeduction\n\n4. **Problem: Analytical Reasoning**\n   - **Formulation:** SAT (Satisfiability Testing)\n   - **Example NL Sentence:** \"Xena and exactly three other technicians repair radios.\"\n   - **Symbolic Formulation:** \n     - `repairs(Xena, radios) ∧ Count([t:technicians], t ≠ Xena ∧ repairs(t, radios)) = 3`\n   - **Solver:** Z3\n   - **Dataset:** AR-LSAT\n\nEach row defines a specific type of reasoning problem, showing how natural language sentences can be transformed into symbolic logic formulations suitable for various solvers, which are then applied to specific datasets for evaluation or training purposes."}
{"layout": 37, "type": "text", "text": "Boolean Satisfiability (SAT) Formulation. SAT is the problem of deciding if there is an assignment to the variables of a Boolean formula such that the formula is satisfied. Many analytical reasoning problems can be formulated as SAT problems. We adopt the grammar defined in  Ye et al.  ( 2023 ) to rmulate an SAT problem    $\\mathcal{P}$   as    $(\\Phi,{\\mathcal{T}},\\mathcal{Q})$  , wh  $\\Phi$   is a set of constraints defined under the theory  T  , and    $\\mathcal{Q}$   is the query of interest. ", "page_idx": 4, "bbox": [70, 276.73101806640625, 291, 406.0760192871094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 38, "type": "text", "text": "Table  1  summarizes the four types of logical reasoning problems, their typical datasets, and the symbolic formulation used to represent each type of problem. We also give an example of a natural lan- guage statement with its corresponding symbolic formulation for each type. Appendix  C  shows the full prompts we use for the problem formulator. To teach LLMs to better align each statement with its corresponding symbolic form, we use the for- mat  SYMBOLIC _ FORMULA  ::: NL_ STATEMENT in in-context examples to enable better grounding. ", "page_idx": 4, "bbox": [70, 403.3241271972656, 291, 551.968994140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 39, "type": "text", "text": "3.2 Symbolic Reasoner ", "text_level": 1, "page_idx": 4, "bbox": [70, 561, 185, 573], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 40, "type": "text", "text": "After the problem formulator parses the problem  $P$   and the goal    $G$   into symbolic representations  $\\hat{P}$   and  $\\hat{G}$  , we call a deterministic external solver depending on the task, to obtain the answer  $A$  . Ta- ble  1  summarizes the symbolic solvers we use for each type of logical reasoning problem. ", "page_idx": 4, "bbox": [70, 578.0658569335938, 291, 658.9613647460938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 41, "type": "text", "text": "LP System. For deductive reasoning, we incor- porate the  Pyke  expert system ( Frederiksen ,  2008 ), which makes inferences based on the logic pro- gramming language. In response to a query,  Pyke first creates a knowledge base, populating it with known facts and rules. Subsequently, it applies forward- and backward-chaining algorithms to in- fer new facts and substantiate the goal. ", "page_idx": 4, "bbox": [70, 665.7154541015625, 291, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 42, "type": "text", "text": "FOL Prover. We use  Prover  $9^{2}$    as the FOL in- ference engine.  Prover9  is an automated theorem prover that supports first-order logic and equational logic. It initially converts FOL statements to con- junctive normal form (CNF) and then performs resolution ( Robinson ,  1965 ) on the CNF to deduce whether a conclusion is true, false, or unknown. ", "page_idx": 4, "bbox": [305, 273.16461181640625, 526, 371.5689697265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 43, "type": "text", "text": "CSP Solver. Solving a CSP is to find value as- signments for all variables that satisfy all given constraints. Commonly used algorithms for this task include backtracking, constraint propagation, and local search variants. To this end, we incor- porate the  python-constraint 3   package which offers solvers for CSPs over finite domains. ", "page_idx": 4, "bbox": [305, 378.7431335449219, 526, 473.5810852050781], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 44, "type": "text", "text": "SAT Solver. For solving SAT problems, we use the  Z3  theorem prover ( de Moura and Bjørner , 2008 ), a satisfiability modulo theories (SMT) solver developed by Microsoft 4 . The SMT solver provides algorithms to determine whether a set of mathematical formulas is satisfiable. It generalizes the SAT problems to more complex formulas in- volving real numbers, integers, and various data structures such as lists, arrays, bit vectors, and strings. A lot of real-world analytical reasoning problems can be represented as problems of solv- ing a system of equations. ", "page_idx": 4, "bbox": [305, 480.7552490234375, 526, 643.3425903320312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 45, "type": "text", "text": "3.3 Self-Refiner ", "text_level": 1, "page_idx": 4, "bbox": [306, 652, 387, 665], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 46, "type": "text", "text": "For complex problems, generating the correct log- ical form may become challenging for LLMs. To address this, we introduce a  self-refinement  mod- ule that learns to modify inaccurate logical for- mulations using the error messages from the sym- bolic reasoner as feedback. Recent works ( Chen et al. ,  2023 ;  Madaan et al. ,  2023 ) have adopted sim- ilar ideas to improve code generation, by teaching LLMs to debug their predicted programs via few- shot demonstrations. Here we extend this idea to refine generated logic representations. If the sym- bolic solver returns an execution error, we instruct the LLM to refine the incorrect logical form, by prompting it with the erroneous logic form, the solver’s error message, and a set of demonstrations showing common error cases ( e.g. , a free variable is not bounded to any quantifier in FOL) and their remedies. We run this process iterative ly until ei- ther no error messages are returned, or the maxi- mum number of allowable revisions is reached. ", "page_idx": 4, "bbox": [305, 669.8594360351562, 526, 723.6555786132812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 47, "type": "text", "text": "", "page_idx": 5, "bbox": [70, 71.72454071044922, 291, 288.1187744140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 48, "type": "text", "text": "3.4 Result Interpreter ", "text_level": 1, "page_idx": 5, "bbox": [70, 300, 181, 312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 49, "type": "text", "text": "Finally, the result interpreter translates the results returned from the symbolic solver back to a natural language answer. For certain problems, this can be achieved through predefined rules; for example, mapping  Entailment  to  true . However, this pro- cess can be more complex for CSPs,  e.g. , translat- ing  {convertible: 1, tractor: 2, minivan:   $3\\rangle$   to “ the convertible is the oldest. ”. To handle these varying levels of complexity, we designed both rule-based and LLM-based result interpreters. Details of the result interpreter are given in Appendix  D . ", "page_idx": 5, "bbox": [70, 318.29290771484375, 291, 466.937744140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 50, "type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5, "bbox": [70, 479, 155, 493], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 51, "type": "text", "text": "Datasets. We evaluate L OGIC -LM on five com- mon logical reasoning datasets, as follows. ", "page_idx": 5, "bbox": [70, 501.84930419921875, 291, 528.9378662109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 52, "type": "text", "text": "PrOntoQA  ( Saparov and He ,  2023 ) is a recent synthetic dataset created to analyze the capacity of LLMs for deductive reasoning. We use the hardest fictional characters  version of the dataset, based on the results in  Saparov and He  ( 2023 ). Each version is divided into different subsets depending on the number of reasoning hops required. We use the hardest 5-hop subset for evaluation. Each question in PrOntoQA aims to validate a new fact’s veracity, such as “True or false: Alex is not shy.”. ", "page_idx": 5, "bbox": [70, 529.5826416015625, 291, 665.0706176757812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 53, "type": "text", "text": "Proof Writer  ( Tafjord et al. ,  2021 ) is another commonly used dataset for deductive logical rea- soning. Compared with PrOntoQA, the problems are expressed in a more naturalistic language form. We use the open-world assumption (OWA) subset in which each example is a (problem, goal) pair and the label is one of { PROVED ,  DISPROVED , UNKNOWN }. The dataset is divided into five parts, each part requiring    $0,\\leq1,\\leq2,\\leq3$  , and    $\\leq5$   hops of reasoning, respectively. We evaluate the hardest depth-5  subset. To reduce overall experimentation costs, we randomly sample 600 examples in the test set and ensure a balanced label distribution. ", "page_idx": 5, "bbox": [70, 665.7154541015625, 291, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 54, "type": "text", "text": "", "page_idx": 5, "bbox": [305, 71.72454071044922, 526, 139.07037353515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 55, "type": "text", "text": "FOLIO  ( Han et al. ,  2022 ) is a challenging expert-written dataset for logical reasoning. The problems are mostly aligned with real-world knowl- edge and use highly natural wordings, and the ques- tions require complex first-order logic reasoning to solve. We use the entire FOLIO test set for evalua- tion, consisting of 204 examples. ", "page_idx": 5, "bbox": [305, 139.28822326660156, 526, 234.1260986328125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 56, "type": "text", "text": "Logical Deduction  is a challenging logical rea- soning task from the BigBench ( Srivastava et al. , 2022 ) collaborative benchmark. The problems are mostly about deducing the order of a sequence of objects from a minimal set of conditions. We use the full test set consisting of 300 examples. ", "page_idx": 5, "bbox": [305, 234.34291076660156, 526, 315.6312255859375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 57, "type": "text", "text": "AR-LSAT  ( Zhong et al. ,  2022 ) is a dataset that collects all analytical logic reasoning questions from the Law School Admission Test from 1991 to 2016. We use the test set which has 231 multiple- choice questions. AR-LSAT is particularly chal- lenging, with state-of-the-art models only achiev- ing performance slightly better than random guess- ing ( Liang et al. ,  2022 ;  Ribeiro et al. ,  2023a ). ", "page_idx": 5, "bbox": [305, 315.8489990234375, 526, 424.2366027832031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 58, "type": "text", "text": "We convert all examples into a standard multiple- choice format, comprising a problem statement, a question, and potential answers, as shown in Fig- ure  2 . We also select 1-5 examples from the train- ing set of each dataset as in-context examples. De- tailed data statistics are in Appendix  B . ", "page_idx": 5, "bbox": [305, 427.6823425292969, 526, 508.57781982421875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 59, "type": "text", "text": "Baselines. We compare our model against two baselines that depend solely on LLMs for logical reasoning: 1)  Standard  LLMs, which leverage in- context learning to directly answer the question; and 2)  Chain-of-Thought  (CoT) ( Wei et al. ,  2022b ), which adopts a step-by-step problem-solving ap- proach, generating explanations before providing the final answer. We separately evaluate the set- tings that ChatGPT ( gpt-3.5-turbo ), GPT-3.5 ( text-davinci-003 ) ( Ouyang et al. ,  2022a ) and GPT-4 ( gpt-4 ) ( OpenAI ,  2023 ) serve as the under- lying LLMs for all models. To ensure fair com- parisons, we use the same in-context examples for all models. For reproducible results, we set the temperature to 0 and select the response with the highest probability from LLMs. Since all examples are formed as multiple-choice questions, we eval- uate model performance based on the accuracy of selecting the correct answer. ", "page_idx": 5, "bbox": [305, 516.6669921875, 526, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 60, "type": "table", "page_idx": 6, "img_path": "layout_images/2023.findings-emnlp.248_3.jpg", "table_footnote": "Table 2: Accuracy of standard promoting (Standard), chain-of-thought promoting (CoT), and our method (L OGIC - LM, without self-refinement) on five reasoning datasets. The best results within each base LLM are highlighted. ", "bbox": [69, 70, 526, 212], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "ChatGPT (gpt-3.5-turbo)\n\nGPT-3.5 (text-davinci-003)\n\nGPT-4 (gpt-4)\n\nDataset Standard CoT Logic-LM | Standard CoT Logic-LM | Standard CoT  Logic-LM\nPrOntoQA 47.40 67.80 61.00 51.80 83.00 85.00 77.40 98.79 83.20\nProofWriter 35.50 49.17 58.33 36.16 48.33 71.45 52.67 68.11 79.66\nFOLIO 45.09 57.35 62.74 54.60 57.84 61.27 69.11 70.58 78.92\nLogicalDeduction 40.00 42.33 65.67 41.33 48.33 62.00 71.33 75.25 87.63\nAR-LSAT 20.34 17.31 26.41 22.51 22.51 25.54 33.33 35.06 43.04\n\n", "vlm_text": "The table presents performance metrics for different models (ChatGPT, GPT-3.5, and GPT-4) across various datasets. The metrics are shown for three methods: Standard, CoT (Chain of Thought), and Logic-LM. The datasets include PrOntoQA, ProofWriter, FOLIO, LogicalDeduction, and AR-LSAT. Each cell contains numerical values representing model performance, with some values highlighted in green."}
{"layout": 61, "type": "text", "text": "4.1 Main Results ", "text_level": 1, "page_idx": 6, "bbox": [70, 232, 158, 245], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 62, "type": "text", "text": "We report the results of L OGIC -LM ( without  self- refinement) and baselines in Table  2 . For L OGIC - LM, a symbolic solver does not return an answer when there are grammar errors in the symbolic formulation. For these un-executable cases, we fall back on using chain-of-thought to predict the answer. We have three major observations. ", "page_idx": 6, "bbox": [69, 253.91766357421875, 291, 348.36383056640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 63, "type": "text", "text": "1. Logic-LM significantly outperforms stan- dard LLMs and CoT across all datasets. With GPT- 3.5, our method outperforms standard LLM on all datasets, with an average improvement of  $39.2\\%$  . This highlights the benefit of combining LLMs with external symbolic solvers for logical reason- ing. L OGIC -LM also improves CoT by a large mar- gin of   $18.4\\%$   on average, showing that offloading the reasoning to symbolic solvers greatly improves faithfulness compared with pure language-based reasoning with CoT. ", "page_idx": 6, "bbox": [69, 350.6654968261719, 291, 499.31036376953125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 64, "type": "text", "text": "2. GPT-4 outperforms GPT-3.5 by a large margin of   $48.46\\%$   on average for the standard prompting. This aligns with the assertion that the main en- hancement of GPT-4 lies in its ability to carry out complex reasoning ( OpenAI ,  2023 ). Although this may indicate that the logical reasoning capability can be boosted by scaling up the LLM, we observe that GPT-4 still makes numerous unfaithful reason- ing errors. By delegating the reasoning to symbolic solvers, our method can further improve GPT-4 by an average of  $24.98\\%$   and  $10.44\\%$   for standard prompting and CoT prompting, respectively. ", "page_idx": 6, "bbox": [69, 501.6120300292969, 291, 663.8065795898438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 65, "type": "text", "text": "3. While integrating CoT generally enhances LLM performance, we find its benefits compara- tively less substantial or even negative on FOLIO, Logical Deduction, and AR-LSAT, with a modest improvement of   $11.75\\%$  ,   $9.41\\%$  , and   $-3.2\\%$  , re- spectively. On the contrary, the benefits of CoT on ProntoQA and Proof Writer are   $51.59\\%$   and  $33.82\\%$  , respectively. A plausible explanation is ", "page_idx": 6, "bbox": [69, 666.1082153320312, 291, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 66, "type": "table", "page_idx": 6, "img_path": "layout_images/2023.findings-emnlp.248_4.jpg", "table_footnote": "Table 3: Analysis of accuracy and execution status of L OGIC -LM. We present the percentage of executable logical formulations ( Exe_Rate ) together with the accu- racy of the execution ( Exe_Acc ). SR represents before  $(-)$   and after  $(+)$   self-refinement. ", "bbox": [304, 230, 527, 446], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Dataset SR GPT-3.5 GPT-4\nExe_Rate Exe_Acc Exe_Rate Exe_Acc\n99.4% 84.9 100.0% 83.2\nPronto’ 100.0% 0.6 85.040.1 100.0% 83.2\n; 87.3% B.6 99.0% 79.6\nPropfivriter 95.6% 183 74.1 fos 99.0% 719.6\n66.7% 61.8 79.9% 80.4\nFOLIO 84.3% t176 64.3425 85.8% 59 79.9 Jos\nLogical — 100.0% 62.0 100.0% 87.6\nDeduction + 100.0% 62.0 100.0% 87.6\n11.3% 57.7 32.6% 60.0\nARTSAT 21.8% tos 60.3426 39.8% 172 58.8 J12\n\n", "vlm_text": "This table compares the performance of GPT-3.5 and GPT-4 on various datasets: ProntoQA, ProofWriter, FOLIO, Logical Deduction, and AR-LSAT. It evaluates two metrics: Execution Rate (Exe_Rate) and Execution Accuracy (Exe_Acc), with and without SR (System Rewrite) indicated by '+' and '−'. \n\nKey points include:\n\n- For ProntoQA, GPT-4 maintains a 100% execution rate both with and without SR, but execution accuracy slightly decreases from GPT-3.5 to GPT-4.\n- In the ProofWriter dataset, both GPT-3.5 and GPT-4 achieve high execution rates, with minor differences in accuracy.\n- FOLIO shows improved execution rates and accuracy from \"−\" to \"+\" for both models.\n- In Logical Deduction, GPT-4 shows higher execution accuracy compared to GPT-3.5.\n- For AR-LSAT, GPT-4 shows improved execution rates but a slight decrease in accuracy when SR is applied.\n\nArrows indicate changes in performance with System Rewrite: blue for improvement and red for decline."}
{"layout": 67, "type": "text", "text": "that CoT emulates human forward-chain reasoning: beginning with known facts and sequentially de- riving new conclusions until the goal is met. This reasoning style aligns well with problems in the PrOntoQA and Proof Writer datasets. However, FOL and CSP problems often necessitate more sophisticated reasoning strategies that are “non- linear” compared to standard forward-chain rea- soning. These include hypothesizing, conditioning, recursive inference, and the process of elimina- tion. Compared to CoT, the integration of symbolic solvers is better suited to these reasoning styles, hence yielding a more marked improvement on FO- LIO   $(+21.85\\%)$  , Logical Deduction   $(+45.67\\%)$  , and AR-LSAT   $(+24.14\\%)$  . ", "page_idx": 6, "bbox": [305, 469.7944030761719, 526, 672.6390380859375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 68, "type": "text", "text": "4.2 Effectiveness of Problem Formulator ", "text_level": 1, "page_idx": 6, "bbox": [306, 687, 503, 699], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 69, "type": "text", "text": "We then evaluate how well LLM can translate a given problem into the symbolic formulation used by each symbolic solver. In Table  3 , we report the percentage of symbolic formulations that are  exe- cutable  by the corresponding symbolic solver for ", "page_idx": 6, "bbox": [305, 706.7582397460938, 526, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 70, "type": "image", "page_idx": 7, "img_path": "layout_images/2023.findings-emnlp.248_5.jpg", "img_caption": "Figure 3: Accuracy of different models for increasing size of reasoning depth on the Proof Writer dataset. ", "bbox": [70, 77, 290, 234], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "60s : ae ces\n50 tte 473 aid ewig\nSS 51\n~~ 383\n40 “SSL 335\n30 ;\n0 1 2 3 5\n\nReasoning Depth\n", "vlm_text": "The image is a graph showing the accuracy of different models with increasing reasoning depth on the Proof Writer dataset. It displays three lines representing different models:\n\n1. A green line, starting at 81.7 and decreasing to 71.1 as reasoning depth increases.\n2. A blue dashed line, starting at 76.3 and decreasing to 51.\n3. A gray dotted line, starting at 57.7 and decreasing to 33.5.\n\nThe x-axis represents the reasoning depth (from 0 to 5), and the y-axis represents the accuracy percentage (from 30 to 90). Each point on the graph marks the accuracy for a specific reasoning depth."}
{"layout": 71, "type": "text", "text": "each dataset ( Exe_Rate ). Generally, LLM demon- strates high proficiency in transcribing problems into symbolic formats, evidenced by its near   $100\\%$  Exe_Rate  on ProntoQA, Proof Writer, and Logi- cal Deduction. However, the high performance on these datasets is somewhat anticipated, given that their problems are mostly synthetically generated, limiting language variability. When it comes to datasets comprising real-world, expertly crafted problems, such as FOLIO and AR-LSAT, GPT- 4’s performance is notably less promising, with Exe_Rate  scores of  $79.9\\%$   and   $32.6\\%$   respectively. This discrepancy underscores the inherent chal- lenges associated with converting real-world prob- lems into their logical equivalents. ", "page_idx": 7, "bbox": [70, 257.0068359375, 291, 459.8514099121094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 72, "type": "text", "text": "Exe_Rate  only reflects the  grammar  correctness of the logical form. We also report the accuracy of the executable samples ( Exe_Acc ) to measure the  semantic  correctness. We find that logical forms generated by GPT-4 generally achieve high Exe_Acc , even for the most challenging AR-LSAT dataset. Such performance accentuates the poten- tial of symbolic solvers in bolstering the model’s logical reasoning prowess, contingent on the pre- cise translation of problems into symbolic forms. ", "page_idx": 7, "bbox": [70, 460.7809753417969, 291, 595.8761596679688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 73, "type": "text", "text": "4.3 Robustness of Reasoning ", "text_level": 1, "page_idx": 7, "bbox": [70, 608, 212, 620], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 74, "type": "text", "text": "Incorporating symbolic solvers also leads to more robust  reasoning. To illustrate this, we report the performance of L OGIC -LM and baselines for questions of varying complexity levels. We ran- domly selected 300 examples from each subset of Proof Writer, ensuring a balanced label distri- bution. The problems in these subsets require 0,  $<=$  ,  ${<=}2$  ,  $<=3$  , and   ${<=}5$   hops of reasoning, respec- tively. The results, shown in Figure  3 , indicate that L OGIC -LM becomes increasingly effective as the required reasoning depth increases. For exam- ", "page_idx": 7, "bbox": [70, 625.4591674804688, 291, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 75, "type": "image", "page_idx": 7, "img_path": "layout_images/2023.findings-emnlp.248_6.jpg", "img_caption": "Figure 4: The accuracy for different rounds of self- refinement, with the corresponding executable rates. ", "bbox": [305, 70, 526, 253], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "= + -CoT (GPT-3.5) —*Logic-LM (GPT-3.5)\n\nAccuracy _ _ Cot (GPT-4) —e—Logic-LM (GPT-4)\n85\n79.9 79.41\n78.92\n80 78.43\n75\ni 70.58\n64.56 63.84\n65 61.27 62.25\n60\nSaree 57.87\n55\nRounds 0 1 2. 3\nGPT-3.5 66.7% 79.4% | 82.4% 84.3%\nGPT-4 79.9% 85.3% | 85.3% 85.8%\n\n", "vlm_text": "The image is a line graph with accuracy on the y-axis and rounds on the x-axis. It compares the performance of CoT (Chain of Thought) and Logic-LM models for GPT-3.5 and GPT-4 over different rounds of self-refinement.\n\n- Orange lines represent GPT-3.5: \n  - CoT (dotted) remains below 60%.\n  - Logic-LM (solid) starts at 61.27% and increases slightly over rounds.\n\n- Green lines represent GPT-4: \n  - CoT (dashed) maintains consistent accuracy around 70.58%.\n  - Logic-LM (solid) starts at 78.92% and stays above 78%, peaking at 79.9%.\n\nThe table below shows executable rates for different rounds:\n- GPT-3.5 improves from 66.7% to 84.3%.\n- GPT-4 improves from 79.9% to 85.8%."}
{"layout": 76, "type": "text", "text": "ple, L OGIC -LM outperforms CoT by   $7.1\\%$  ,   $5.0\\%$  ,  $12.7\\%$  ,   $20.0\\%$  , and   $39.4\\%$   on depth-0, depth-1, depth-2, depth-4, and depth-5 problems, respec- tively. In L OGIC -LM, multi-step logical reasoning is delegated to external symbolic solvers, thereby transitioning the challenge of LLM from  problem- solving  to  problem representation . Ideally, the com- plexity of formally representing a problem state- ment in logical form should remain relatively con- stant, regardless of whether the questions require simple or complex reasoning. The trends in Fig- ure  3  validate this assumption. The performance of Standard  and    $C o T$   declines precipitously with the escalation of problem complexity. However, this trend is less prominent for L OGIC -LM, indicating that the robust reasoning capabilities provided by external solvers substantially mitigate performance degradation for complex reasoning problems. ", "page_idx": 7, "bbox": [305, 274, 526, 517.6353149414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 77, "type": "text", "text": "4.4 Impact of Self-Refinement ", "text_level": 1, "page_idx": 7, "bbox": [305, 527, 453, 539], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 78, "type": "text", "text": "In Table  3 , we find that self-refinement is effective in fixing the in-executable symbolic formulations, increasing the  Exe_Rate  by 5.01 on average. For an in-depth analysis, we then evaluate the accu- racy and  Exe_Rate  across different rounds of self- refinement on FOLIO, namely, 0 (no refinement), 1, 2, and 3 rounds. The results are in Figure  4 . ", "page_idx": 7, "bbox": [305, 544.1600952148438, 526, 638.6052856445312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 79, "type": "text", "text": "We find that as the rounds of self-refinement in- crease, the percentage of executable formulations consistently increases, leading to an enhancement in the final performance. This suggests that self- refinement serves as an effective tool in aiding the LLM to accurately frame the problem. However, the accuracy tends to stagnate in subsequent rounds, even though the  Exe_Rate  continues to increase. This can be attributed to the type of feedback re- ceived by the self-refiner, which is the error mes- ", "page_idx": 7, "bbox": [305, 639.0088500976562, 526, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 80, "type": "image", "page_idx": 8, "img_path": "layout_images/2023.findings-emnlp.248_7.jpg", "img_caption": "Figure 5: An example of the generated symbolic representation and the predicted answer by L OGIC -LM. ", "bbox": [71, 70, 524, 263], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Problem: “Stranger Things\" is a popular Netflix show. If a Netflix show is popular, Karen will binge-watch it.\nIf and only if Karen binge-watches a Netflix show, she will download it. Karen does not download “Black Mirror\".\n“Black Mirror\" is a Netflix show. If Karen binge-watches a Netflix show, she will share it to Lisa.\nQuestion: Is the following statement true, false, or uncertain? “Black Mirror\" is popular.\n(A) True (B) False (C) Uncertain\nGenerated symbolic Formulations:\nPredicates:\nNetflixShow(x) # x is a Netflix show.\nPopular(x) # x is popular.\nBingeWatch(x, y) # x binge-watches y.\nDownload(x, y) # x downloads y.\nShare(x, y, Zz) # x shares y to z.\nPremises:\nNetflixShow(strangerThings) A Popular(strangerThings) # \"Stranger Things” is a popular Netflix show.\nvx (NetflixShow(x) A Popular(x) > BingeWatch(karen, x)) # If a Netflix show is popular, Karen will binge-watch it.\nvx (NetflixShow(x) A BingeWatch(karen, x) « Download(karen, x)) # If and only if Karen .. , she will download it.\n\nNetflixShow(blackMirror) A -Download(karen, blackMirror) # Karen does not .. \"Black Mirror” is a Netflix show.\nvx (NetflixShow(x) A BingeWatch(karen, x) > Share(karen, x, lisa)) # If Karen .. , she will share it to Lisa.\nConclusion:\n\nPopular(blackMirror) # \"Black Mirror\" is popular.\nPredicted answer: B\n\n", "vlm_text": "The image shows a logic problem involving two Netflix shows, \"Stranger Things\" and \"Black Mirror,\" and a person named Karen. The problem is posed in a textual format at the top, detailing conditions regarding Karen's behavior related to these shows based on their popularity and her actions of binge-watching or downloading them.\n\nThe question asks whether the statement \"Black Mirror is popular\" is true, false, or uncertain based on the provided conditions, with options (A) True, (B) False, and (C) Uncertain.\n\nBelow the problem, the image provides a symbolic representation of the predicates and premises related to the problem:\n- Predicates define different properties (e.g., if a show is a Netflix show, if it is popular, if Karen binge-watches it, etc.).\n- Premises list logical statements derived from the problem statement, expressed in symbolic logic.\n\nThe conclusion of this symbolic logic formulation checks if \"Black Mirror\" is popular.\n\nThe predicted answer given at the bottom is (B) False, indicating that according to the logic under the constraints provided, it is concluded that \"Black Mirror\" is not popular."}
{"layout": 81, "type": "text", "text": "sage from the symbolic solver. This feedback aids in converting “invalid” symbolic representations into valid ones. However, a valid symbolic repre- sentation does not necessarily equate to a “correct” problem formulation that accurately represents the problem. This issue could be tackled by enhanc- ing the self-refiner to incorporate feedback beyond the error message,  e.g. , a reward signal from an additional module evaluating the accuracy of a gen- erated symbolic form. We leave this as a promising direction for future exploration. ", "page_idx": 8, "bbox": [70, 285.47625732421875, 290, 434.1211242675781], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 82, "type": "text", "text": "4.5 Case Study ", "text_level": 1, "page_idx": 8, "bbox": [70, 445, 147, 457], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 83, "type": "text", "text": "In Figure  5 , we show an example of the symbolic representations generated by GPT-4, together with the predicted answer. In general, L OGIC -LM has demonstrated a potent capacity to interpret com- plex problems into symbolic forms. Nonetheless, there remain certain difficulties in accurately un- der standing the semantics of the problem. ", "page_idx": 8, "bbox": [70, 462.5470886230469, 290, 556.9922485351562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 84, "type": "text", "text": "We further analyze some error cases in Fig- ure  6  of Appendix  E . Example 1 shows a case where GPT-4 generates an incorrect FOL represen- tation, stemming from its inability to define ap- propriate predicates. Here, instead of creating the predicate  Eastern Wild Turkey , the model gener- ates a constant,  WildTurkey(eastern) , in which WildTurkey  is the predicate and  eastern  is the constant. While this representation is valid in iso- lation, it does not interact well with subsequent constants. This inconsistency is a recurring issue in GPT-4’s symbolic form generation, illustrating that the model sometimes struggles to maintain an over arching understanding of the problem when forming logical symbols. Example 3 highlights a case where GPT-4 struggles to interpret specific expressions accurately. In this case, the model fails to distinguish between the meanings of “below” and “above”, resulting in an incorrect constraint Dan  $>$   Eve . Example 4 exemplifies GPT-4’s chal- lenge with fully grasping the rules of FOL gram- mar, evidenced by the invalid generated formula: Rating(subway, y)    $\\wedge\\;{\\sf y}\\;>\\;9$  . These error cases underscore that transforming problems into logi- cal forms remains a challenging task for modern LLMs, due to the intricacies of FOL formulation, the innate flexibility of natural language, and the complexity of global problem comprehension. ", "page_idx": 8, "bbox": [70, 557.7097778320312, 290, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 85, "type": "text", "text": "", "page_idx": 8, "bbox": [306, 285.47625732421875, 526, 447.6708068847656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 86, "type": "text", "text": "5 Conclusion and Future Work ", "text_level": 1, "page_idx": 8, "bbox": [306, 463, 473, 476], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 87, "type": "text", "text": "In this work, we propose a novel approach to ad- dress logical reasoning problems by combining large language models with symbolic solvers. We introduce Logic-LM, one instantiation of such a framework, and demonstrate how it significantly improves performance over pure LLMs and chain- of-thought prompting techniques. ", "page_idx": 8, "bbox": [306, 488.411376953125, 526, 582.8565063476562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 88, "type": "text", "text": "While Logic-LM has proven to be a capable sys- tem, it can be further improved with extension to more flexible and powerful logic systems. For ex- ample, statistical relational learning (SRL) systems such as Markov logic networks ( Richardson and Domingos ,  2006 ) and probabilistic soft logic ( Bach et al. ,  2017 ) have demonstrated great promise in reasoning under uncertainty and integration with our framework would enable even more adaptive problem-solving capabilities. Additionally, our method can be extended to reasoning problems requiring commonsense, which remains a signifi- cant challenge as they often require reasoning over complex and ambiguous rules. ", "page_idx": 8, "bbox": [306, 584.8091430664062, 526, 774.1040649414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 89, "type": "text", "text": "Limitations ", "text_level": 1, "page_idx": 9, "bbox": [70, 71, 130, 83], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 90, "type": "text", "text": "We identify two main limitations of L OGIC -LM. First, L OGIC -LM relies on translating reasoning problems into logical formats that can be tackled by symbolic solvers. As a consequence, the model’s applicability is inherently bounded by the expres- siveness of the symbolic solver, for example, not all problems can be easily encoded in first-order logic. Nevertheless, this limitation can be mitigated by integrating a more diverse set of symbolic solvers. The flexible design of L OGIC -LM facilitates this integration. The wide range of reasoning tasks that we can instantiate our L OGIC -LM framework on shows its general applicability. ", "page_idx": 9, "bbox": [70, 94.11663055419922, 291, 269.86187744140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 91, "type": "text", "text": "Second, L OGIC -LM depends on in-context learning coupled with self-refinement to convert a natural language (NL) problem into the symbolic representation. While this method has proven to be effective, it may face difficulties when dealing with logical representations with intricate grammar structures, such as probabilistic soft logic. This arises from the difficulty in conveying complex grammatical rules to the language model through a limited number of demonstrations within a con- strained context size. As a potential solution, future works could explore the development of specialized modules to enhance the mapping between NL and symbolic language,  e.g. , fine-tuning LLMs with synthetic data generated via symbolic solvers. ", "page_idx": 9, "bbox": [70, 270.86151123046875, 291, 473.7060852050781], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 92, "type": "text", "text": "Ethics Statement ", "text_level": 1, "page_idx": 9, "bbox": [70, 486, 158, 499], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 93, "type": "text", "text": "The use of large language models requires a signifi- cant amount of energy for computation for training, which contributes to global warming ( Strubell et al. , 2019 ). Our work performs few-shot in-context learning instead of training models from scratch, so the energy footprint of our work is less. The large language models whose API we use for inference, especially GPT-4, consume significant energy. ", "page_idx": 9, "bbox": [70, 508.78533935546875, 291, 616.7802124023438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 94, "type": "text", "text": "Acknowledgements ", "text_level": 1, "page_idx": 9, "bbox": [70, 630, 170, 642], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 95, "type": "text", "text": "This work was supported by the National Science Foundation Award #2048122. The views expressed are those of the authors and do not reflect the offi- cial policy or position of the US government. ", "page_idx": 9, "bbox": [70, 651.8595581054688, 291, 705.6546630859375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 96, "type": "text", "text": "References ", "text_level": 1, "page_idx": 9, "bbox": [70, 730, 126, 743], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 97, "type": "text", "text": "Stephen Bach, Matthias Broecheler, Bert Huang, and Lise Getoor. 2017.  Hinge-loss markov random fields ", "page_idx": 9, "bbox": [70, 750.873046875, 291, 773.8380737304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 98, "type": "text", "text": "and probabilistic soft logic . Journal of Machine Learning Research (JMLR) , 18(1):1–67. ", "page_idx": 9, "bbox": [316, 72.59915161132812, 526, 95.56421661376953], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 99, "type": "text", "text": "Tom B. Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared Kaplan, Prafulla Dhariwal, Arvind Neel a kant an, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel M. Ziegler, Jeffrey Wu, Clemens Winter, Christopher Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, and Dario Amodei. 2020.  Language models are few-shot learners . In Proceedings of the Annual Conference on Neural Information Processing Systems (NeurIPS) . ", "page_idx": 9, "bbox": [306, 104.26071166992188, 526, 247.7798614501953], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 100, "type": "text", "text": "Le-Wen Cai, Wang-Zhou Dai, Yu-Xuan Huang, Yu- Feng Li, Stephen H. Muggleton, and Yuan Jiang. 2021.  Abductive learning with ground knowledge base . In  Proceedings of the 30th International Joint Conference on Artificial Intelligence (IJCAI) , pages 1815–1821. ", "page_idx": 9, "bbox": [306, 256.4753112792969, 526, 323.278564453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 101, "type": "text", "text": "Wenhu Chen, Xueguang Ma, Xinyi Wang, and William W. Cohen. 2022. Program of thoughts prompting: Disentangling computation from rea- soning for numerical reasoning tasks . CoRR , abs/2211.12588. ", "page_idx": 9, "bbox": [306, 331.97509765625, 526, 387.81781005859375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 102, "type": "text", "text": "Xinyun Chen, Maxwell Lin, Nathanael Schärli, and Denny Zhou. 2023.  Teaching large language models to self-debug .  CoRR , abs/2304.05128. ", "page_idx": 9, "bbox": [306, 396.51434326171875, 526, 430.43896484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 103, "type": "text", "text": "Peter Clark, Oyvind Tafjord, and Kyle Richardson. 2020. Transformers as soft reasoners over language . In  Pro- ceedings of the 29th International Joint Conference on Artificial Intelligence (IJCAI) , pages 3882–3890. ", "page_idx": 9, "bbox": [306, 439.13446044921875, 526, 484.0186462402344], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 104, "type": "text", "text": "William F Clocksin and Christopher S Mellish. 2003. Programming in PROLOG . Springer Science & Busi- ness Media. ", "page_idx": 9, "bbox": [306, 492.71514892578125, 526, 526.6397094726562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 105, "type": "text", "text": "Karl Cobbe, Vineet Kosaraju, Mohammad Bavarian, Jacob Hilton, Reiichiro Nakano, Christopher Hesse, and John Schulman. 2021.  Training verifiers to solve math word problems .  CoRR , abs/2110.14168. ", "page_idx": 9, "bbox": [306, 535.335205078125, 526, 580.2194213867188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 106, "type": "text", "text": "Leonardo Mendonça de Moura and Nikolaj S. Bjørner. 2008.  Z3: an efficient SMT solver . In  Proceedings of the 14th International Conference of Tools and Algo- rithms for the Construction and Analysis of Systems (TACAS) , volume 4963 of  Lecture Notes in Computer Science , pages 337–340. ", "page_idx": 9, "bbox": [306, 588.9158935546875, 526, 655.7182006835938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 107, "type": "text", "text": "Leonardo Mendonça de Moura, Soonho Kong, Jeremy Avigad, Floris van Doorn, and Jakob von Raumer. 2015.  The lean theorem prover (system description) . In  Proceedings of the 25th International Conference on Automated Deduction (ICAD) , volume 9195 of Lecture Notes in Computer Science , pages 378–388. ", "page_idx": 9, "bbox": [306, 664.4146728515625, 526, 731.2169799804688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 108, "type": "text", "text": "Iddo Drori, Sarah Zhang, Reece Shuttleworth, Leonard Tang, Albert Lu, Elizabeth Ke, Kevin Liu, Linda Chen, Sunny Tran, Newman Cheng, et al. 2022. A ", "page_idx": 9, "bbox": [306, 739.9134521484375, 526, 773.8380737304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 109, "type": "text", "text": "neural network solves, explains, and generates uni- versity math problems by program synthesis and few- shot learning at human level.  Proceedings of the Na- tional Academy of Sciences , 119(32):e2123433119. ", "page_idx": 10, "bbox": [81, 72.59915161132812, 290, 117.48334503173828], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 110, "type": "text", "text": "Herbert B Enderton. 2001.  A mathematical introduction to logic . Elsevier. ", "page_idx": 10, "bbox": [70, 125.08377075195312, 290, 148.04884338378906], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 111, "type": "text", "text": "Bruce Frederiksen. 2008.  Applying expert system tech- nology to code reuse with pyke .  PyCon: Chicago . ", "page_idx": 10, "bbox": [70, 155.64828491210938, 290, 178.61341857910156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 112, "type": "text", "text": "Luyu Gao, Aman Madaan, Shuyan Zhou, Uri Alon, Pengfei Liu, Yiming Yang, Jamie Callan, and Gra- ham Neubig. 2023.  PAL: program-aided language models . In  Proceedings of the International Con- ference on Machine Learning (ICML) , volume 202, pages 10764–10799. ", "page_idx": 10, "bbox": [70, 186.21383666992188, 290, 253.01710510253906], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 113, "type": "text", "text": "Olga Golovneva, Moya Chen, Spencer Poff, Martin Corredor, Luke Z ett le moyer, Maryam Fazel-Zarandi, and Asli Cel i kyi l maz. 2023.  ROSCOE: A suite of metrics for scoring step-by-step reasoning . In  Pro- ceedings of the 11th International Conference on Learning Representations (ICLR) . ", "page_idx": 10, "bbox": [70, 260.6165466308594, 290, 327.4197998046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 114, "type": "text", "text": "Nitish Gupta, Kevin Lin, Dan Roth, Sameer Singh, and Matt Gardner. 2020.  Neural module networks for reasoning over text . In  Proceedings of the 8th In- ter national Conference on Learning Representations (ICLR) . ", "page_idx": 10, "bbox": [70, 335.0202331542969, 290, 390.86297607421875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 115, "type": "text", "text": "Simeng Han, Hailey Schoelkopf, Yilun Zhao, Zhenting Qi, Martin Riddell, Luke Benson, Lucy Sun, Eka- terina Zubova, Yujie Qiao, Matthew Burtell, David Peng, Jonathan Fan, Yixin Liu, Brian Wong, Mal- colm Sailor, Ansong Ni, Linyong Nan, Jungo Kasai, Tao Yu, Rui Zhang, Shafiq R. Joty, Alexander R. Fab- bri, Wojciech Kryscinski, Xi Victoria Lin, Caiming Xiong, and Dragomir Radev. 2022.  FOLIO: natu- ral language reasoning with first-order logic .  CoRR , abs/2209.00840. ", "page_idx": 10, "bbox": [70, 398.4634094238281, 290, 509.1038818359375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 116, "type": "text", "text": "Joy He-Yueya, Gabriel Poesia, Rose E Wang, and Noah D Goodman. 2023.  Solving math word prob- lems by combining language models with symbolic solvers .  CoRR , abs/2304.09102. ", "page_idx": 10, "bbox": [70, 516.704345703125, 290, 561.5885009765625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 117, "type": "text", "text": "Jie Huang and Kevin Chen-Chuan Chang. 2023.  To- wards reasoning in large language models: A survey . In  Findings of the 61st Annual Meeting of the Asso- ciation for Computational Linguistics (ACL) , pages 1049–1065. ", "page_idx": 10, "bbox": [70, 569.18896484375, 290, 625.0316772460938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 118, "type": "text", "text": "Albert Qiaochu Jiang, Sean Welleck, Jin Peng Zhou, Timothée Lacroix, Jiacheng Liu, Wenda Li, Mateja Jamnik, Guillaume Lample, and Yuhuai Wu. 2023. Draft, sketch, and prove: Guiding formal theorem provers with informal proofs . In  Proceedings of the 11th International Conference on Learning Represen- tations (ICLR) . ", "page_idx": 10, "bbox": [70, 632.632080078125, 290, 710.3939208984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 119, "type": "text", "text": "Takeshi Kojima, Shixiang Shane Gu, Machel Reid, Yu- taka Matsuo, and Yusuke Iwasawa. 2022.  Large lan- guage models are zero-shot reasoners . In  Proceed- ings of the Annual Conference on Neural Information Processing Systems (NeurIPS) . ", "page_idx": 10, "bbox": [70, 717.994384765625, 290, 773.8380737304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 120, "type": "text", "text": "Philipp Körner, Michael Leuschel, João Barbosa, Vítor Santos Costa, Verónica Dahl, Manuel V. Her men egil do, José F. Morales, Jan Wielemaker, Daniel Diaz, and Salvador Abreu. 2022.  Fifty years of prolog and beyond .  Theory Pract. Log. Program. , 22(6):776–858.", "page_idx": 10, "bbox": [306, 72.59915161132812, 526, 139.4024200439453], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 121, "type": "text", "text": "Vipin Kumar. 1992. Algorithms for constraint- satisfaction problems: A survey. AI Mag., 13(1):32–44. ", "page_idx": 10, "bbox": [306, 150.53408813476562, 526, 184.4586944580078], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 122, "type": "text", "text": "Angeliki Lazaridou, Elena Gri bo vs kaya, Wojciech Stokowiec, and Nikolai Grigorev. 2022.  Internet- augmented language models through few-shot prompting for open-domain question answering . CoRR , abs/2203.05115. ", "page_idx": 10, "bbox": [306, 195.59030151367188, 526, 251.4330596923828], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 123, "type": "text", "text": "Percy Liang, Rishi Bommasani, Tony Lee, Dimitris Tsipras, Dilara Soylu, Michihiro Yasunaga, Yian Zhang, Deepak Narayanan, Yuhuai Wu, Ananya Ku- mar, Benjamin Newman, Binhang Yuan, Bobby Yan, Ce Zhang, Christian Cosgrove, Christopher D. Man- ning, Christopher Ré, Diana Acosta-Navas, Drew A. Hudson, Eric Zelikman, Esin Durmus, Faisal Ladhak, Frieda Rong, Hongyu Ren, Huaxiu Yao, Jue Wang, Keshav Santhanam, Laurel J. Orr, Lucia Zheng, Mert Y ks ekg n l, Mirac Suzgun, Nathan Kim, Neel Guha, Niladri S. Chatterji, Omar Khattab, Peter Henderson, Qian Huang, Ryan Chi, Sang Michael Xie, Shibani Santurkar, Surya Ganguli, Tatsunori Hashimoto, Thomas Icard, Tianyi Zhang, Vishrav Chaudhary, William Wang, Xuechen Li, Yifan Mai, Yuhui Zhang, and Yuta Koreeda. 2022.  Holistic eval- uation of language models .  CoRR , abs/2211.09110. ", "page_idx": 10, "bbox": [306, 262.5656433105469, 526, 449.92193603515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 124, "type": "text", "text": "Bo Liu, Yuqian Jiang, Xiaohan Zhang, Qiang Liu, Shiqi Zhang, Joydeep Biswas, and Peter Stone. 2023a. LLM  $+\\mathrm{P}$  : empowering large language models with op- timal planning proficiency .  CoRR , abs/2304.11477. ", "page_idx": 10, "bbox": [306, 461.0535583496094, 526, 505.937744140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 125, "type": "text", "text": "Hanmeng Liu, Ruoxi Ning, Zhiyang Teng, Jian Liu, Qiji Zhou, and Yue Zhang. 2023b.  Evaluating the logi- cal reasoning ability of chatgpt and GPT-4 .  CoRR , abs/2304.03439. ", "page_idx": 10, "bbox": [306, 517.0693359375, 526, 561.9535522460938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 126, "type": "text", "text": "Qing Lyu, Shreya Havaldar, Adam Stein, Li Zhang, Delip Rao, Eric Wong, Marianna Apidianaki, and Chris Callison-Burch. 2023. Faithful chain-of- thought reasoning .  CoRR , abs/2301.13379. ", "page_idx": 10, "bbox": [306, 573.0850830078125, 526, 617.9692993164062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 127, "type": "text", "text": "Aman Madaan, Niket Tandon, Prakhar Gupta, Skyler Hallinan, Luyu Gao, Sarah Wiegreffe, Uri Alon, Nouha Dziri, Shrimai Prabhumoye, Yiming Yang, Sean Welleck, Bodhi s at twa Prasad Majumder, Shashank Gupta, Amir Yaz dan bakhsh, and Peter Clark. 2023.  Self-refine: Iterative refinement with self-feedback .  CoRR , abs/2303.17651. ", "page_idx": 10, "bbox": [306, 629.1009521484375, 526, 706.8627319335938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 128, "type": "text", "text": "Robin Manhaeve, Sebastijan Dumancic, Angelika Kim- mig, Thomas Demeester, and Luc De Raedt. 2021. Neural probabilistic logic programming in deep- problog .  The Journal of Artificial Intelligence (AIJ) , 298:103504. ", "page_idx": 10, "bbox": [306, 717.994384765625, 526, 773.8380737304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 129, "type": "text", "text": "Jiayuan Mao, Chuang Gan, Pushmeet Kohli, Joshua B. Tenenbaum, and Jiajun Wu. 2019. The neuro- symbolic concept learner: Interpreting scenes, words, and sentences from natural supervision . In  Proceed- ings of the 7th International Conference on Learning Representations (ICLR) . ", "page_idx": 11, "bbox": [70, 72.59915161132812, 290, 139.4024200439453], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 130, "type": "text", "text": "Kostas S. Metaxiotis, Dimitris Askounis, and John E. Psarras. 2002.  Expert systems in production planning and scheduling: A state-of-the-art survey .  Journal of Intelligent Manufacturing , 13(4):253–260. ", "page_idx": 11, "bbox": [70, 146.42379760742188, 290, 191.30799865722656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 131, "type": "text", "text": "Aaron Meurer, Christopher P. Smith, Mateusz Pa- procki, Ondrej Certík, Sergey B. Kirpichev, Matthew Rocklin, Amit Kumar, Sergiu Ivanov, Jason Keith Moore, Sartaj Singh, Thilina Rathnayake, Sean Vig, Brian E. Granger, Richard P. Muller, Francesco Bonazzi, Harsh Gupta, Shivam Vats, Fredrik Johans- son, Fabian Pedregosa, Matthew J. Curry, Andy R. Terrel, Stepán Roucka, Ashutosh Saboo, Isuru Fer- nando, Sumith Kulal, Robert Cimrman, and An- thony M. Scopatz. 2017.  Sympy: symbolic com- puting in python .  PeerJ Computer Science , 3:e103. ", "page_idx": 11, "bbox": [70, 198.33041381835938, 290, 319.93048095703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 132, "type": "text", "text": "Reiichiro Nakano, Jacob Hilton, Suchir Balaji, Jeff Wu, Long Ouyang, Christina Kim, Christopher Hesse, Shantanu Jain, Vineet Kosaraju, William Saunders, Xu Jiang, Karl Cobbe, Tyna Eloundou, Gretchen Krueger, Kevin Button, Matthew Knight, Benjamin Chess, and John Schulman. 2021.  Webgpt: Browser- assisted question-answering with human feedback . CoRR , abs/2112.09332. ", "page_idx": 11, "bbox": [70, 326.95184326171875, 290, 415.6732177734375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 133, "type": "text", "text": "OpenAI. 2023. GPT-4 technical report . CoRR , abs/2303.08774. ", "page_idx": 11, "bbox": [70, 422.6956481933594, 290, 445.66070556640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 134, "type": "text", "text": "Long Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll L. Wainwright, Pamela Mishkin, Chong Zhang, Sandhini Agarwal, Katarina Slama, Alex Ray, John Schulman, Jacob Hilton, Fraser Kelton, Luke Miller, Maddie Simens, Amanda Askell, Peter Welin- der, Paul F. Christiano, Jan Leike, and Ryan Lowe. 2022a.  Training language models to follow instruc- tions with human feedback . In  Proceedings of the Annual Conference on Neural Information Process- ing Systems (NeurIPS) . ", "page_idx": 11, "bbox": [70, 452.68212890625, 290, 563.3235473632812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 135, "type": "text", "text": "Long Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll L. Wainwright, Pamela Mishkin, Chong Zhang, Sandhini Agarwal, Katarina Slama, Alex Ray, John Schulman, Jacob Hilton, Fraser Kelton, Luke Miller, Maddie Simens, Amanda Askell, Peter Welin- der, Paul F. Christiano, Jan Leike, and Ryan Lowe. 2022b.  Training language models to follow instruc- tions with human feedback . In  Proceedings of the Annual Conference on Neural Information Process- ing Systems (NeurIPS . ", "page_idx": 11, "bbox": [70, 570.344970703125, 290, 680.9854736328125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 136, "type": "text", "text": "Lawrence C. Paulson. 1994.  Isabelle - A Generic The- orem Prover (with a contribution by T. Nipkow) , volume 828 of  Lecture Notes in Computer Science . Springer. ", "page_idx": 11, "bbox": [70, 688.0079345703125, 290, 732.8920288085938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 137, "type": "text", "text": "David Poole and Alan K. Mackworth. 2010.  Artificial Intelligence - Foundations of Computational Agents . Cambridge University Press. ", "page_idx": 11, "bbox": [70, 739.9134521484375, 290, 773.8380737304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 138, "type": "text", "text": "Connor Pryor, Charles Dickens, Eriq Augustine, Alon Albalak, William Yang Wang, and Lise Getoor. 2023. Neupsl: Neural probabilistic soft logic . In  Proceed- ings of the 32nd International Joint Conference on Artificial Intelligence (IJCAI) , pages 4145–4153. ", "page_idx": 11, "bbox": [306, 72.59915161132812, 526, 128.44288635253906], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 139, "type": "text", "text": "Danilo Neves Ribeiro, Shen Wang, Xiaofei Ma, Henghui Zhu, Rui Dong, Deguang Kong, Juli- ette Burger, Anjelica Ramos, Zhiheng Huang, William Yang Wang, George Karypis, Bing Xiang, and Dan Roth. 2023a.  STREET: A multi-task struc- tured reasoning and explanation benchmark . In  Pro- ceedings of the Eleventh International Conference on Learning Representations (ICLR) . ", "page_idx": 11, "bbox": [306, 137.00338745117188, 526, 225.72572326660156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 140, "type": "text", "text": "Danilo Neves Ribeiro, Shen Wang, Xiaofei Ma, Henry Zhu, Rui Dong, Deguang Kong, Juliette Burger, An- jelica Ramos, William Yang Wang, Zhiheng Huang, George Karypis, Bing Xiang, and Dan Roth. 2023b. STREET: A multi-task structured reasoning and ex- planation benchmark . In  Proceedings of the 11th International Conference on Learning Representa- tions (ICLR) . ", "page_idx": 11, "bbox": [306, 234.28622436523438, 526, 323.007568359375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 141, "type": "text", "text": "Matthew Richardson and Pedro M. Domingos. 2006. Markov logic networks .  Machine Learning , 62(1- 2):107–136. ", "page_idx": 11, "bbox": [306, 331.569091796875, 526, 365.49371337890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 142, "type": "text", "text": "John Alan Robinson. 1965.  A machine-oriented logic based on the resolution principle .  The Journal of the ACM (JACM) , 12(1):23–41. ", "page_idx": 11, "bbox": [306, 374.05419921875, 526, 407.97882080078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 143, "type": "text", "text": "Abulhair Saparov and He He. 2023.  Language models are greedy reasoners: A systematic formal analysis of chain-of-thought . In  Proceedings of the 11th In- ter national Conference on Learning Representations (ICLR) . ", "page_idx": 11, "bbox": [306, 416.5393371582031, 526, 472.383056640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 144, "type": "text", "text": "Murray Shanahan. 2022.  Talking about large language models .  CoRR , abs/2212.03551. ", "page_idx": 11, "bbox": [306, 480.94354248046875, 526, 503.9085998535156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 145, "type": "text", "text": "Yongliang Shen, Kaitao Song, Xu Tan, Dongsheng Li, Weiming Lu, and Yueting Zhuang. 2023.  Hugging- gpt: Solving AI tasks with chatgpt and its friends in hugging face .  CoRR , abs/2303.17580. ", "page_idx": 11, "bbox": [306, 512.4700927734375, 526, 557.3543090820312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 146, "type": "text", "text": "Weijia Shi, Sewon Min, Michihiro Yasunaga, Minjoon Seo, Rich James, Mike Lewis, Luke Z ett le moyer, and Wen-tau Yih. 2023.  REPLUG: retrieval-augmented black-box language models .  CoRR , abs/2301.12652. ", "page_idx": 11, "bbox": [306, 565.914794921875, 526, 610.7989501953125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 147, "type": "text", "text": "Aarohi Srivastava, Abhinav Rastogi, Abhishek Rao, Abu Awal Md Shoeb, Abubakar Abid, Adam Fisch, Adam R. Brown, Adam Santoro, Aditya Gupta, Adrià Garriga-Alonso, Agnieszka Kluska, Aitor Lewkowycz, Akshat Agarwal, Alethea Power, Alex Ray, Alex Warstadt, Alexander W. Kocurek, Ali Safaya, Ali Tazarv, Alice Xiang, Alicia Par- rish, Allen Nie, Aman Hussain, Amanda Askell, Amanda Dsouza, Ameet Rahane, Anantha raman S. Iyer, Anders Andreassen, Andrea Santilli, Andreas Stu hl m ller, Andrew M. Dai, Andrew La, Andrew K. Lampinen, Andy Zou, Angela Jiang, Angelica Chen, Anh Vuong, Animesh Gupta, Anna Gottardi, Anto- nio Norelli, Anu Venkatesh, Arash Ghola mid a vo odi, ", "page_idx": 11, "bbox": [306, 619.3594970703125, 526, 773.8380737304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 148, "type": "text", "text": "Arfa Tabassum, Arul Menezes, Arun Ki rub a rajan, Asher Mull ok and ov, Ashish Sabharwal, Austin Her- rick, Avia Efrat, Aykut Erdem, Ayla Karakas, and et al. 2022.  Beyond the imitation game: Quantifying and extrapolating the capabilities of language models . CoRR , abs/2206.04615. ", "page_idx": 12, "bbox": [81, 72.59915161132812, 290, 139.4024200439453], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 149, "type": "text", "text": "Emma Strubell, Ananya Ganesh, and Andrew McCal- lum. 2019.  Energy and policy considerations for deep learning in NLP . In  Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics (ACL) , pages 3645–3650. ", "page_idx": 12, "bbox": [70, 147.00289916992188, 290, 202.84559631347656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 150, "type": "text", "text": "Oyvind Tafjord, Bhavana Dalvi, and Peter Clark. 2021. Proof writer: Generating implications, proofs, and abductive statements over natural language . In  Find- ings of the 59th Annual Meeting of the Association for Computational Linguistics (ACL) , pages 3621–3634. ", "page_idx": 12, "bbox": [70, 210.44607543945312, 290, 266.289794921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 151, "type": "text", "text": "Oyvind Tafjord, Bhavana Dalvi Mishra, and Peter Clark. 2022.  Entailer: Answering questions with faithful and truthful chains of reasoning . In  Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing (EMNLP) , pages 2078– 2093. ", "page_idx": 12, "bbox": [70, 273.8892517089844, 290, 340.6924743652344], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 152, "type": "text", "text": "Empirical Methods in Natural Language Processing (EMNLP) , pages 89–105. ", "page_idx": 12, "bbox": [316, 72.59915161132812, 526, 95.56421661376953], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 153, "type": "text", "text": "Xi Ye, Qiaochu Chen, Isil Dillig, and Greg Durrett. 2023.  Satisfiability-aided language models using declarative prompting . In  Proceedings of the An- nual Conference on Neural Information Processing Systems (NeurIPS) . Wanjun Zhong, Siyuan Wang, Duyu Tang, Zenan Xu, Daya Guo, Yining Chen, Jiahai Wang, Jian Yin, Ming Zhou, and Nan Duan. 2022.  Analytical reasoning of text . In  Findings of the 2022 Conference of the North American Chapter of the Association for Computa- tional Linguistics: Human Language Technologies (NAACL-HLT) , pages 2306–2319. Denny Zhou, Nathanael Schärli, Le Hou, Jason Wei, Nathan Scales, Xuezhi Wang, Dale Schuurmans, Claire Cui, Olivier Bousquet, Quoc V. Le, and Ed H. Chi. 2023.  Least-to-most prompting enables complex reasoning in large language models . In  Proceedings of the 11th International Conference on Learning Representations (ICLR) . ", "page_idx": 12, "bbox": [306, 103.48464965820312, 526, 330.6939697265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 154, "type": "text", "text": "Jidong Tian, Yitian Li, Wenqing Chen, Liqiang Xiao, Hao He, and Yaohui Jin. 2022.  Weakly supervised neural symbolic learning for cognitive tasks . In  Pro- ceedings of 36th Conference on Artificial Intelligence (AAAI) , pages 5888–5896. ", "page_idx": 12, "bbox": [70, 348.29290771484375, 290, 404.1356506347656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 155, "type": "text", "text": "Xingyao Wang, Sha Li, and Heng Ji. 2022.  Code 4 struct: Code generation for few-shot structured prediction from natural language .  CoRR , abs/2210.12810. ", "page_idx": 12, "bbox": [70, 411.736083984375, 290, 445.66070556640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 156, "type": "text", "text": "Xuezhi Wang, Jason Wei, Dale Schuurmans, Quoc V. Le, Ed H. Chi, Sharan Narang, Aakanksha Chowd- hery, and Denny Zhou. 2023.  Self-consistency im- proves chain of thought reasoning in language mod- els . In  Proceedings of the 11th International Confer- ence on Learning Representations (ICLR) . ", "page_idx": 12, "bbox": [70, 453.26116943359375, 290, 520.0634155273438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 157, "type": "text", "text": "Jason Wei, Yi Tay, Rishi Bommasani, Colin Raffel, Barret Zoph, Sebastian Borgeaud, Dani Yogatama, Maarten Bosma, Denny Zhou, Donald Metzler, Ed H. Chi, Tatsunori Hashimoto, Oriol Vinyals, Percy Liang, Jeff Dean, and William Fedus. 2022a.  Emer- gent abilities of large language models .  Transactions on Machine Learning Research , 2022. ", "page_idx": 12, "bbox": [70, 527.663818359375, 290, 605.4257202148438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 158, "type": "text", "text": "Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, Ed H. Chi, Quoc Le, and Denny Zhou. 2022b. Chain of thought prompting elicits reasoning in large language models .  CoRR , abs/2201.11903. ", "page_idx": 12, "bbox": [70, 613.026123046875, 290, 657.9103393554688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 159, "type": "text", "text": "Yuhuai Wu, Albert Qiaochu Jiang, Wenda Li, Markus N. Rabe, Charles Staats, Mateja Jamnik, and Christian Szegedy. 2022.  Auto formalization with large lan- guage models . In  Proceedings of the Annual Con- ference on Neural Information Processing Systems (NeurIPS) . ", "page_idx": 12, "bbox": [70, 665.5107421875, 290, 732.3130493164062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 160, "type": "text", "text": "Kaiyu Yang, Jia Deng, and Danqi Chen. 2022.  Gen- erating natural language proofs with verifier-guided search . In  Proceedings of the 2022 Conference on ", "page_idx": 12, "bbox": [70, 739.9134521484375, 290, 773.8380737304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 161, "type": "table", "page_idx": 13, "img_path": "layout_images/2023.findings-emnlp.248_8.jpg", "table_caption": "B Dataset Statistics ", "table_footnote": "Table 4: First-Order Logic Grammar. ", "bbox": [69, 101, 274, 389], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Name\n\nFOL Notation\n\nConstant lowercase letters\nVariable LY, 200°\nAtom P(ai,+++ , Qn)\nNegation aP\nConjunction aA Py AP,\nDisjunction Pa. *% VP,\nImplication Pi > P\nEquivalence Pio Po\nExistential Quantifier | 4a P(a,---)\n\nUniversal Quantifier\n\n", "vlm_text": "The table lists components of First-Order Logic (FOL) along with their notations:\n\n1. **Constant** - Represented by lowercase letters.\n2. **Variable** - Examples include \\( x, y, z, \\ldots \\).\n3. **Atom** - Represented as \\( P(a_1, \\ldots, a_n) \\).\n4. **Negation** - Symbolized by \\( \\neg P \\).\n5. **Conjunction** - Shown as \\( P_1 \\land P_2 \\) or \\( P_1 \\land \\cdots \\land P_n \\).\n6. **Disjunction** - Represented by \\( P_1 \\lor P_2 \\) or \\( P_1 \\lor \\cdots \\lor P_n \\).\n7. **Implication** - Denoted as \\( P_1 \\rightarrow P_2 \\).\n8. **Equivalence** - Shown as \\( P_1 \\leftrightarrow P_2 \\).\n9. **Existential Quantifier** - Represented by \\( \\exists x P(x, \\cdots) \\).\n10. **Universal Quantifier** - Denoted by \\( \\forall x P(x, \\cdots) \\)."}
{"layout": 162, "type": "table", "page_idx": 13, "img_path": "layout_images/2023.findings-emnlp.248_9.jpg", "table_footnote": "Table 5: Statistics of the logical reasoning datasets. ", "bbox": [73, 406, 288, 514], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Dataset Reasoning | Test Size | #Opts\nPrOntoQA Deductive 500 2\nProofWriter Deductive 600 3\nFOLIO FOL 204 3\nLogicalDeduction CSP 300 35,7\nAR-LSAT AR 230 5\n\n", "vlm_text": "The table lists the details of different datasets characterized by the following columns:\n\n1. **Dataset**: Name of the dataset.\n2. **Reasoning**: Type of reasoning each dataset pertains to.\n3. **Test Size**: Number of test samples in each dataset.\n4. **#Opts**: Number of options per test question.\n\nHere are the specific details:\n\n- **PrOntoQA**: Deductive reasoning, test size of 500, 2 options.\n- **ProofWriter**: Deductive reasoning, test size of 600, 3 options.\n- **FOLIO**: FOL reasoning, test size of 204, 3 options.\n- **LogicalDeduction**: CSP reasoning, test size of 300, options of 3, 5, 7.\n- **AR-LSAT**: AR reasoning, test size of 230, 5 options."}
{"layout": 163, "type": "text", "text": "C Prompt Examples ", "text_level": 1, "page_idx": 13, "bbox": [70, 539, 184, 554], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 164, "type": "text", "text": "In this section we provide examples of the prompts used for each dataset and method. Prompts for stan- dard in-context learning contain 2 demonstrations consisting of 3 parts each: a context, a question, and options. Prompts for chain-of-thought prompt- ing contain 2 demonstrations consisting of 5 parts each: a task description, a context, a question, op- tions, and a chain of reasoning. Prompts for Logic- LM contain 2 demonstrations with 5 parts each: a task description, a context, a question, options, and a domain-specific symbolic program. For brevity, we show only a single demonstration  for each set- ting in the following sections. ", "page_idx": 13, "bbox": [70, 561.5360107421875, 290, 737.28125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 165, "type": "text", "text": "C.1 PrOntoQA Prompts Standard In-Context Learning ", "text_level": 1, "page_idx": 13, "bbox": [304, 71, 450, 103], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 166, "type": "table", "page_idx": 13, "img_path": "layout_images/2023.findings-emnlp.248_10.jpg", "bbox": [302, 106, 528, 209], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Context: Jompuses are not shy. Jompuses are yumpuses.\n(--+ more context here ---)\nZumpuses are rompuses. Max is a yumpus.\n\nQuestion: Is the following statement true or false?\nMax is sour.\n\nOptions:\nA) True\nB) False\n\nThe correct option is: B\n\n", "vlm_text": "The table contains a logical reasoning question.\n\n- **Context**: \n  - Jompuses are not shy.\n  - Jompuses are yumpuses.\n  - Zumpuses are rompuses.\n  - Max is a yumpus.\n\n- **Question**: \n  - Is the following statement true or false?\n  - Max is sour.\n\n- **Options**: \n  - A) True \n  - B) False\n\n- **The correct option is**: B (False)"}
{"layout": 167, "type": "text", "text": "Chain-of-Thought Prompting ", "text_level": 1, "page_idx": 13, "bbox": [316, 215, 456, 228.75], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 168, "type": "table", "page_idx": 13, "img_path": "layout_images/2023.findings-emnlp.248_11.jpg", "bbox": [302, 229.25, 528, 397], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Task Description: Given a problem statement as\ncontexts, the task is to answer a logical reasoning\nquestion.\n\nContext: Jompuses are not shy. Jompuses are yumpuses.\n¢ more context here ---)\nZumpuses are rompuses. Max is a yumpus.\n\nQuestion: Is the following statement true or false?\nMax is sour.\n\nOptions:\nA) True\nB) False\n\nReasoning: Max is a yumpus. Each yumpus is a dumpus.\n(--+ more reasoning here ---)\n\nTumpuses are not sour. So Max is not sour.\n\nThe correct option is: B\n\n", "vlm_text": "The table contains a logical reasoning task. Here's a breakdown:\n\n- **Task Description**: Solve a logical reasoning problem based on given contexts.\n- **Context**: \n  - Jompuses are not shy and are yumpuses.\n  - Zumpuses are rompuses.\n  - Max is a yumpus.\n\n- **Question**: Is the statement \"Max is sour\" true or false?\n- **Options**: \n  - A) True\n  - B) False\n\n- **Reasoning**: \n  - Max is a yumpus, and each yumpus is a dumpus.\n  - Tumpuses are not sour; therefore, Max is not sour.\n\n- **Correct Option**: B (False)"}
{"layout": 169, "type": "text", "text": "Logic-LM ", "text_level": 1, "page_idx": 13, "bbox": [316, 404, 365, 413.75], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 170, "type": "table", "page_idx": 13, "img_path": "layout_images/2023.findings-emnlp.248_12.jpg", "bbox": [303, 414.25, 528, 658], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "— ee eee\n\nTask Description: You are given a problem description\nand a question. The task is to:\n\n1) define all the predicates in the problem\n\n2) parse the problem into logic rules based on\n\nthe defined predicates\n\n3) write all the facts mentioned in the problem\n\n4) parse the question into the logic form\n\nContext: Each jompus is fruity.\n(--+ more context here ---)\nRompuses are zumpuses. Alex is a tumpus.\n\nQuestion: True or false: Alex is not shy.\n\nPredicates:\n\nJompus(\\$x, bool) ::: Does x belong to Jompus?\n(--+ more predicates here ---)\n\nZumpus (\\$x, bool) ::: Does x belong to Zumpus?\nFacts:\n\nTumpuses(Alex, True)\n\nRules:\nJompus($x, True) >>> Fruity($x, True)\n(--+ more rules here ---)\n\nDumpus(\\$x, True) >>> Rompus(\\$x, True)\n\nQuery:\nShy (Alex, False)\n\n", "vlm_text": "The table contains a logic problem titled \"Logic-EM\" with several sections:\n\n1. **Task Description**: Instructions on parsing a logic problem and defining predicates, rules, facts, and questions.\n\n2. **Context**: Contains statements used for logical deductions:\n   - \"Each jompus is fruity.\"\n   - \"Rompuses are zumpses. Alex is a tumpus.\"\n\n3. **Question**: A logic question to evaluate:\n   - \"True or false: Alex is not shy.\"\n\n4. **Predicates**: Definitions of logical predicates, e.g., \n   - `Jompus($x, bool)` asks if x belongs to Jompus.\n   - `Zumpus($x, bool)` asks if x belongs to Zumpus.\n\n5. **Facts**: Known truths, such as:\n   - `Tumpuses(Alex, True)`\n\n6. **Rules**: Logical rules for inference, e.g.,\n   - `Jompus($x, True) >>> Fruity($x, True)`\n   - `Dumpus($x, True) >>> Rompus($x, True)`\n\n7. **Query**: The logical representation of the question:\n   - `Shy(Alex, False)`"}
{"layout": 171, "type": "text", "text": "C.2 Proof Writer Prompts ", "text_level": 1, "page_idx": 14, "bbox": [70, 72, 199, 84], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 172, "type": "text", "text": "Logic-LM ", "text_level": 1, "page_idx": 14, "bbox": [316, 72, 365, 84], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 173, "type": "text", "text": "Standard In-Context Learning ", "text_level": 1, "page_idx": 14, "bbox": [70, 90, 215, 102], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 174, "type": "text", "text": "Context : The cow is blue. The cow is round. ( · · ·  more context here  · · ·  ) If the cow is cold and the cow visits the lion then the lion sees the squirrel. Question : Based on the above information , is the following statement true , false , or unknown? The tiger is not young. Options : A) True B) False C) Unknown The correct option is: B ", "page_idx": 14, "bbox": [70, 109.2259292602539, 283, 228.04576110839844], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 175, "type": "text", "text": "Chain-of-Thought Prompting ", "text_level": 1, "page_idx": 14, "bbox": [81, 240, 221, 253], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 176, "type": "text", "text": "Task Description : Given a problem statement as contexts , the task is to answer a logical reasoning question. Context : The cow is blue. The cow is round. ( · · ·  more context here  · · ·  ) If the cow is cold and the cow visits the lion then the lion sees the squirrel. Question : Based on the above information , is the following statement true , false , or unknown? The tiger is not young. Options : A) True B) False C) Unknown Reasoning : The tiger likes the cow. The tiger likes the squirrel. ( · · ·  more reasoning here  · · ·  ) If something is nice and it sees the tiger then it is young. So the tiger is young. The correct option is: B ", "page_idx": 14, "bbox": [70, 258.6734313964844, 283, 457.1971740722656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 177, "type": "text", "text": "C.3 FOLIO Prompts ", "text_level": 1, "page_idx": 15, "bbox": [70, 72, 176, 84], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 178, "type": "text", "text": "Standard In-Context Learning ", "text_level": 1, "page_idx": 15, "bbox": [70, 89, 214, 102], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 179, "type": "text", "text": "Context : All people who regularly drink coffee are dependent on caffeine. ", "page_idx": 15, "bbox": [70, 109.2259292602539, 275, 124.42857360839844], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 180, "type": "text", "text": "If Rina is not a person dependent on caffeine and a student , then Rina is either a person dependent on caffeine and a student , or neither a person dependent on caffeine nor a student. ", "page_idx": 15, "bbox": [70, 133.31153869628906, 275, 164.28147888183594], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 181, "type": "text", "text": "Question : Based on the above information , is the following statement true , false , or uncertain? Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug. ", "page_idx": 15, "bbox": [70, 172.99014282226562, 283, 204.13352966308594], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 182, "type": "text", "text": "Options : A) True B) False C) Uncertain The correct option is: A ", "page_idx": 15, "bbox": [70, 212.84213256835938, 173, 259.9273681640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 183, "type": "text", "text": "Chain-of-Thought Prompting ", "text_level": 1, "page_idx": 15, "bbox": [81, 272, 221, 284], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 184, "type": "text", "text": "Task Description : Given a problem statement as contexts , the task is to answer a logical reasoning question. Context : The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. ( · · ·  more context here  · · ·  ) John works at the Emmet Building. Question : Based on the above information , is the following statement true , false , or uncertain? The Blake McFall Company Building is located in Portland , Oregon. ", "page_idx": 15, "bbox": [70, 290.5550231933594, 287.8354187011719, 401.40338134765625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 185, "type": "text", "text": "Options ", "text_level": 1, "page_idx": 15, "bbox": [69, 410, 98, 414.75], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 186, "type": "text", "text": "A) True B) False C) Uncertain ", "page_idx": 15, "bbox": [70, 418.2577209472656, 120, 441.2563781738281], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 187, "type": "text", "text": "Reasoning : The Blake McFall Company Building is another name for the Emmet Building. ( · · ·  more reasoning here  · · ·  ) Therefore , the Blake McFall Company Building is located in Portland , Oregon. ", "page_idx": 15, "bbox": [70, 449.9649658203125, 267, 489.07977294921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 188, "type": "text", "text": "Logic-LM ", "text_level": 1, "page_idx": 15, "bbox": [316, 72, 365, 84], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 189, "type": "text", "text": "Task Description : Given a problem description and a question. The task is to parse the problem and the question into first -order logic formulas. The grammar of the first -order logic formula is defined as follows: ", "page_idx": 15, "bbox": [306, 91.74808502197266, 523, 130.8628387451172], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 190, "type": "text", "text": "2) logical disjunction: expr1  ∨ expr2 3) logical exclusive disjunction: expr1  $\\oplus$  expr2 ", "page_idx": 15, "bbox": [306, 139.7458038330078, 514, 155], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 191, "type": "text", "text": "dependent on caffeine. ( · · ·  more context here  · · ·  ) If Rina is not a person dependent on caffeine and a student , then Rina is either a person dependent on caffeine and a student , or neither a person dependent on caffeine nor a student. ", "page_idx": 15, "bbox": [306, 219.4507598876953, 519, 266.36163330078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 192, "type": "text", "text": "Question : Based on the above information , is the following statement true , false , or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug. ", "page_idx": 15, "bbox": [306, 275.0702209472656, 514, 314.18402099609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 193, "type": "text", "text": "Predicates : ", "text_level": 1, "page_idx": 15, "bbox": [305, 323, 344, 330], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 194, "type": "text", "text": "Dependent(x) :::   $\\mathsf{X}$   is a person dependent on caffeine ( · · ·  more predica s here  · · ·  ) Student(x) ::: x is a student\n\n ", "page_idx": 15, "bbox": [306, 331, 523, 354.03704833984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 195, "type": "text", "text": "Premises : ", "text_level": 1, "page_idx": 15, "bbox": [305, 362, 337, 369.75], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 196, "type": "text", "text": "∀ x (Drinks(x)    $\\rightarrow$  Dependent  $({\\mathsf{x}})$  ) ::: All people who regularly drink coffee are dependent on caffeine.\n\n ( · · ·  more p  here  · · ·  )\n\n ∀ x (Jokes(x)  $({\\mathsf{x}})\\ \\to$   →¬ Unaware  $({\\mathsf{x}})$  ) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. ", "page_idx": 15, "bbox": [306, 370, 514, 425.7716064453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 197, "type": "text", "text": "Conclusion : ", "text_level": 1, "page_idx": 15, "bbox": [306, 435, 344, 442], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 198, "type": "text", "text": "Jokes(rina)    $\\oplus$  Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug. ", "page_idx": 15, "bbox": [306, 442, 523, 465.6246032714844], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 199, "type": "text", "text": "C.4 Logical Deduction Prompts ", "text_level": 1, "page_idx": 16, "bbox": [69, 72, 224, 84], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 200, "type": "text", "text": "Standard In-Context Learning ", "text_level": 1, "page_idx": 16, "bbox": [70, 90, 215, 102], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 201, "type": "text", "text": "Context : The following paragraphs each describe a set of seven objects arranged in a fixed order. ( · · ·  more context here  · · ·  ) Eve finished below Ada. Rob finished below Joe. ", "page_idx": 16, "bbox": [70, 109.2259292602539, 270, 140.36936950683594], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 202, "type": "text", "text": "Question : Which of the following is true? ", "page_idx": 16, "bbox": [70, 149.07894897460938, 236, 156.4018096923828], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 203, "type": "text", "text": "Options ", "text_level": 1, "page_idx": 16, "bbox": [69, 164, 97, 172], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 204, "type": "text", "text": "A) Ana finished third. B) Eve finished third. C) Ada finished third. D) Dan finished third. E) Rob finished third. F) Amy finished third. G) Joe finished third. ", "page_idx": 16, "bbox": [70, 173.1645050048828, 162, 228.04576110839844], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 205, "type": "text", "text": "Chain-of-Thought Prompting ", "text_level": 1, "page_idx": 16, "bbox": [80, 255, 221, 269], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 206, "type": "text", "text": "Task Description : Given a problem statement as contexts , the task is to answer a logical reasoning question. ", "page_idx": 16, "bbox": [70, 274.6142272949219, 283.63787841796875, 297.7872314453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 207, "type": "text", "text": "Context : The following paragraphs each describe a set of five objects arranged in a fixed order. ( · · ·  more context here  · · ·  ) The raven is the third from the left. ", "page_idx": 16, "bbox": [70, 306.4958190917969, 270, 337.6402282714844], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 208, "type": "text", "text": "Question : Which of the following is true? ", "page_idx": 16, "bbox": [70, 346.34881591796875, 236, 353.6716613769531], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 209, "type": "text", "text": "Options : ", "text_level": 1, "page_idx": 16, "bbox": [69, 362, 98, 369], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 210, "type": "text", "text": "A) The quail is the rightmost. B) The owl is the rightmost. C) The raven is the rightmost. D) The falcon is the rightmost. E) The robin is the rightmost. ", "page_idx": 16, "bbox": [70, 370.434326171875, 200.22718811035156, 409.3747863769531], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 211, "type": "text", "text": "Logic-LM ", "text_level": 1, "page_idx": 16, "bbox": [316, 72, 365, 85], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 212, "type": "text", "text": "Task Description : You are given a problem description. The task is to parse the problem as a constraint satisfaction problem , defining the domain , variables , and contraints. ", "page_idx": 16, "bbox": [306, 91.74808502197266, 523, 122.89250183105469], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 213, "type": "text", "text": "Context : The following paragraphs each describe a set of three objects arranged in a fixed order. ( · · ·  more context here  · · ·  ) The minivan is newer than the convertible. ", "page_idx": 16, "bbox": [306, 131.60110473632812, 506, 162.7444305419922], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 214, "type": "text", "text": "Question : Which of the following is true? ", "page_idx": 16, "bbox": [306, 171.45407104492188, 473, 178.7769317626953], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 215, "type": "text", "text": "Options : ", "text_level": 1, "page_idx": 16, "bbox": [305, 187, 333, 195], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 216, "type": "text", "text": "A) The station wagon is the second -newest. B) The convertible is the second -newest. C) The minivan is the second -newest. ", "page_idx": 16, "bbox": [306, 195.5396270751953, 481, 218.5382537841797], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 217, "type": "text", "text": "Domain ", "text_level": 1, "page_idx": 16, "bbox": [305, 227, 330, 232.75], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 218, "type": "text", "text": "1: oldest 3: newest ", "page_idx": 16, "bbox": [306, 235.3915557861328, 343, 250.4208221435547], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 219, "type": "text", "text": "Variables ", "text_level": 1, "page_idx": 16, "bbox": [306, 258, 341, 263.75], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 220, "type": "text", "text": "station\\_wagon [IN] [1, 2, 3] convertible [IN] [1, 2, 3] minivan [IN] [1, 2, 3] ", "page_idx": 16, "bbox": [306, 267.27423095703125, 427.0307922363281, 290.27288818359375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 221, "type": "text", "text": "Constraints : ", "text_level": 1, "page_idx": 16, "bbox": [305, 298, 348, 306], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 222, "type": "text", "text": "station\\_wagon   $==\\quad1$   ::: The station wagon is the ", "page_idx": 16, "bbox": [306, 306, 506, 314.18402099609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 223, "type": "text", "text": "minivan  $>$   convertible ::: The minivan is newer than the convertible. ", "page_idx": 16, "bbox": [306, 323, 523, 338.0962219238281], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 224, "type": "text", "text": "All Different Constraint ([ station\\_wagon , convertible , minivan ]) ::: All vehicles have different values. ", "page_idx": 16, "bbox": [306, 339.0087585449219, 523, 362.0074462890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 225, "type": "text", "text": "Query ", "text_level": 1, "page_idx": 16, "bbox": [305, 370, 326, 377.75], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 226, "type": "text", "text": "A) station\\_wagon   $==2$   ::: The station wagon is the second -newest. B) convertible   $==2$   ::: The convertible is the ", "page_idx": 16, "bbox": [306, 378, 523, 401.86041259765625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 227, "type": "text", "text": "Reasoning : The owl is the leftmost. This means owl is not the rightmost. ( · · ·  more reasoning here  · · ·  ) This means raven is also not the rightmost. So , the answer is: A) The quail is the rightmost. The correct option is: A ", "page_idx": 16, "bbox": [70, 418.0833740234375, 273.2812805175781, 473.1379699707031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 228, "type": "text", "text": "C.5 AR-LSAT Prompts ", "text_level": 1, "page_idx": 17, "bbox": [70, 72, 188, 84], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 229, "type": "text", "text": "Standard In-Context Learning ", "text_level": 1, "page_idx": 17, "bbox": [70, 90, 214, 102], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 230, "type": "table", "page_idx": 17, "img_path": "layout_images/2023.findings-emnlp.248_13.jpg", "bbox": [68, 107, 288, 307], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Context: During a single week,\nFriday, tours will be conducted of a company's\nthree divisions: Operations,\nSales. Exactly five tours will be conducted\n\nthat week, one each\n\nday.\n\nfrom Monday through\n\n¢\n\nProduction, and\n\nmore context here\n\n) If the Operations division is toured on\nThursday, then the Production division is\n\ntoured on Friday.\n\nQuestion: Which one of the following CANNOT be true\nof the week's tour schedule?\n\nOptions:\n\nA) The division that is\ntoured on Tuesday.\n\nB) The division that is\ntoured on Friday.\n\nC) The division that is\ntoured on Thursday.\n\nD) The division that is\ntoured on Friday.\n\nE) The division that is\ntoured on Friday.\n\nThe correct option is: C\n\ntoured\n\ntoured\n\ntoured\n\ntoured\n\ntoured\n\non\n\non\n\non\n\non\n\non\n\nMonday is also\nMonday is also\nTuesday is also\nWednesday is also\n\nThursday is also\n", "vlm_text": "The table presents a logic puzzle regarding the scheduling of tours for a company's three divisions—Operations, Production, and Sales—over a week from Monday to Friday. The key points from the table are:\n\n- Context: There will be exactly five tours conducted, one each day, for the three divisions.\n- If the Operations division is toured on Thursday, then the Production division is toured on Friday.\n- The question asks which one of five given options cannot be true regarding the week's tour schedule.\n- Options provided are combinations of tours being conducted on multiple days for different divisions (e.g., the division toured on Monday is also toured on Tuesday).\n\nThe correct answer, option C, states: \"The division that is toured on Tuesday is also toured on Thursday.\" This cannot be true given the context of the tour schedules."}
{"layout": 231, "type": "text", "text": "Chain-of-Thought Prompting ", "text_level": 1, "page_idx": 17, "bbox": [80, 317, 221, 330], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 232, "type": "text", "text": "Task Description : Given a problem statement as contexts , the task is to answer a logical reasoning question. Context : During a single week , from Monday through Friday , tours will be conducted of a company 's three divisions: Operations , Production , and Sales. Exactly five tours will be conducted that week , one each day.  ( · · ·  more context here · · ·  )  If the Operations division is toured on Thursday , then the Production division is toured on Friday. Question : Which one of the following CANNOT be true of the week's tour schedule? Options : A) The division that is toured on Monday is also toured on Tuesday. B) The division that is toured on Monday is also toured on Friday. C) The division that is toured on Tuesday is also toured on Thursday. D) The division that is toured on Wednesday is also toured on Friday. E) The division that is toured on Thursday is also toured on Friday. Reasoning : Since Thursday and Friday already have tours planned , only Monday , Tuesday and Wednesday tours need to be determined. ( · · ·  more reasoning here  · · ·  ) A different division is toured on Thursday. Therefore , the final answer is C. The correct option is: C ", "page_idx": 17, "bbox": [70, 336.4363098144531, 283, 620.6953735351562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 233, "type": "text", "text": "Logic-LM ", "text_level": 1, "page_idx": 17, "bbox": [316, 72, 365, 85], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 234, "type": "image", "page_idx": 17, "img_path": "layout_images/2023.findings-emnlp.248_14.jpg", "bbox": [303, 88, 527, 453], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Task Description: You are given a problem description.\nThe task is to parse the problem as a constraint\nsatisfaction problem, defining the domain,\nvariables, and contraints.\n\nContext: A travel magazine has hired six interns -\nFarber, Gombarick, Hall, Jackson, Kanze, and\nLha - to assist in covering three stories:\nRomania, Spain, and Tuscany. ( more context here\n-+) Jackson is assigned to Tuscany. Kanze is\nnot assigned to Spain.\n\nQuestion: Which one of the following interns CANNOT\nbe assigned to Tuscany?\n\nOptions:\n\n(A) Farber\n(B) Gombarick\n(Cc) Hall\n\n(D) Kanze\n\n(E) Lha\n\nDeclarations:\n\nstories = EnumSort([Romania, Spain, Tuscany])\nassistants = EnumSort([photographer, writer])\n(--+ more declarations here ---)\n\ntrained = Function([Linterns] -> [assistants])\n\nConstraints:\n\ntrained(Gombarick) == trained(Lha) ::: Gombarick and\nLha will be trained in the same field\n\ntrained(Farber) != trained(Kanze) ::: Farber and\nKanze will be trained in different fields\n\n(--+ more contraints here ---)\n\nassigned(Jackson) == Tuscany ::: Jackson is assigned\nto Tuscany\n\nassigned(Kanze) != Spain ::: Kanze is not assigned\nto Spain\n\nOptions:\n\nis_unsat (assigned(Farber) == Tuscany) ::: (A)\n\nis_unsat (assigned(Gombarick) == Tuscany) ::: (B)\n\nis_unsat (assigned (Hall) Tuscany) (Cc)\n\nis_unsat (assigned (Kanze) Tuscany) : (D)\n\n(E)\n\nis_unsat (assigned(Lha) Tuscany)\n\n", "vlm_text": "The image contains a problem description formatted as a constraint satisfaction problem. It includes a task description, a context, a question, options, declarations, constraints, and solution options. The context involves a travel magazine hiring six interns to assist in covering stories in Romania, Spain, and Tuscany.\n\nKey elements of the image:\n- **Task Description:** Parsing the problem as a constraint satisfaction problem.\n- **Context:** Six interns are tasked to cover three stories; specific constraints and assignments are outlined.\n- **Question:** Identifying which intern cannot be assigned to Tuscany.\n- **Options:** Lists potential interns (Farber, Gombarick, Hall, Kanze, Lha) with labels (A) to (E).\n- **Declarations:** Defines domains and functions related to the problem, such as stories and assistant roles.\n- **Constraints:** Provides specific conditions on assignments and training of interns.\n- **Solution Options:** Checks unsatisfiability of each intern being assigned to Tuscany.\n\nBased on constraints and given assignments, the task is to deduce which intern cannot be assigned to Tuscany."}
{"layout": 235, "type": "text", "text": "D Result Interpreter Implementation ", "text_level": 1, "page_idx": 17, "bbox": [305, 468, 505, 482], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 236, "type": "text", "text": "For PrOntoQA and Proof Writer, the  Pyke  logic programming engine returns the inferred value of the variable in the query or  Unknown  if the variable cannot be determined. For example, for the query  Conduct Electricity(Nail,    $x.$  ) ,  Pyke may return  $x=\\mathsf{T r u e}$  . By comparing with the goal statement  Conduct Electricity(Nail, False) , we can know that goal to be proved is  False . For FOLIO, the FOL inference engine directly re- turns the veracity label of the goal as  ENTAILMENT , CONTRADICTION , and  CONTINGENT , which can be mapped to  True ,  False , and  Unknown , respectively. For Logical Deduction, the solver returns all the possible value assignments in an array. We write rules to parse each option into the corresponding value and check it is in the generated array. For AR- LSAT, we attempt to separately prove each option to find the correct answer. ", "page_idx": 17, "bbox": [305, 489.4284362792969, 526, 732.9220581054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 237, "type": "text", "text": "E Example Generations of L OGIC -LM ", "text_level": 1, "page_idx": 17, "bbox": [305, 743, 514, 756], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 238, "type": "text", "text": "Example 1 ", "text_level": 1, "page_idx": 18, "bbox": [74, 147, 113, 156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 239, "type": "text", "text": "Problem:  There are six types of wild turkeys: Eastern wild turkey, Osceola wild turkey, Gould's wild turkey, Merriam's wild turkey, Rio Grande  wild turkey, and Ocellated wild turkey.  Tom is not an Eastern wild turkey. Tom is not an Osceola wild turkey. Tom is also not a Gould's wild  turkey, or a Merriam's wild turkey, or a Rio Grande wild turkey. Tom is a wild turkey. Question:  Based on the above information, is the following statement true, false, or uncertain? Tom is an Ocellated wild turkey. (A) True                (B) False            (C) Uncertain Predicted logic programs: Premises: WildTurkey(eastern)  ∧ WildTurkey(osceola)  ∧ WildTurkey(gould)  ∧ WildTurkey(merriams)  ∧ WildTurkey(rio_grande)  ∧ WildTurkey(ocellated)   $\\rightarrow~\\forall\\times$   (WildTurkey(x)  $\\rightarrow$   (Ocellated Wild Turkey(x)  ∨ Eastern Wild Turkey(x)  ∨ Osceola Wild Turkey(x)  ∨ Gould s Wild Turkey(x)  ∨ Merriam s Wild Turkey(x)  ∨ Rio Grande Wild Turkey(x))) WildTurkey(tom)  ∧ ¬Eastern Wild Turkey(tom)  ∧ ¬Osceola Wild Turkey(tom)  ∧ ¬Gould s Wild Turkey(tom)  ∧ ¬Merriam s Wild Turkey(tom)  ∧ ¬Rio Grande Wild Turkey(tom) Conclusion: Ocellated Wild Turkey(tom) Predicted answer:  C  → A ", "page_idx": 18, "bbox": [75, 159.96505737304688, 515, 267.3143005371094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 240, "type": "text", "text": "Example 2 ", "text_level": 1, "page_idx": 18, "bbox": [74, 279, 113, 287], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 241, "type": "text", "text": "Problem:  A Japanese game company created the game the Legend of Zelda. All games in the Top 10 list are made by Japanese game companies. If a  game sells more than one million copies, then it will be selected into the Top 10 list. The Legend of Zelda sold more than one million copies. Question:  Based on the above information, is the following statement true, false, or uncertain? The Legend of Zelda is in the Top 10 list. (A) True                (B) False            (C) Uncertain Predicted logic programs: Premises: Japanese Game Company(legend of zelda) ∀ x (Top10List(x)  $\\rightarrow$   Japanese Game Company(x)) ∀ x (Sell More Than One Million Copies(x)  $\\rightarrow$   Top10List(x)) Sell More Than One Million Copies(legend of zelda)Conclusion: Top10List(legend of zelda) Predicted answer:  A ", "page_idx": 18, "bbox": [75, 291.5182800292969, 515, 385.4955749511719], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 242, "type": "text", "text": "Example 3 ", "text_level": 1, "page_idx": 18, "bbox": [74, 390, 113, 398], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 243, "type": "table", "page_idx": 18, "img_path": "layout_images/2023.findings-emnlp.248_15.jpg", "bbox": [72, 399, 521, 520], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Problem: The following paragraphs each describe a set of five objects arranged in a fixed order. The statements are logically consistent within\neach paragraph. In a golf tournament, there were five golfers: Rob, Eve, Eli, Amy, and Dan. Dan finished second. Amy finished below Eve. Dan\nfinished above Eve. Amy finished above Eli.\n\nQuestion: Which of the following is true?\n\n(A) Rob finished third  (B) Eve finished third (C) Eli finished third (D) Amy finished third  (E) Dan finished third\n\nPredicted logic programs:\n\nDomain: Variables: Constraints:\n1: first Rob [IN] [1, 2, 3, 4, 5] Dan == 2\n5: last Eve [IN] [1, 2, 3, 4, 5] Amy > Eve\nEli [IN] [1, 2, 3, 4, 5] Dan—>Eve > Dan < Eve\nAmy [IN] [1, 2, 3, 4, 5] Amy < Eli\nDan [IN] [1, 2, 3, 4, 5] Al1DifferentConstraint([Rob, Eve, Eli, Amy, Dan])\nQuery:\n(A) Rob == 3 (B) Eve == 3 (C) Eli (D) Amy == (E) Dan == 3\n\nPredicted answer: -- > B\n", "vlm_text": "The table describes a logic puzzle involving the placement of five golfers (Rob, Eve, Eli, Amy, and Dan) in a fixed order based on given constraints. The problem statement clarifies that:\n\n1. Dan finished above Eve.\n2. Dan finished second.\n3. Amy finished below Eve.\n4. Dan finished above Eve.\n5. There is a constraint enforcing all positions must be different, meaning no two golfers can share the same position.\n\nThese are represented under 'Constraints' in the table:\n- Dan == 2 (meaning Dan finished second)\n- Amy > Eve (meaning Amy finished below Eve)\n- Dan > Eve → Dan < Eve (a clarification in constraints, showing that Dan finished above Eve)\n- Amy < Eli (meaning Amy finished before Eli)\n- An 'AllDifferentConstraint' ensures each golfer has a unique position.\n\nThe domain for each golfer is given as [1, 2, 3, 4, 5], representing their possible finishing positions.\n\nThe question asks which of the provided options is true concerning who finished third:\n- (A) Rob finished third\n- (B) Eve finished third\n- (C) Eli finished third\n- (D) Amy finished third\n- (E) Dan finished third\n\nUltimately, the 'Predicted answer' at the bottom indicates that option (B) \"Eve finished third\" is expected to be correct based on the logic provided."}
{"layout": 244, "type": "text", "text": "Example 4 ", "text_level": 1, "page_idx": 18, "bbox": [74, 523, 114, 531], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 245, "type": "text", "text": "Problem:  If the restaurant is listed in Yelp’s recommendations, then the restaurant does not receive many negative reviews.  All restaurants with  a rating greater than 9 are listed in   ${\\sf Y e1p}^{\\prime}\\,{\\sf s}$   recommendations.  Some restaurants that do not provide take-out service receive many negative  reviews.  All restaurants that are popular among local residents have ratings greater than 9. Subway has a rating greater than 9 or is popular  among local residents. Question:  Based on the above information, is the following statement true, false, or uncertain? Subway provides take-out service and does not  receive many negative reviews. (A) True                (B) False            (C) Uncertain Predicted logic programs: Premises: ∀ x (Listed(x)  $\\rightarrow$   ¬Negative Reviews(x))  ∀ x (Rating(x, y)  ∧ y > 9 → Listed(x))  $\\rightarrow~\\forall\\times$   (Greater Than Nine(x) → Listed(x)) ∃ x (¬TakeOut(x)  ∧ Negative Reviews(x))  ∀ ∧  $\\rightarrow~\\forall\\times$   $\\rightarrow$  x (Popular(x) → (Rating(x, y)  y > 9))  (Popular(x)  Greater Than Nine(x)) Rating(subway, y)  ∧ y > 9  ∨ Popular(subway)    $\\rightarrow$  Greater Than Nine(subway)  ∨ Popular(subway) Conclusion: TakeOut(subway)  ∧ ¬Negative Reviews(subway) Predicted answer:  $\\mathsf{\\Pi}_{-}\\mathsf{\\!\\!\\in\\!\\!\\!A}$  ", "page_idx": 18, "bbox": [75, 535.5753784179688, 521.1829223632812, 656.6701049804688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 246, "type": "text", "text": "Figure 6: Examples of generated symbolic representations and predicted answers. The incorrect segment(s) and their correspondence in the problem are marked in  red , and the correct revisions are marked in  green . ", "page_idx": 18, "bbox": [70, 670.1009521484375, 524.4232788085938, 694.659912109375], "page_size": [595.2760009765625, 841.8900146484375]}
