{"layout": 0, "type": "text", "text": "A General Framework for Information Extraction using Dynamic Span Graphs ", "text_level": 1, "page_idx": 0, "bbox": [145, 63, 453, 97], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 1, "type": "text", "text": "Yi Luan † Dave Wadden † Luheng  $\\mathbf{H}\\mathbf{e}^{\\ddag}$  Amy Shah † Mari Ostendorf † Hannaneh Hajishirzi †∗ ", "page_idx": 0, "bbox": [158, 104, 443, 134.82574462890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 2, "type": "text", "text": "† University of Washington ∗ Allen Institute for Artiﬁcial Intelligence ‡ Google AI Language { luanyi, dwadden, amyshah, ostendor, hannaneh }  $@$  uw.edu luheng@google.com ", "page_idx": 0, "bbox": [158, 133.76040649414062, 443, 204.06741333007812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 3, "type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0, "bbox": [159, 223, 203, 236], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 4, "type": "text", "text": "We introduce a general framework for sev- eral information extraction tasks that share span representations using dynamically con- structed span graphs. The graphs are con- structed by selecting the most conﬁdent entity spans and linking these nodes with conﬁdence- weighted relation types and coreferences. The dynamic span graph allows coreference and re- lation type conﬁdences to propagate through the graph to iteratively reﬁne the span rep- resentations. This is unlike previous multi- task frameworks for information extraction in which the only interaction between tasks is in the shared ﬁrst-layer LSTM. Our framework signiﬁcantly outperforms the state-of-the-art on multiple information extraction tasks across multiple datasets reﬂecting different domains. We further observe that the span enumeration approach is good at detecting nested span enti- ties, with signiﬁcant F1 score improvement on the ACE dataset. ", "page_idx": 0, "bbox": [88, 247.51055908203125, 274, 498.6194152832031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 5, "type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0, "bbox": [71, 510, 155, 523], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 6, "type": "text", "text": "Most Information Extraction (IE) tasks require identifying and categorizing phrase spans, some of which might be nested. For example, entity recognition involves assigning an entity label to a phrase span. Relation Extraction (RE) involves assigning a relation type between pairs of spans. Coreference resolution groups spans referring to the same entity into one cluster. Thus, we might expect that knowledge learned from one task might beneﬁt another. ", "page_idx": 0, "bbox": [72, 532.5769653320312, 291, 667.6654663085938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 7, "type": "text", "text": "Most previous work in IE (e.g., ( Nadeau and Sekine ,  2007 ;  Chan and Roth ,  2011 )) employs a pipeline approach, ﬁrst detecting entities and then using the detected entity spans for relation extrac- tion and coreference resolution. To avoid cascading ", "page_idx": 0, "bbox": [72, 668.3579711914062, 291, 735.700439453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 8, "type": "image", "page_idx": 0, "img_path": "layout_images/N19-1308_0.jpg", "img_caption": "Figure 1: A text passage illustrating interactions be- tween entities, relations and coreference links. Some relation and coreference links are omitted. ", "bbox": [306, 238, 527, 373], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "PER-SOC\n\nPHYS PHYS\nVf |\ncar broke down as he arrived at Starbucks to meet Mike.\nPER VEH PER Loc PER\ncorer|\nCOREF\n\n|\n“This thing’s useless!” Tom exclaimed as it gave off smoke.\nVEH PER VEH\n", "vlm_text": "The image is a diagram illustrating interactions between entities, relations, and coreference links within a text passage. It contains the following components:\n\n1. **Entities and Their Labels:**\n   - \"Tom's car\" is marked as a person (PER) and vehicle (VEH).\n   - \"he\" is marked as a person (PER) and serves as a coreference to \"Tom\".\n   - \"Starbucks\" is marked as a location (LOC).\n   - \"Mike\" is marked as a person (PER).\n   - \"This thing\" is marked as a vehicle (VEH) and serves as a coreference to \"Tom's car\".\n   - \"Tom\" is marked as a person (PER).\n   - \"it\" is marked as a vehicle (VEH) and serves as a coreference to \"Tom's car\".\n\n2. **Relations:**\n   - \"Tom's car\" has a physical (PHYS) relationship with both \"he\" and \"Starbucks\".\n   - \"Tom's car\" has a personal-social (PER-SOC) relationship with \"Tom\".\n   - \"he\" has a physical (PHYS) relationship with \"Starbucks\".\n   - \"Tom\" and \"Mike\" have a personal-social (PER-SOC) relationship.\n  \n3. **Coreference Links:**\n   - \"he\" is linked to \"Tom\".\n   - \"This thing\" and \"it\" are both linked to \"Tom's car\".\n\nThis diagram represents a detailed analysis of the syntactic and semantic relationships within the passage, indicating how different entities connect and refer to one another through coreference."}
{"layout": 9, "type": "text", "text": "errors introduced by pipeline-style systems, recent work has focused on coupling different IE tasks as in joint modeling of entities and relations ( Miwa and Bansal ,  2016 ;  Zhang et al. ,  2017 ), entities and coreferences ( Hajishirzi et al. ,  2013 ;  Durrett and Klein ,  2014 ), joint inference ( Singh et al. ,  2013 ) or multi-task (entity/relation/coreference) learn- ing ( Luan et al. ,  2018a ). These models mostly rely on the ﬁrst layer LSTM to share span repre- sentations between different tasks and are usually designed for speciﬁc domains. ", "page_idx": 0, "bbox": [306, 385.7909851074219, 527, 534.428466796875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 10, "type": "text", "text": "In this paper, we introduce a general framework Dynamic Graph IE (D Y GIE) for coupling multiple information extraction tasks through shared span representations which are reﬁned leveraging con- textualized information from relations and coref- erences. Our framework is effective in several do- mains, demonstrating a beneﬁt from incorporating broader context learned from relation and corefer- ence annotations. ", "page_idx": 0, "bbox": [306, 535.4660034179688, 527, 657.0044555664062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 11, "type": "text", "text": "Figure  1  shows an example illustrating the po- tential beneﬁts of entity, relation, and coreference contexts. It is impossible to predict the entity la- bels for  This thing  and  it  from within-sentence con- text alone. However, the antecedent  car  strongly suggests that these two entities have a VEH type. Similarly, the fact that  Tom  is located at  Starbucks and  Mike  has a relation to  Tom  provides support for the fact that  Mike  is located at  Starbucks . ", "page_idx": 0, "bbox": [306, 658.041015625, 527, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 12, "type": "text", "text": "", "page_idx": 1, "bbox": [71, 63.68701934814453, 250.6992950439453, 76.83248901367188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 13, "type": "text", "text": "D Y GIE uses multi-task learning to identify en- tities, relations, and coreferences through shared span representations using dynamically constructed span graphs. The nodes in the graph are dynam- ically selected from a beam of highly-conﬁdent mentions, and the edges are weighted according to the conﬁdence scores of relation types or coref- erences. Unlike the multi-task method that only shares span representations from the local con- text ( Luan et al. ,  2018a ), our framework leverages rich contextual span representations by propagat- ing information through coreference and relation links. Unlike previous BIO-based entity recogni- tion systems ( Collobert and Weston ,  2008 ;  Lample et al. ,  2016 ;  Ma and Hovy ,  2016 ) that assign a text span to at most one entity, our framework enumer- ates and represents all possible spans to recognize arbitrarily overlapping entities. ", "page_idx": 1, "bbox": [71, 78.09803009033203, 292, 321.5804748535156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 14, "type": "text", "text": "We evaluate D Y GIE on several datasets span- ning many domains (including news, scientiﬁc arti- cles, and wet lab experimental protocols), achiev- ing state-of-the-art performance across all tasks and domains and demonstrating the value of coupling related tasks to learn richer span representations. For example, D Y GIE achieves relative improve- ments of  $5.7\\%$   and  $9.9\\%$   over state of the art on the ACE05 entity and relation extraction tasks, and an  $11.3\\%$   relative improvement on the ACE05 over- lapping entity extraction task. ", "page_idx": 1, "bbox": [71, 322.84600830078125, 292, 471.4834899902344], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 15, "type": "text", "text": "The contributions of this paper are threefold. 1) We introduce the dynamic span graph frame- work as a method to propagate global contextual information, making the code publicly available. 2) We demonstrate that our framework signiﬁcantly outperforms the state-of-the-art on joint entity and relation detection tasks across four datasets: ACE 2004, ACE 2005, SciERC and the Wet Lab Proto- col Corpus. 3) We further show that our approach excels at detecting entities with overlapping spans, achieving an improvement of up to 8 F1 points on three benchmarks annotated with overlapped spans: ACE 2004, ACE 2005 and GENIA. ", "page_idx": 1, "bbox": [71, 472.7489929199219, 292, 648.4844360351562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 16, "type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1, "bbox": [71, 662, 161, 674], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 17, "type": "text", "text": "Previous studies have explored joint model- ing ( Miwa and Bansal ,  2016 ;  Zhang et al. ,  2017 ; Singh et al. ,  2013 ;  Yang and Mitchell ,  2016 )) and multi-task learning ( Peng and Dredze ,  2015 ;  Peng et al. ,  2017 ;  Luan et al. ,  2018a ,  2017a ) as methods to share representational strength across related in- formation extraction tasks. The most similar to ours is the work in  Luan et al.  ( 2018a ) that takes a multi-task learning approach to entity, relation, and coreference extraction. In this model, the dif- ferent tasks share span representations that only incorporate broader context indirectly via the gra- dients passed back to the LSTM layer. In contrast, D Y GIE uses dynamic graph propagation to explic- itly incorporate rich contextual information into the span representations. ", "page_idx": 1, "bbox": [71, 685.1400146484375, 292, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 18, "type": "text", "text": "", "page_idx": 1, "bbox": [306, 63.68701934814453, 527, 198.77548217773438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 19, "type": "text", "text": "Entity recognition has commonly been cast as a sequence labeling problem, and has beneﬁted substantially from the use of neural architectures ( Collobert et al. ,  2011 ;  Lample et al. ,  2016 ;  Ma and Hovy ,  2016 ;  Luan et al. ,  2017b ,  2018b ). However, most systems based on sequence labeling suffer from an inability to extract entities with overlap- ping spans. Recently  Katiyar and Cardie  ( 2018 ) and  Wang and Lu  ( 2018 ) have presented methods enabling neural models to extract overlapping enti- ties, applying hypergraph-based representations on top of sequence labeling systems. Our framework offers an alternative approach, forgoing sequence labeling entirely and simply considering all possi- ble spans as candidate entities. ", "page_idx": 1, "bbox": [306, 203.0919952392578, 527, 405.9264831542969], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 20, "type": "text", "text": "Neural graph-based models have achieved sig- niﬁcant improvements over traditional feature- based approaches on several graph modeling tasks. Knowledge graph completion ( Yang et al. ,  2015 ; Bordes et al. ,  2013 ) is one prominent example. For relation extraction tasks, graphs have been used primarily as a means to incorporate pipelined features such as syntactic or discourse relations ( Peng et al. ,  2017 ;  Song et al. ,  2018 ;  Zhang et al. , 2018 ).  Christopoulou et al.  ( 2018 ) models all pos- sible paths between entities as a graph, and reﬁnes pair-wise embeddings by performing a walk on the graph structure. All these previous works assume that the nodes of the graph (i.e. the entity candi- dates to be considered during relation extraction) are predeﬁned and ﬁxed throughout the learning process. On the other hand, our framework does not require a ﬁxed set of entity boundaries as an input for graph construction. Motivated by state-of- the-art span-based approaches to coreference res- olution ( Lee et al. ,  2017 ,  2018 ) and semantic role labeling ( He et al. ,  2018 ), the model uses a beam pruning strategy to dynamically select high-quality spans, and constructs a graph using the selected spans as nodes. ", "page_idx": 1, "bbox": [306, 410.2430114746094, 527, 748.5694580078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 21, "type": "text", "text": "Many state-of-the-art RE models rely upon domain-speciﬁc external syntactic tools to con- struct dependency paths between the entities in a sentence ( Li and Ji ,  2014 ;  Xu et al. ,  2015 ;  Miwa and Bansal ,  2016 ;  Zhang et al. ,  2017 ). These sys- tems suffer from cascading errors from these tools and are hard to generalize to different domains. To make the model more general, we combine the multitask learning framework with ELMo em- beddings ( Peters et al. ,  2018 ) without relying on external syntactic tools and risking the cascading errors that accompany them, and improve the inter- action between tasks through dynamic graph prop- agation. While the performance of DyGIE beneﬁts from ELMo, it advances over some systems ( Luan et al. ,  2018a ;  Sanh et al. ,  2019 ) that also incorporate ELMo. The analyses presented here give insights into the beneﬁts of joint modeling. ", "page_idx": 1, "bbox": [318, 752.885986328125, 527, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 22, "type": "text", "text": "", "page_idx": 2, "bbox": [71, 63.68701934814453, 292, 293.6194763183594], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 23, "type": "text", "text": "3 Model ", "text_level": 1, "page_idx": 2, "bbox": [71, 303, 124, 316], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 24, "type": "text", "text": "Problem Deﬁnition The input is a document rep- resented as a sequence of words    $D$  , from which we derive    $S\\,=\\,\\{s_{1},.\\,.\\,.\\,,s_{T}\\}$  , the set of all possible within-sentence word sequence spans (up to length  $L$  ) in the document. The output contains three structures: the entity types    $E$   for all spans    $S$  , the relations    $R$   for all span pairs    $S\\times S$    thin the same sentence, and the coreference links  C  for all spans in    $S$   across sentences. We consider two primary tasks. First,  Entity Recognition  is the task of pre- dicting the best entity type labels    $e_{i}$   for each span  $s_{i}$  . Second,  Relation Extraction  involves predicting the best relation type  $r_{i j}$   for all span pairs    $(s_{i},s_{j})$  . We provide additional supervision by also training our model to perform a third, auxiliary task:  Coref- erence resolution . For this task we predict the best antecedent    $c_{i}$   for each span    $s_{i}$  . ", "page_idx": 2, "bbox": [71, 324.9772644042969, 292, 556.939453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 25, "type": "text", "text": "Our Model We develop a general information extraction framework (D Y GIE) to identify and classify entities, relations, and coreference in a multi-task setup. D Y GIE ﬁrst enumerates all text spans in each sentence, and computes a locally- contextualized vector space representation of each span. The model then employs a  dynamic span graph  to incorporate global information into its span representations, as follows. At each training step, the model identiﬁes the text spans that are most likely to represent entities, and treats these spans as nodes in a graph structure. It constructs conﬁdence-weighted arcs for each node according to its predicted coreference and relation links with the other nodes in the graph. Then, the span repre- sentations are reﬁned using broader context from gated updates propagated from neighboring rela- tion types and co-referred entities. These reﬁned span representations are used in a multi-task frame- work to predict entity types, relation types, and coreference links. ", "page_idx": 2, "bbox": [71, 562.8042602539062, 292, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 26, "type": "text", "text": "", "page_idx": 2, "bbox": [306, 63.68701934814453, 527, 144.57846069335938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 27, "type": "text", "text": "3.1 Model Architecture ", "text_level": 1, "page_idx": 2, "bbox": [306, 154, 424, 167], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 28, "type": "text", "text": "In this section, we give an overview of the main components and layers of the D Y GIE framework, as illustrated in Figure  2 . Details of the graph con- struction and reﬁnement process will be presented in the next section. ", "page_idx": 2, "bbox": [306, 171.9669952392578, 527, 239.30850219726562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 29, "type": "text", "text": "Token Representation Layer We apply a bidi- rectional LSTM over the input tokens. The input for each token is a concatenation of the character reprensetation, GLoVe ( Pennington et al. ,  2014 ) word embeddings, and ELMo embeddings ( Peters et al. ,  2018 ). The output token representations are obtained by stacking the forward and backward LSTM hidden states. ", "page_idx": 2, "bbox": [306, 247.11033630371094, 527, 355.4924621582031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 30, "type": "text", "text": "Span Representation Layer For each span    $s_{i}$  , its initial vector representation    $\\mathbf{g}_{i}^{0}$    is obtained by concatenating BiLSTM outputs at the left and right end points of    $s_{i}$  , an attention-based soft “head- word,” and an embedded span width feature, fol- lowing  Lee et al.  ( 2017 ). ", "page_idx": 2, "bbox": [306, 363.29425048828125, 527, 444.5784606933594], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 31, "type": "text", "text": "Coreference Propagation Layer The propaga- tion process starts from the span representations  $\\mathbf{g}_{i}^{0}$    . At each iteration    $t$  , we ﬁrst compute an  update vector    $\\mathbf{u}_{C}^{t}$    for each span    $s_{i}$  . Then we use    $\\mathbf{u}_{C}^{t}$    to update the current representation    $\\mathbf{g}_{i}^{t}$  , producing the next span representation    $\\mathbf{g}_{i}^{t+1}$  . By repeating this process    $N$   times, the ﬁnal span representations    $\\mathbf{g}_{i}^{N}$  share contextual information across spans that are likely to be antecedents in the coreference graph, similar to the process in ( Lee et al. ,  2018 ). ", "page_idx": 2, "bbox": [306, 452.3792419433594, 527, 587.8604736328125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 32, "type": "text", "text": "Relation Propagation Layer The outputs    $\\mathbf{g}_{i}^{N}$  from the coreference propagation layer are passed as inputs to the relation propagation layer. Similar to the coreference propagation process, at each it- eration    $t$  , we ﬁrst compute the update vectors  $\\mathbf{u}_{R}^{t}$  for each span    $s_{i}$  , then use it to compute  $\\mathbf{g}_{i}^{t+1}$  . In- formation can be integrated from multiple relation paths by repeating this process    $M$   times. ", "page_idx": 2, "bbox": [306, 595, 527, 704.04443359375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 33, "type": "text", "text": "Final Prediction Layer We use the outputs of the relation graph layer  $\\mathbf{g}_{i}^{N+M}$  to predict the entity labels    $E$   and relation labels    $R$  . For entities, we pass  $\\mathbf{g}_{i}^{N+M}$  to a feed-forward network (FFNN) to ", "page_idx": 2, "bbox": [306, 711.8452758789062, 527, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 34, "type": "image", "page_idx": 3, "img_path": "layout_images/N19-1308_1.jpg", "img_caption": "Figure 2: Overview of our D Y GIE model. Dotted arcs indicate conﬁdence weighted graph edges. Solid lines indicate the ﬁnal predictions. ", "bbox": [70, 61, 527, 328], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Final prediction\nof entities and\n\nrelations (veal\n\nFinal prediction\nof coreference\n\nerative inference\n\nand propagation\nfor relations\n\nIterative inference\nand propagation\nfor coreference\n\nSpan\n\nenumeration Tom car arrive at Starbucks Mike _ this thing Tom it\n\nSentence-level BiLSTM\n\nToken\n\nrepresentations Sentence-level BILSTM\n\nTom's car broke down as he arrived at “This thing’s useless!” Tom exclaimed\nStarbucks to meet Mike. as it gave off smoke.\n\nInput document\n\n", "vlm_text": "The image is a diagram illustrating the DYGIE (Dynamic Graph-based Information Extraction) model, which is used for extracting entities, relations, and coreferences from text. The process begins with an input document, split into sentences, and each sentence is processed through a Sentence-level BiLSTM to obtain token representations. Span enumeration identifies possible spans of interest within these token representations.\n\nThe model progressively performs iterative inference and propagation for coreference and relations. During coreference propagation, spans such as \"car,\" \"this thing,\" and \"it\" are linked, indicating potential coreferences (illustrated by green dotted lines). Similarly, during relation propagation, entities such as \"Tom\" and \"Mike\" are analyzed for possible relations, like \"PER-SOC\" (Person-Social), \"PHYS\" (Physical), etc., as indicated by purple dotted arcs.\n\nThe iterative process occurs M times for relations and N times for coreferences. The final prediction outputs solid connections, outlining the identified entities, relations, and coreferences structured as a graph showing confidence-weighted relationships. The model aims to build coherent and connected interpretations of the input text, capturing detailed semantic associations."}
{"layout": 35, "type": "text", "text": "produce per-class scores    $\\mathbf{P}_{E}(i)$   for span    $s_{i}$  . For relations, we pass the concatenation of    $\\mathbf{g}_{i}^{N+M}$  and  $\\mathbf{g}_{j}^{N+M}$  to a FFNN to produce per-class relation scores  $\\mathbf{P}_{R}(i,j)$   between spans    $s_{i}$   and    $s_{j}$  . Entity and relation scores are normalized across the label space, similar to  Luan et al.  ( 2018a ). For coref- erence, the scores between span pairs   $(s_{i},s_{j})$   are computed from the coreference graph layer outputs  $(\\mathbf{g}_{i}^{N},\\mathbf{g}_{j}^{N})$  ), and then normalized across all possible antecedents, similar to  Lee et al.  ( 2018 ). ", "page_idx": 3, "bbox": [70, 338, 292, 473.5994873046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 36, "type": "text", "text": "3.2 Dynamic Graph Construction and Span Reﬁnement ", "text_level": 1, "page_idx": 3, "bbox": [71, 484, 285, 510], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 37, "type": "text", "text": "The dynamic span graph facilitates propagating broader contexts through soft coreference and rela- tion links to reﬁne span representations. The nodes in the graph are spans  $s_{i}$   with vector representa- tions    $\\mathbf{g}_{i}^{t}\\in\\mathbb{R}^{d}$    ∈  for the    $t$  -th iteration. The edges are weighted by the coreference and relation scores, which are trained according to the neural archi- tecture explained in Section  3.1 . In this section, we explain how coreference and relation links can update span representations. ", "page_idx": 3, "bbox": [70, 514.6730346679688, 292, 649.761474609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 38, "type": "text", "text": "Coreference Propagation Similar to ( Luan et al. ,  2018a ), we deﬁne a beam    $B_{C}$   consisting of    $b_{c}$   spans that are most likely to be in a corefer- ence chain. We consider  $\\mathbf{P}_{C}^{t}$    to be a matrix of real values that indicate coreference conﬁdence scores between these spans at the    $t$  -th iteration.    $\\mathbf{P}_{C}^{t}$    is of size  $b_{c}\\times K$  , where    $K$   is the maximum num- ber of antecedents considered. For the coreference graph, an edge in the graph is single directional, connecting the current span    $s_{i}$   with all its poten- tial antecedents    $s_{j}$   in the coreference beam, where  $j<i$  . The edge between  $s_{i}$   and  $s_{j}$   is weighted by coreference conﬁdence score at the current itera- tion    $P_{C}^{t}(i,j)$  . The span update vector    $\\mathbf{u}_{C}^{t}(i)\\in\\mathbb{R}^{d}$   ∈ is computed by aggregating the neighboring span representations    $\\mathbf{g}_{j}^{t}$  , weighted by their coreference scores    $P_{C}^{t}(i,j)$  : ", "page_idx": 3, "bbox": [70, 657.6483154296875, 292, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 39, "type": "text", "text": "", "page_idx": 3, "bbox": [305, 338.5119934082031, 527, 460.05047607421875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 40, "type": "equation", "text": "\n$$\n\\mathbf{u}_{C}^{t}(i)=\\sum_{j\\in B_{\\mathbb{C}}(i)}P_{C}^{t}(i,j)\\mathbf{g}_{j}^{t}\n$$\n ", "text_format": "latex", "page_idx": 3, "bbox": [354, 467, 478, 500], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 41, "type": "text", "text": "where    $B_{C}(i)$   is the set of    $K$   spans that are an- tecedents of  $s_{i}$  , ", "page_idx": 3, "bbox": [305, 508, 527, 535.0304565429688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 42, "type": "equation", "text": "\n$$\nP_{C}^{t}(i,j)=\\frac{\\exp(V_{C}^{t}(i,j))}{\\sum_{j^{\\prime}\\in B_{C}(i)}\\exp(V_{C}^{t}(i,j))}\n$$\n ", "text_format": "latex", "page_idx": 3, "bbox": [334, 541, 498, 574], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 43, "type": "text", "text": " $V_{C}^{t}(i,j)$   is a scalar score computed by concate- nating the span representations    $[\\mathbf{g}_{i}^{t},\\mathbf{g}_{j}^{t},\\mathbf{g}_{i}^{t}\\odot\\mathbf{g}_{j}^{t}]$    , where  $\\odot$  is element-wise multiplication. The con- catenated vector is then fed as input to a FFNN, similar to ( Lee et al. ,  2018 ). ", "page_idx": 3, "bbox": [305, 582, 527, 650.4574584960938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 44, "type": "text", "text": "Relation Propagation For each sentence, we deﬁne a beam    $B_{R}$   consisting of    $b_{r}$   entity spans that are mostly likely to be involved in a rela- tion. Unlike the coreference graph, the weights of relation edges capture different relation types. Therefore, for the    $t$  -th iteration, we use a tensor  $\\mathbf{V}_{R}^{t}\\in\\mathbb{R}^{b_{R}\\times b_{R}\\times L_{R}}$    ∈  to capture scores of each of the  $L_{R}$   relation types. In other words, each edge in the relation graph connects two entity spans    $s_{i}$   and  $s_{j}$  in the relation beam  $B_{R}$  .    $\\mathbf{V}_{R}^{t}(i,j)$   is a    $L_{R}$  -length vector of relation scores, computed with a FFNN with    $[\\mathbf{g}_{i}^{t},\\mathbf{g}_{j}^{t}]$   as the input. The relation update vec- tor    $\\mathbf{u}_{R}^{t}(i)\\in\\mathbb{R}^{d}$   ∈  is computed by aggregating neigh- boring span representations on the relation graph: ", "page_idx": 3, "bbox": [305, 657.6483154296875, 527, 767.7194213867188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 45, "type": "text", "text": "", "page_idx": 4, "bbox": [71, 63.68701934814453, 291, 146.12448120117188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 46, "type": "equation", "text": "\n$$\n\\mathbf{u}_{R}^{t}(i)=\\sum_{j\\in B_{\\mathrm{R}}}f(\\mathbf{V}_{R}^{t}(i,j))\\mathbf{A}_{R}\\odot\\mathbf{g}_{j}^{t},\n$$\n ", "text_format": "latex", "page_idx": 4, "bbox": [99, 152, 261, 184], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 47, "type": "text", "text": "where    $\\mathbf{A}_{R}\\in\\mathbb{R}^{L_{R}\\times d}$    is a trainable linear projection matrix,  $f$   is a non-linear function to select the most important relations. Because only a small number of entities in the relation beam are actually linked to the target span, propagation among all possi- ble span pairs would introduce too much noise to the new representation. Therefore, we choose    $f$  to be the ReLU function to remove the effect of unlikely relations by setting the all negative rela- tion scores to 0. Unlike coreference connections, two spans linked via a relation are not expected to have similar representations, so the matrix    ${\\bf A}_{R}$  helps to transform the embedding  $\\mathbf{g}_{j}^{t}$    according to each relation type. ", "page_idx": 4, "bbox": [71, 189.3610382080078, 291, 382.6044616699219], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 48, "type": "text", "text": "Updating Span Representations with Gating To compute the span representations for the next iteration  $t\\in\\{1,.\\,.\\,.\\,,N+M\\}$  , we deﬁne a gating vector  $\\mathbf{f}_{x}^{t}(i)\\,\\in\\,\\mathbb{R}^{d}$   ∈ , where    $x\\,\\in\\,\\{C,R\\}$  , to deter- mine whether to keep the previous span represen- tation  $\\mathbf{g}_{i}^{t}$    or to integrate new information from the coreference or relation update vectors  $\\mathbf{u}_{x}^{t}(i)$  . For- mally, ", "page_idx": 4, "bbox": [71, 389.750244140625, 291, 498.13348388671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 49, "type": "equation", "text": "\n$$\n\\begin{array}{c c l}{\\mathbf{f}_{x}^{t}(i)}&{=}&{g(\\mathbf{W}_{x}^{\\mathrm{f}}[\\mathbf{g}_{i}^{t},\\mathbf{u}_{x}^{t}(i)])}\\\\ {\\mathbf{g}_{i}^{t+1}}&{=}&{\\mathbf{f}_{x}^{t}(i)\\odot\\mathbf{g}_{i}^{t}+(1-\\mathbf{f}_{x}^{t}(i))\\odot\\mathbf{u}_{x}^{t}(i),}\\end{array}\n$$\n ", "text_format": "latex", "page_idx": 4, "bbox": [79, 505, 280, 540], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 50, "type": "text", "text": "where    $\\mathbf{W}_{x}^{\\mathrm{f}}\\in\\mathbb{R}^{d\\times2d}$    ∈  are trainable parameters, and  $g$   is an element-wise sigmoid function. ", "page_idx": 4, "bbox": [71, 543.7979736328125, 291, 574.451416015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 51, "type": "text", "text": "3.3 Training ", "text_level": 1, "page_idx": 4, "bbox": [71, 584, 138, 596], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 52, "type": "text", "text": "The loss function is deﬁned as a weighted sum of the log-likelihood of all three tasks: ", "page_idx": 4, "bbox": [71, 600.9390258789062, 291, 627.6334228515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 53, "type": "equation", "text": "\n$$\n\\begin{array}{r l}{\\displaystyle\\sum_{(D,R^{*},E^{*},C^{*})\\in\\mathcal{D}}\\Big\\{\\lambda_{\\mathrm{E}}\\log P(E^{*}\\mid C,R,D)\\;}&{(5}\\\\ {+\\;\\lambda_{\\mathsf{R}}\\log P(R^{*}\\mid C,D)+\\lambda_{\\mathsf{C}}\\log P(C^{*}\\mid D)\\Big\\}}\\end{array}\n$$\n ", "text_format": "latex", "page_idx": 4, "bbox": [78, 633, 285, 692], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 54, "type": "text", "text": "where    $E^{*},\\,R^{*}$  and    $C^{*}$  are gold structures of the entity types, relations and coreference, respec- ely.    $\\mathcal{D}$   is the collection of all training documents  $D$  . The task weights    $\\lambda_{\\mathrm{E}},\\,\\lambda_{\\mathrm{R}}$  , and    $\\lambda_{\\mathrm{C}}$   are hyper- parameters to control the importance of each task. ", "page_idx": 4, "bbox": [71, 698.6890258789062, 291, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 55, "type": "table", "page_idx": 4, "img_path": "layout_images/N19-1308_2.jpg", "table_footnote": "Table 1: Datasets for joint entity and relation extraction and their statistics.  Ent : Number of entity categories. Rel : Number of relation categories. ", "bbox": [307, 61, 527, 169], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Domain Docs Ent Rel Coref\n\nACE04 News 348 7 7 v\nACE0S News S11 7 6 x\nSciERC Al 500 6 7 v\nWLP Biolab 622 18 13 x\n\n", "vlm_text": "The table presents a comparison of four datasets: ACE04, ACE05, SciERC, and WLP. Below is a brief explanation of each column in the table:\n\n1. **Dataset Names**: The first column lists the names of the datasets: ACE04, ACE05, SciERC, and WLP.\n\n2. **Domain**: This column indicates the domain to which each dataset belongs:\n   - ACE04 and ACE05 are related to news.\n   - SciERC is related to AI.\n   - WLP is related to the Bio lab.\n\n3. **Docs (Documents)**: This column specifies the number of documents in each dataset:\n   - ACE04 has 348 documents.\n   - ACE05 has 511 documents.\n   - SciERC has 500 documents.\n   - WLP has 622 documents.\n\n4. **Ent (Entities)**: This column represents the number of entity types in each dataset:\n   - Both ACE04 and ACE05 have 7 entity types.\n   - SciERC has 6 entity types.\n   - WLP has 18 entity types.\n\n5. **Rel (Relations)**: This column shows the number of relation types in each dataset:\n   - Both ACE04 and SciERC have 7 relation types.\n   - ACE05 has 6 relation types.\n   - WLP has 13 relation types.\n\n6. **Coref (Coreference Resolution)**: The final column indicates whether coreference resolution is included in each dataset:\n   - ACE04 and SciERC have coreference resolution, as marked by a checkmark (✓).\n   - ACE05 and WLP do not have coreference resolution, as marked by a cross (✗)."}
{"layout": 56, "type": "text", "text": "We use a 1 layer BiLSTM with 200-dimensional hidden layers. All the feed-forward functions have 2 hidden layers of 150 dimensions each. We use 0.4 variational dropout ( Gal and Ghahramani ,  2016 ) for the LSTMs, 0.4 dropout for the FFNNs, and 0.5 dropout for the input embeddings. The hidden layer dimensions and dropout rates are chosen based on the development set performance in multiple do- mains. The task weights, learning rate, maximum span length, number of propagation iterations and beam size are tuned speciﬁcally for each dataset using development data. ", "page_idx": 4, "bbox": [306, 182.92604064941406, 527, 345.11248779296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 57, "type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 4, "bbox": [307, 357, 390, 369], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 58, "type": "text", "text": "D Y GIE is a general IE framework that can be ap- plied to multiple tasks. We evaluate the perfor- mance of D Y GIE against models from two lines of work: combined entity and relation extraction, and overlapping entity extraction. ", "page_idx": 4, "bbox": [306, 378.0820007324219, 527, 445.4244689941406], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 59, "type": "text", "text": "4.1 Entity and relation extraction ", "text_level": 1, "page_idx": 4, "bbox": [306, 456, 471, 468], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 60, "type": "text", "text": "For the entity and relation extraction task, we test the performance of D Y GIE on four different datasets: ACE2004, ACE2005, SciERC and the Wet Lab Protocol Corpus. We include the rela- tion graph propagation layer in our models for all datasets. We include the coreference graph propa- gation layer on the data sets that have coreference annotations available. ", "page_idx": 4, "bbox": [306, 473.458984375, 527, 581.448486328125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 61, "type": "text", "text": "Data All four data sets are annotated with entity and relation labels. Only a small fraction of entities  $(<3\\%$   of total) in these data sets have a text span that overlaps the span of another entity. Statistics on all four data sets are displayed in Table  1 . ", "page_idx": 4, "bbox": [306, 589.6613159179688, 527, 657.3954467773438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 62, "type": "text", "text": "The  ACE2004  and  ACE2005  corpora provide entity and relation labels for a collection of docu- ments from a variety of domains, such as newswire and online forums. We use the same entity and relation types, data splits, and preprocessing as Miwa and Bansal  ( 2016 ) and  Li and Ji  ( 2014 ). Fol- lowing the convention established in this line of work, an entity prediction is considered correct ", "page_idx": 4, "bbox": [306, 657.6483154296875, 527, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 63, "type": "table", "page_idx": 5, "img_path": "layout_images/N19-1308_3.jpg", "table_footnote": "Table 2: F1 scores on the joint entity and relation ex- traction task on each test set, compared against the pre- vious best systems. \\* indicates relation extraction sys- tem that takes gold entity boundary as input. ", "bbox": [71, 61, 292, 267], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Dataset System Entity —_ Relation\nBekoulis et al. (2018) 81.6 47.5\nACE04 = Miwa and Bansal (2016) 81.8 48.4\nDyYGIE 87.4 59.7\nMiwa and Bansal (2016) 83.4 55.6\nZhang et al. (2017) 83.6 575,\nACES Sanh et al. (2019) 87.5 62.7\nDyYGIE 88.4 63.2\n. Luan et al. (2018a) 64.2 39.3\nScERC  yGIE 65.2 41.6\nKulkarni et al. (2018) 78.0 *54.9\nWERE DyYGIE 79.5 64.1\n", "vlm_text": "The table presents performance metrics (likely precision, recall, or F1 scores, although not explicitly stated in the table) of various systems on different datasets. The datasets mentioned are ACE04, ACE05, SciERC, and WLPC. These systems are evaluated based on two categories: \"Entity\" and \"Relation\" metrics.\n\nHere are the key points from the table:\n\n1. **ACE04 Dataset**:\n   - Bekoulis et al. (2018): Entity score of 81.6, Relation score of 47.5.\n   - Miwa and Bansal (2016): Entity score of 81.8, Relation score of 48.4.\n   - DyGIE: Entity score of 87.4, Relation score of 59.7 (indicating the best performance on this dataset for both entity and relation metrics).\n\n2. **ACE05 Dataset**:\n   - Miwa and Bansal (2016): Entity score of 83.4, Relation score of 55.6.\n   - Zhang et al. (2017): Entity score of 83.6, Relation score of 57.5.\n   - Sanh et al. (2019): Entity score of 87.5, Relation score of 62.7.\n   - DyGIE: Entity score of 88.4, Relation score of 63.2 (indicating the best performance on this dataset).\n\n3. **SciERC Dataset**:\n   - Luan et al. (2018a): Entity score of 64.2, Relation score of 39.3.\n   - DyGIE: Entity score of 65.2, Relation score of 41.6 (indicating the best performance on this dataset).\n\n4. **WLPC Dataset**:\n   - Kulkarni et al. (2018): Entity score of 78.0, Relation score of 54.9 (with an asterisk indicating a possible note or exception not visible here).\n   - DyGIE: Entity score of 79.5, Relation score of 64.1 (indicating the best performance on this dataset).\n\nOverall, the DyGIE system achieves the highest performance scores in both the entity and relation categories across all the datasets presented in this table."}
{"layout": 64, "type": "text", "text": "if its type label and head region match those of a gold entity. We will refer to this version of the ACE2004 and ACE2005 data as ACE04 and ACE05. Since the domain and mention span an- notations in the ACE datasets are very similar to those of OntoNotes ( Pradhan et al. ,  2012 ), and OntoNotes contains signiﬁcantly more documents with coreference annotations, we use OntoNotes to train the parameters for the auxiliary corefer- ence task. The OntoNotes corpus contains 3493 documents, averaging roughly 450 words in length. ", "page_idx": 5, "bbox": [71, 281.2349853515625, 292, 429.8724670410156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 65, "type": "text", "text": "The  SciERC  corpus ( Luan et al. ,  2018a ) pro- vides entity, coreference and relation annotations for a collection of documents from 500 AI paper abstracts. The dataset deﬁnes scientiﬁc term types and relation types specially designed for AI domain knowledge graph construction. An entity predic- tion is considered correct if its label and span match with a gold entity. ", "page_idx": 5, "bbox": [71, 430.5452575683594, 292, 538.9274291992188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 66, "type": "text", "text": "The  Wet Lab Protocol Corpus (WLPC)  pro- vides entity, relation, and event annotations for 622 wet lab protocols ( Kulkarni et al. ,  2018 ). A wet lab protocol is a series of instructions specifying how to perform a biological experiment. Following the procedure in  Kulkarni et al.  ( 2018 ), we perform entity recognition on the union of entity tags and event trigger tags, and relation extraction on the union of entity-entity relations and entity-trigger event roles. Coreference annotations are not avail- able for this dataset. ", "page_idx": 5, "bbox": [71, 539.6002807617188, 292, 688.6304321289062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 67, "type": "text", "text": "Baselines We compare D Y GIE with current state of the art methods in different datasets.  Miwa and Bansal  ( 2016 ) provide the current state of the art on ACE04. They construct a Tree LSTM using dependency parse information, and use the repre- sentations learned by the tree structure as features for relation classiﬁcation.  Bekoulis et al.  ( 2018 ) use adversarial training as regularization for a neu- ral model.  Zhang et al.  ( 2017 ) cast joint entity and relation extraction as a table ﬁlling problem and build a globally optimized neural model incorpo- rating syntactic representations from a dependency parser. Similar to D Y GIE,  Sanh et al.  ( 2019 ) and Luan et al.  ( 2018a ) use a multi-task learning frame- work for extracting entity, relation and coreference labels.  Sanh et al.  ( 2019 ) improved the state of the art on ACE05 using multi-task, hierarchical supervised training with a set of low level tasks at the bottom layers of the model and more com- plex tasks at the top layers of the model.  Luan et al.  ( 2018a ) previously achieved the state of the art on SciERC and use a span-based neural model like our D Y GIE.  Kulkarni et al.  ( 2018 ) provide a baseline for the WLPC data set. They employ an LSTM-CRF for entity recognition, following Lample et al.  ( 2016 ). For relation extraction, they assume the presence of gold entities and train a maximum-entropy classiﬁer using features from the labeled entities. ", "page_idx": 5, "bbox": [71, 698.2963256835938, 292, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 68, "type": "text", "text": "", "page_idx": 5, "bbox": [307, 63.68701934814453, 527, 388.4644775390625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 69, "type": "text", "text": "Results Table  2  shows test set F1 on the joint entity and relation extraction task. We observe that D Y GIE achieves substantial improvements on both entity recognition and relation extraction across the four data sets and three domains, all in the realistic setting where no “gold” entity labels are supplied at test time. D Y GIE achieves   $7.1\\%$   and   $7.0\\%$   rela- tive improvements over the state of the art on NER for ACE04 and ACE05, respectively. For the rela- tion extraction task, D Y GIE attains   $25.8\\%$   relative improvement over SOTA on ACE04 and   $13.7\\%$   rel- ative improvement on ACE05. For ACE05, the best entity extraction performance is obtained by switch- ing the order between  CorefProp  and  RelProp ( RelProp  ﬁrst then  CorefProp ). ", "page_idx": 5, "bbox": [307, 398.6122741699219, 527, 601.8394165039062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 70, "type": "text", "text": "On SciERC, D Y GIE advances the state of the art by   $5.9\\%$   and   $1.9\\%$   for relation extraction and NER, respectively. The improvement of D Y GIE over the previous SciERC model underscores the ability of coreference and relation propagation to construct rich contextualized representations. ", "page_idx": 5, "bbox": [307, 603.0440063476562, 527, 683.9354248046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 71, "type": "text", "text": "The results from  Kulkarni et al.  ( 2018 ) estab- lish a baseline for IE on the WLPC. In that work, relation extraction is performed using gold entity boundaries as input. Without using any gold entity information, D Y GIE improves on the baselines by  $16.8\\%$   for relation extraction and  $2.2\\%$   for NER. ", "page_idx": 5, "bbox": [307, 685.1400146484375, 527, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 72, "type": "table", "page_idx": 6, "img_path": "layout_images/N19-1308_4.jpg", "table_footnote": "Table 3: Datasets for overlapping entity extraction and their statistics.  Ent : Number of entity categories.  Over- lap : Percentage of sentences that contain overlapping entities. ", "bbox": [71, 61, 292, 171], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Domain Docs Ent Overlap Coref\n\nACE04-O News 443, 7 42% v\nACE05-O News 437 7 32% x\nGENIA Biomed 1999 5 24% v\n", "vlm_text": "The table contains information about three datasets used in various domains. Here's a breakdown of each column in the table:\n\n1. **Domain**: Specifies the name of the dataset. The datasets listed are ACE04-O, ACE05-O, and GENIA.\n\n2. **Domain**: Indicates the type of data the dataset contains. ACE04-O and ACE05-O belong to the \"News\" domain, while GENIA is categorized under \"Biomed.\"\n\n3. **Docs**: Represents the number of documents included in each dataset. ACE04-O has 443 documents, ACE05-O has 437 documents, and GENIA contains 1999 documents.\n\n4. **Ent**: Displays the number of entity types present in the dataset. Both ACE04-O and ACE05-O have 7 entity types, while GENIA has 5 entity types.\n\n5. **Overlap**: Shows the percentage of overlapping entities within the data. ACE04-O has 42% overlap, ACE05-O has 32% overlap, and GENIA has 24% overlap.\n\n6. **Coref**: Indicates whether coreference annotations are available within the dataset. ACE04-O and GENIA have coreference annotations (marked with a check), while ACE05-O does not (marked with a cross)."}
{"layout": 73, "type": "text", "text": "On the OntoNotes data set used for the auxiliary coreference task with ACE05, our model achieves coreference test set performance of 70.4 F1, which is competitive with the state-of-the-art performance reported in  Lee et al.  ( 2017 ). ", "page_idx": 6, "bbox": [71, 185.16200256347656, 292, 252.50448608398438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 74, "type": "text", "text": "4.2 Overlapping Entity Extraction ", "text_level": 1, "page_idx": 6, "bbox": [71, 263, 241, 277], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 75, "type": "text", "text": "There are many applications where the correct iden- tiﬁcation of overlapping entities is crucial for cor- rect document understanding. For instance, in the biomedical domain, a  BRCA1 mutation carrier could refer to a patient taking part in a clinical trial, while  BRCA1  is the name of a gene. ", "page_idx": 6, "bbox": [71, 281.2020263671875, 292, 362.0934753417969], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 76, "type": "text", "text": "We evaluate the performance of D Y GIE on overlapping entity extraction in three datasets: ACE2004, ACE2005 and GENIA. Since relation annotations are not available for these datasets, we include the coreference propagation layer in our models but not the relation layer. ", "page_idx": 6, "bbox": [71, 362.8609924316406, 292, 443.7524719238281], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 77, "type": "text", "text": "Data Statistics on our three datasets are listed in Table  3 . All three have a substantial number  $(>20\\%$   of total) of overlapping entities, making them appropriate for this task. ", "page_idx": 6, "bbox": [71, 452.3872375488281, 292, 506.5724792480469], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 78, "type": "text", "text": "As in the joint case, we evaluate our model on ACE2004  and  ACE2005 , but here we follow the same data preprocessing and evaluation scheme as Wang and Lu  ( 2018 ). We refer to these data sets as ACE04-O and ACE05-O. Unlike the joint en- tity and relation task in Sec.  4.1 , where only the entity head span need be predicted, an entity pre- diction is considered correct in these experiments if both its entity label and its full text span match a gold prediction. This is a more stringent evalua- tion criterion than the one used in Section  4.1 . As before, we use the OntoNotes annotations to train the parameters of the coreference layer. ", "page_idx": 6, "bbox": [71, 507.34002685546875, 292, 683.076416015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 79, "type": "text", "text": "The  GENIA  corpus ( Kim et al. ,  2003 ) provides entity tags and coreferences for 1999 abstracts from the biomedical research literature. We only use the IDENT label to extract coreference clusters. ", "page_idx": 6, "bbox": [71, 683.4503173828125, 292, 737.636474609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 80, "type": "table", "page_idx": 6, "img_path": "layout_images/N19-1308_5.jpg", "table_caption": "Table 4: Performance on the overlapping entity extrac- tion task, compared to previous best systems. We re- port F1 of extracted entities on the test sets. ", "bbox": [306, 62, 528, 231], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Dataset System Entity F1\nKatiyar and Cardie (2018) 72.7\nACE04-O Wang and Lu (2018) 75.1\nDYGIE 84.7\nKatiyar and Cardie (2018) 70.5\nACE0S5S-O Wang and Lu (2018) 74.5\nDYGIE 82.9\nKatiyar and Cardie (2018) 73.8\nGENIA Wang and Lu (2018) 75.1\n\nDyYGIE\n\n76.2\n\n", "vlm_text": "The table presents the performance of different systems on various datasets, measured by the Entity F1 score. The datasets listed are ACE04-O, ACE05-O, and GENIA. For each dataset, three systems are evaluated: \"Katiyar and Cardie (2018)\", \"Wang and Lu (2018)\", and \"DyGIE\".\n\n- For the ACE04-O dataset, the Entity F1 scores for the systems are:\n  - Katiyar and Cardie (2018): 72.7\n  - Wang and Lu (2018): 75.1\n  - DyGIE: 84.7\n\n- For the ACE05-O dataset, the Entity F1 scores for the systems are:\n  - Katiyar and Cardie (2018): 70.5\n  - Wang and Lu (2018): 74.5\n  - DyGIE: 82.9\n\n- For the GENIA dataset, the Entity F1 scores for the systems are:\n  - Katiyar and Cardie (2018): 73.8\n  - Wang and Lu (2018): 75.1\n  - DyGIE: 76.2\n\nThe DyGIE system achieves the highest Entity F1 score across all datasets."}
{"layout": 81, "type": "table", "page_idx": 6, "img_path": "layout_images/N19-1308_6.jpg", "bbox": [306, 232, 527, 312], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Entity Relation\nModel P R FI P R_ Fl\n\nDyYGIE 87.4 86.7 87.1 56.2 60.9 58.4\n—CorefProp 86.2 85.2 85.7 64.3 56.7 60.2\n—RelProp 87.0 86.7 86.9 60.4 55.8 58.0\nBase 86.1 85.7 85.9 59.5 55.7 57.6\n\n", "vlm_text": "The table provides performance metrics of different models on entity and relation extraction tasks. For entities and relations, it presents precision (P), recall (R), and F1 scores. The models compared include:\n\n1. **DyGIE**:\n   - Entity: P = 87.4, R = 86.7, F1 = 87.1\n   - Relation: P = 56.2, R = 60.9, F1 = 58.4\n\n2. **DyGIE without Coreference Propagation (−CorefProp)**:\n   - Entity: P = 86.2, R = 85.2, F1 = 85.7\n   - Relation: P = 64.3, R = 56.7, F1 = 60.2\n\n3. **DyGIE without Relation Propagation (−RelProp)**:\n   - Entity: P = 87.0, R = 86.7, F1 = 86.9\n   - Relation: P = 60.4, R = 55.8, F1 = 58.0\n\n4. **Base**:\n   - Entity: P = 86.1, R = 85.7, F1 = 85.9\n   - Relation: P = 59.5, R = 55.7, F1 = 57.6\n\nFrom these results, DyGIE shows the highest F1 score for entities while −CorefProp scores best for relations."}
{"layout": 82, "type": "text", "text": "Table 5: Ablations on the ACE05 development set with different graph propagation setups. − CorefProp ablates the coreference propagation layers, while  $\\mathtt{-R e l P r o p}$   ablates the relation propagation layers. Base  is the system without any propagation. ", "page_idx": 6, "bbox": [306, 320.55255126953125, 527, 380.37744140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 83, "type": "text", "text": "We use the same data set split and preprocessing procedure as  Wang and Lu  ( 2018 ) for overlapping entity recognition. ", "page_idx": 6, "bbox": [306, 393.3160095214844, 527, 433.5594787597656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 84, "type": "text", "text": "Baselines The current state-of-the-art approach on all three data sets is  Wang and Lu  ( 2018 ), which uses a segmental hypergraph coupled with neural networks for feature learning.  Katiyar and Cardie ( 2018 ) also propose a hypergraph approach using a recurrent neural network as a feature extractor. ", "page_idx": 6, "bbox": [306, 441.47625732421875, 527, 522.7604370117188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 85, "type": "text", "text": "Results Table  4  presents the results of our over- lapping entity extraction experiments on the differ- ent datsets. D Y GIE improves   $11.6\\%$   on the state of the art for ACE04-O and   $11.3\\%$   for ACE05-O. D Y - GIE also advances the state of the art on GENIA, albeit by a more modest   $1.5\\%$  . Together these re- sults suggest that D Y GIE can be utilized fruitfully for information extraction across different domains with overlapped entities, such as bio-medicine. ", "page_idx": 6, "bbox": [306, 530.6773071289062, 527, 652.6094360351562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 86, "type": "text", "text": "5 Analysis of Graph Propagation ", "text_level": 1, "page_idx": 6, "bbox": [306, 663, 484, 677], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 87, "type": "text", "text": "We use the dev sets of ACE2005 and SciERC to analyze the effect of different model components. ", "page_idx": 6, "bbox": [306, 685.0719604492188, 527, 711.7674560546875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 88, "type": "text", "text": "5.1 Coreference and Relation Graph Layers ", "text_level": 1, "page_idx": 6, "bbox": [307, 722, 521, 734], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 89, "type": "text", "text": "Tables  5  and  6  show the effects of graph propa- gation on entity and relation prediction accuracy, ", "page_idx": 6, "bbox": [306, 739.3369750976562, 527, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 90, "type": "table", "page_idx": 7, "img_path": "layout_images/N19-1308_7.jpg", "table_footnote": "Table 7: Entity extraction performance on pronouns in ACE05.  CorefProp  signiﬁcantly increases entity ex- traction F1 on hard-to-disambiguate pronouns by allow- ", "bbox": [71, 61, 527, 154.75], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Entity Relation\nModel P R_ FI P R_ Fl\n\nDyYGIE 68.6 67.8 68.2 46.2 38.5 42.0\n—CorefProp 69.2 66.9 68.0 42.0 40.5 41.2\n—RelProp 69.1 66.0 67.5 43.6 37.6 40.4\nBase 70.0 66.3 68.1 45.4 34.9 39.5\n", "vlm_text": "The table presents the performance metrics for different models on entity recognition and relation extraction tasks. \n\n- The models listed are DyGIE, DyGIE without CorefProp, DyGIE without RelProp, and a Base model.\n- For each model, three metrics are reported: \n  - P (Precision)\n  - R (Recall)\n  - F1 (F1 Score)\n\n**Entity Task:**\n- DyGIE achieves a precision of 68.6, a recall of 67.8, and an F1 score of 68.2.\n- DyGIE without CorefProp achieves a precision of 69.2, a recall of 66.9, and an F1 score of 68.0.\n- DyGIE without RelProp achieves a precision of 69.1, a recall of 66.0, and an F1 score of 67.5.\n- The Base model achieves a precision of 70.0, a recall of 66.3, and an F1 score of 68.1.\n\n**Relation Task:**\n- DyGIE achieves a precision of 46.2, a recall of 38.5, and an F1 score of 42.0.\n- DyGIE without CorefProp achieves a precision of 42.0, a recall of 40.5, and an F1 score of 41.2.\n- DyGIE without RelProp achieves a precision of 43.6, a recall of 37.6, and an F1 score of 40.4.\n- The Base model achieves a precision of 45.4, a recall of 34.9, and an F1 score of 39.5.\n\nThe bold numbers indicate the highest F1 scores in the specific category within each model."}
{"layout": 91, "type": "text", "text": "different graph progation setups.  CorefProp  has a much smaller effect on entity F1 compared to ACE05. ", "page_idx": 7, "bbox": [71, 161.07861328125, 291, 185.03855895996094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 92, "type": "image", "page_idx": 7, "img_path": "layout_images/N19-1308_8.jpg", "img_caption": "(a) Entity F1 with different (b) Relation F1 with differ- number of  CorefProp  it- ent number of  RelProp  it- erations    $N$  . erations    $M$  . ", "bbox": [71, 192, 289, 303], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Entity Fl\n\n90\n88\n86\n84\n82\n80\n\na\n\nOo 1 2 3\nNum. iterations Nv\n\nRelation F1\n\nas\n\n0 A. 2 3\nNum. iterations M\n\n", "vlm_text": "The image shows two line graphs comparing the performance of entity and relation extraction with different numbers of iterations for two processes: CorefProp and RelProp. \n\n- The left graph is titled \"Entity F1\" and represents the F1 score of entity extraction across four iteration counts (0, 1, 2, and 3) for CorefProp. The scores are plotted as a blue line with circular markers. The highest score appears at two iterations.\n\n- The right graph is titled \"Relation F1\" and represents the F1 score of relation extraction across four iteration counts (0, 1, 2, and 3) for RelProp. The scores are plotted as a red line with square markers. The highest score occurs at two iterations.\n\nThe graphs indicate the intended impact of iterative processes on F1 scores for both entity and relation extraction tasks."}
{"layout": 93, "type": "text", "text": "Figure 3: F1 score of each layer on ACE development set for different number of iterations.    $N=0$   or  $M=0$  indicates no propagation is made for the layer. ", "page_idx": 7, "bbox": [71, 307.569580078125, 291, 343.48553466796875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 94, "type": "text", "text": "where  − CorefProp  and  − RelProp  de lating the propagation process by setting  $N=0$  or    $M=0$  , respectively.  Base  is the base model without any propagation. For ACE05, we observe that coreference propagation is mainly helpful for entities; it appears to hurt relation extraction. On SciIE, coreference propagation gives a small ben- eﬁt on both tasks. Relation propagation signiﬁ- cantly beneﬁts both entity and relation extraction in both domains. In particular, there are a large por- tion of sentences with multiple relation instances across different entities in both ACE05 and Sci- ERC, which is the scenario in which we expect relation propagation to help. ", "page_idx": 7, "bbox": [71, 355.7239990234375, 291, 545.0093994140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 95, "type": "text", "text": "Since coreference propagation has more effect on entity extraction and relation propagation has more effect on relation extraction, we mainly focus on ablating the effect of coreference propagation on entity extraction and relation propagation on relation extraction in the following subsections. ", "page_idx": 7, "bbox": [71, 546.1909790039062, 291, 627.0824584960938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 96, "type": "text", "text": "5.2 Coreference Propagation and Entities ", "text_level": 1, "page_idx": 7, "bbox": [71, 640, 273, 652], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 97, "type": "text", "text": "A major challenge of ACE05 is to disambiguate the entity class for pronominal mentions, which requires reasoning with cross-sentence contexts. For example, in a sentence from ACE05 dataset,\n\n “One of    $[\\mathbf{them}]_{\\mathrm{PER}}$  , from a very close friend of\n\n [ours] ORG .” It is impossible to identity whether them  and  ours  is a person ( PER ) or organization ( ORG ) unless we have read previous sentences. We hypothesize that this is a context where coreference propagation can help. Table  7  shows the effect of the coreference layer for entity categorization of pronouns.   D Y GIE has  $6.6\\%$   improvement on pronoun performance, conﬁrming our hypothesis. ", "page_idx": 7, "bbox": [71, 658.041015625, 291, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 98, "type": "text", "text": "", "page_idx": 7, "bbox": [306, 183.7849884033203, 527, 251.12649536132812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 99, "type": "text", "text": "Looking further, Table  8  shows the impact on all entity categories, giving the difference between the confusion matrix entries with and without CorefProp . The frequent confusions associated with pronouns ( GPE/PER  and  PER/ORG , where  $G P E$   is a geopolitical entity) greatly improve, but the beneﬁt of  CorefProp  extends to most cate- gories. ", "page_idx": 7, "bbox": [306, 251.70399475097656, 527, 359.6934814453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 100, "type": "text", "text": "Of course, there are a few instances where CorefProp  causes errors in entity extraction. For example, in the sentence “[They] ORG   might have PER been using Northshore...”, D Y GIE predicted  They to be of    $O R G$   type because the most conﬁdent an- tecedent is  those companies  in the previous sen- tence: “The money was invested in  those compa- nies .” However,  They  is actually referring to  these fund managers  earlier in the document, which be- longs to  PER  category. ", "page_idx": 7, "bbox": [306, 360.27099609375, 527, 495.3584899902344], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 101, "type": "text", "text": "In the SciERC dataset, the pronouns are uni- formly assigned with a  Generic  label, which ex- plains why  CorefProp  does not have much ef- fect on entity extraction performance. ", "page_idx": 7, "bbox": [306, 495.9360046386719, 527, 549.7284545898438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 102, "type": "text", "text": "The Figure  3a  shows the effect of number of iterations for coreference propagation in the entity extraction task. The ﬁgure shows that coreference layer obtains the best performance on the second iteration   $(N=2)$  ). ", "page_idx": 7, "bbox": [306, 550.3059692382812, 527, 617.6474609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 103, "type": "text", "text": "5.3 Relation Propagation Impact ", "text_level": 1, "page_idx": 7, "bbox": [306, 628, 467, 641], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 104, "type": "text", "text": "Figure  4  shows relation scores as a function of num- ber of entities in sentence for D Y GIE and D Y GIE without relation propagation on ACE05. The ﬁgure indicates that relation propagation achieves signiﬁ- cant improvement in sentences with more entities, where one might expect that using broader context ", "page_idx": 7, "bbox": [306, 645.3079833984375, 527, 726.199462890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 105, "type": "table", "page_idx": 8, "img_path": "layout_images/N19-1308_9.jpg", "table_footnote": "Table 8: Difference in the confusion matrix counts for ACE05 entity extraction associated with adding CorefProp . ", "bbox": [70, 60, 292, 180], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "| LOC WEA GPE PER FAC ORG _ VEH\n\nLOC 5 0 -2 -1 2 -1 0\nWEA 0 3 0 0 1 -3 -1\nGPE 3 0 31 -26 3 -7 0\nPER 0 -2 -3 18 -1 -26 4\nFAC 4 -1 2 3 2 -5 1\nORG 0 0 0 -8 -1 6 0\nVEH 0 -2 -1 2 5 -l 1\n\n", "vlm_text": "This table appears to display a matrix of some form of interaction or relationship between different categories, possibly related to Named Entity Recognition (NER) types in text processing. The column and row headers are abbreviations commonly used in NER:\n\n- LOC: Location\n- WEA: Weapon\n- GPE: Geopolitical Entity\n- PER: Person\n- FAC: Facility\n- ORG: Organization\n- VEH: Vehicle\n\nThe diagonal of the table is shaded, possibly indicating that it represents the frequency, strength, or a score of the entity interacting with itself. The numbers off the diagonal could reflect some interaction, misclassification rates, or co-occurrence frequency between the entities. Negative values might indicate conflicts, errors, or other statistical measures, while positive values could indicate cooperation or other positive attributes. The specific meaning of the numbers would depend on the context in which this table is used."}
{"layout": 106, "type": "image", "page_idx": 8, "img_path": "layout_images/N19-1308_10.jpg", "img_caption": "Figure 4: Relation F1 broken down by number of enti- ties in each sentence. The performance of relation ex- traction degrades on sentences containing more entities. Adding relation propagation alleviates this problem. ", "bbox": [70, 194, 292, 342], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "70\n\n50\n\n—o— DYGIE\ne+ DYGIE-—Re1lProp\n\n2 3 4-5 6-11 12-max\n\nNum. entities in sentence\n", "vlm_text": "The image is a line graph showing the performance of relation extraction systems, measured by F1 score, as a function of the number of entities present in a sentence. There are two compared systems: \"DyGIE\" and \"DyGIE-RelProp.\"\n\n- The x-axis represents the number of entities in each sentence, categorized into groups (2, 3, 4-5, 6-11, 12-max).\n- The y-axis represents the Relation F1 score, ranging from 50 to 70.\n\nKey Observations:\n- For sentences with 2 entities, both systems perform similarly with high F1 scores.\n- As the number of entities in the sentence increases, the performance of both systems decreases.\n- \"DyGIE\" (represented by a blue line with circle markers) generally outperforms \"DyGIE-RelProp\" (represented by a red line with square markers) across all categories.\n- Despite the decrease in performance with more entities, the addition of \"relation propagation\" (in \"DyGIE-RelProp\") attempts to address this decline, although not as effectively as \"DyGIE\" without relation propagation."}
{"layout": 107, "type": "text", "text": "could have more impact. ", "page_idx": 8, "bbox": [71, 356.6140441894531, 179.47647094726562, 369.759521484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 108, "type": "text", "text": "Figure  3b  shows the effect of number of itera- tions for relation propagation in the relation extrac- tion task. Our model achieves the best performance on the second iteration (  $M=2$  ). ", "page_idx": 8, "bbox": [71, 372.0159912109375, 292, 425.8094787597656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 109, "type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 8, "bbox": [71, 442, 148, 456], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 110, "type": "text", "text": "We have introduced D Y GIE as a general informa- tion extraction framework, and have demonstrated that our system achieves state-of-the art results on entity recognition and relation extraction tasks across a diverse range of domains. The key con- tribution of our model is the dynamic span graph approach, which enhance interaction across tasks that allows the model to learn useful information from broader context. Unlike many IE frameworks, our model does not require any preprocessing using syntactic tools, and has signiﬁcant improvement across different IE tasks including entity, relation extraction and overlapping entity extraction. The addition of co-reference and relation propagation across sentences adds only a small computation cost to inference; the memory cost is controlled by beam search. These added costs are small relative to those of the baseline span-based model. We wel- come the community to test our model on different information extraction tasks. Future directions in- clude extending the framework to encompass more structural IE tasks such as event extraction. ", "page_idx": 8, "bbox": [71, 468.3529968261719, 292, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 111, "type": "text", "text": "Acknowledgments ", "text_level": 1, "page_idx": 8, "bbox": [307, 64, 394, 77], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 112, "type": "text", "text": "This research was supported by the Ofﬁce of Naval Research under the MURI grant N00014-18-1- 2670, NSF (IIS 1616112, III 1703166), Allen Dis- tinguished Investigator Award, Samsung GRO and gifts from Allen Institute for AI, Google, Amazon, and Bloomberg. We also thank the anonymous re- viewers and the UW-NLP group for their helpful comments. ", "page_idx": 8, "bbox": [306, 81.24799346923828, 527, 189.23849487304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 113, "type": "text", "text": "References ", "text_level": 1, "page_idx": 8, "bbox": [307, 213, 364, 225], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 114, "type": "text", "text": "and Chris Develder. 2018. Adversarial training for multi-context joint entity and relation extraction. In Proc. Conf. Empirical Methods Natural Language Process. (EMNLP) , pages 2830–2836. Antoine Bordes, Nicolas Usunier, Alberto Garcia- Duran, Jason Weston, and Oksana Yakhnenko. 2013. Translating embeddings for modeling multi- relational data. In  Advances in neural information processing systems . Yee Seng Chan and Dan Roth. 2011. Exploiting syntactico-semantic structures for relation extrac- tion. In  Proc. Annu. Meeting Assoc. for Computa- tional Linguistics (ACL) . Fenia Christopoulou, Makoto Miwa, and Sophia Ana- niadou. 2018. A walk-based model on entity graphs for relation extraction. In  Proc. Annu. Meeting As- soc. for Computational Linguistics (ACL) , volume 2, pages 81–88. Ronan Collobert and Jason Weston. 2008. A uniﬁed architecture for natural language processing: Deep neural networks with multitask learning. In  Proc. Int. Conf. Machine Learning (ICML) , pages 160– 167. Ronan Collobert, Jason Weston, L´ eon Bottou, Michael Karlen, Koray Kavukcuoglu, and Pavel Kuksa. 2011. Natural language processing (almost) from scratch. J. Machine Learning Research , 12(Aug):2493– 2537. Greg Durrett and Dan Klein. 2014. A joint model for entity analysis: Coreference, typing, and linking. Trans. Assoc. for Computational Linguistics (TACL) , 2:477–490. Yarin Gal and Zoubin Ghahramani. 2016. A theoret- ically grounded application of dropout in recurrent neural networks. In  Proc. Annu. Conf. Neural In- form. Process. Syst. (NIPS) . Hannaneh Hajishirzi, Leila Zilles, Daniel S Weld, and Luke Zettlemoyer. 2013. Joint coreference res- olution and named-entity linking with multi-pass sieves. In  Proc. Conf. Empirical Methods Natural Language Process. (EMNLP) , pages 289–299. ", "page_idx": 8, "bbox": [306, 242.31158447265625, 527, 765.7653198242188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 115, "type": "text", "text": "Luheng He, Kenton Lee, Omer Levy, and Luke Zettle- moyer. 2018. Jointly predicting predicates and argu- ments in neural semantic role labeling. In  ACL . Arzoo Katiyar and Claire Cardie. 2018. Nested named entity recognition revisited. In  Proc. Conf. North American Assoc. for Computational Linguis- tics (NAACL) . Jin-Dong Kim, Tomoko Ohta, Yuka Tateisi, and Jun’ichi Tsujii. 2003. Genia corpus - a semantically annotated corpus for bio-textmining.  Bioinformat- ics , 19 Suppl 1:i180–2. Chaitanya Kulkarni, Wei Xu, Alan Ritter, and Raghu Machiraju. 2018. An annotated corpus for machine reading of instructions in wet lab protocols. In NAACL-HLT . Guillaume Lample, Miguel Ballesteros, Sandeep Sub- ramanian, Kazuya Kawakami, and Chris Dyer. 2016. Neural architectures for named entity recognition. In  Proc. Conf. North American Assoc. for Compu- tational Linguistics (NAACL) . Kenton Lee, Luheng He, Mike Lewis, and Luke S. Zettlemoyer. 2017. End-to-end neural coreference resolution. In  EMNLP . Kenton Lee, Luheng He, and Luke Zettlemoyer. 2018. Higher-order coreference resolution with coarse-to- ﬁne inference. In  NAACL . Qi Li and Heng Ji. 2014. Incremental joint extrac- tion of entity mentions and relations. In  Proc. Annu. Meeting Assoc. for Computational Linguistics (ACL) , volume 1, pages 402–412. Yi Luan, Chris Brockett, Bill Dolan, Jianfeng Gao, and Michel Galley. 2017a. Multi-task learning for speaker-role adaptation in neural conversation mod- els. In  Proc. IJCNLP . Yi Luan, Luheng He, Mari Ostendorf, and Hannaneh Hajishirzi. 2018a. Multi-task identiﬁcation of enti- ties, relations, and coreference for scientiﬁc knowl- edge graph construction. In  Proc. Conf. Empirical Methods Natural Language Process. (EMNLP) . Yi Luan, Mari Ostendorf, and Hannaneh Hajishirzi. 2017b. Scientiﬁc information extraction with semi- supervised neural tagging. In  Proc. Conf. Empirical Methods Natural Language Process. (EMNLP) . Yi Luan, Mari Ostendorf, and Hannaneh Hajishirzi. 2018b. The uwnlp system at semeval-2018 task 7: Neural relation extraction model with selectively in- corporated concept embeddings. In  Proc. Int. Work- shop on Semantic Evaluation (SemEval) , pages 788– 792. Xuezhe Ma and Eduard Hovy. 2016. End-to-end sequence labeling via bi-directional LSTM-CNNs- CRF. In  Proc. Annu. Meeting Assoc. for Computa- tional Linguistics (ACL) . ", "page_idx": 9, "bbox": [71, 64.56158447265625, 292, 765.76513671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 116, "type": "text", "text": "Makoto Miwa and Mohit Bansal. 2016. End-to-end re- lation extraction using lstms on sequences and tree structures. In  Proc. Annu. Meeting Assoc. for Com- putational Linguistics (ACL) , pages 1105–1116. David Nadeau and Satoshi Sekine. 2007. A survey of named entity recognition and classiﬁcation.  Lingvis- ticae Investigationes , 30(1):3–26. Nanyun Peng and Mark Dredze. 2015. Named en- tity recognition for chinese social media with jointly trained embeddings. In  Proc. Conf. Empirical Meth- ods Natural Language Process. (EMNLP) , pages 548–554. Nanyun Peng, Hoifung Poon, Chris Quirk, Kristina Toutanova, and Wen-tau Yih. 2017. Cross-sentence n-ary relation extraction with graph lstms.  Trans. As- soc. for Computational Linguistics (TACL) , 5:101– 115. Jeffrey Pennington, Richard Socher, and Christopher D Manning. 2014. Glove: Global vectors for word rep- resentation. In  Proc. Conf. Empirical Methods Natu- ral Language Process. (EMNLP) , volume 14, pages 1532–1543. Matthew E. Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke Zettlemoyer. 2018. Deep contextualized word repre- sentations. In  NAACL . Sameer Pradhan, Alessandro Moschitti, Nianwen Xue, Olga Uryupina, and Yuchen Zhang. 2012. Conll- 2012 shared task: Modeling multilingual unre- stricted coreference in ontonotes. In  Joint Confer- ence on EMNLP and CoNLL-Shared Task , pages 1– 40. Association for Computational Linguistics. Victor Sanh, Thomas Wolf, and Sebastian Ruder. 2019. A hierarchical multi-task approach for learning em- beddings from semantic tasks.  AAAI . Sameer Singh, Sebastian Riedel, Brian Martin, Jiaping Zheng, and Andrew McCallum. 2013. Joint infer- ence of entities, relations, and coreference. In  Proc. of the 2013 workshop on Automated knowledge base construction , pages 1–6. ACM. Linfeng Song, Yue Zhang, Zhiguo Wang, and Daniel Gildea. 2018. N-ary relation extraction using graph- state lstm. In  Proc. Conf. Empirical Methods Natu- ral Language Process. (EMNLP) , pages 2226–2235. Bailin Wang and Wei Lu. 2018. Neural segmental hy- pergraphs for overlapping mention recognition. In EMNLP . Kun Xu, Yansong Feng, Songfang Huang, and Dongyan Zhao. 2015. Semantic relation classiﬁca- tion via convolutional neural networks with simple negative sampling. In  Proc. Conf. Empirical Meth- ods Natural Language Process. (EMNLP) , pages 536–540. ", "page_idx": 9, "bbox": [307, 64.56121826171875, 527, 765.7648315429688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 117, "type": "text", "text": "Bishan Yang and Tom M Mitchell. 2016. Joint extrac- tion of events and entities within a document context. In  Proceedings of the 2016 Conference of the North American Chapter of the Association for Computa- tional Linguistics: Human Language Technologies , pages 289–299. Bishan Yang, Wen-tau Yih, Xiaodong He, Jianfeng Gao, and Li Deng. 2015. Embedding entities and relations for learning and inference in knowledge bases. In  Proc. Int. Conf. Learning Representations (ICLR) . Meishan Zhang, Yue Zhang, and Guohong Fu. 2017. End-to-end neural relation extraction with global op- timization. In  Proc. Conf. Empirical Methods Natu- ral Language Process. (EMNLP) , pages 1730–1740. Yuhao Zhang, Peng Qi, and Christopher D Man- ning. 2018. Graph convolution over pruned depen- dency trees improves relation extraction. In  Proc. Conf. Empirical Methods Natural Language Pro- cess. (EMNLP) . ", "page_idx": 10, "bbox": [72, 64.56158447265625, 292, 311.68524169921875], "page_size": [595.2760009765625, 841.8900146484375]}
