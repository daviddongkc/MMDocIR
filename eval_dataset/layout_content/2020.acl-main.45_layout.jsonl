{"layout": 0, "type": "text", "text": "Dice Loss for Data-imbalanced NLP Tasks ", "text_level": 1, "page_idx": 0, "bbox": [168, 68, 430, 85], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 1, "type": "text", "text": "Xiaoya  $\\mathbf{Li^{\\star}}$  , Xiaofei  $\\mathbf{Sun}^{\\pmb{\\star}}$  , Yuxian Meng ♣ , Junjun Liang ♣ , Fei  $\\mathbf{W}\\mathbf{u}^{\\star}$  and Jiwei  $\\mathbf{Li^{\\star\\star}}$  ", "text_level": 1, "page_idx": 0, "bbox": [84, 107, 519, 122.75], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 2, "type": "text", "text": "♠ Department of Computer Science and Technology, Zhejiang University ♣ Shannon.AI { xiaoya li, xiaofei sun, yuxian meng, jiwei li } @shannonai.com, wufei  $@$  cs.zju.edu.cn ", "page_idx": 0, "bbox": [93.10301208496094, 121.6263656616211, 507.431396484375, 171.9739990234375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 3, "type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0, "bbox": [159, 206, 204, 217], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 4, "type": "text", "text": "Many NLP tasks such as tagging and ma- chine reading comprehension (MRC) are faced with the severe data imbalance issue: nega- tive examples signiﬁcantly outnumber positive ones, and the huge number of easy-negative examples overwhelms training. The most commonly used cross entropy criteria is ac- tually accuracy-oriented, which creates a dis- crepancy between training and test. At train- ing time, each training instance contributes equally to the objective function, while at test time F1 score concerns more about positive ex- amples. ", "page_idx": 0, "bbox": [88, 234.5025634765625, 274, 388.5355224609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 5, "type": "text", "text": "In this paper, we propose to use dice loss in replacement of the standard cross-entropy ob- jective for data-imbalanced NLP tasks. Dice loss is based on the Sørensen–Dice coefﬁcient ( Sorensen ,  1948 ) or Tversky index ( Tversky , 1977 ), which attaches similar importance to false positives and false negatives, and is more immune to the data-imbalance issue. To fur- ther alleviate the dominating inﬂuence from easy-negative examples in training, we pro- pose to associate training examples with dy- namically adjusted weights to deemphasize easy-negative examples. Experimental results show that this strategy narrows down the gap between the F1 score in evaluation and the dice loss in training. ", "page_idx": 0, "bbox": [88, 404.73858642578125, 274, 594.2785034179688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 6, "type": "text", "text": "With the proposed training objective, we ob- serve signiﬁcant performance boosts over a wide range of data imbalanced NLP tasks. No- tably, we are able to achieve SOTA results on CTB5, CTB6 and UD1.4 for the part of speech tagging task, and competitive or even better results on CoNLL03, OntoNotes5.0, MSRA and OntoNotes4.0 for the named en- tity recognition task along with the machine reading comprehension and paraphrase iden- tiﬁcation tasks. The code can be found at  https://github.com/ShannonAI/ dice loss for NLP . ", "page_idx": 0, "bbox": [88, 610.4815673828125, 274, 764.5155029296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 7, "type": "table", "page_idx": 0, "img_path": "layout_images/2020.acl-main.45_0.jpg", "bbox": [308, 204, 524, 258], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Task # neg | # pos | ratio\n\nCoNLL03 NER. 170K 34K 4.98\nOntoNotes5.0 NER 1.96M | 239K 8.18\nSQuAD 1.1 (Rajpurkar et al., 2016) | 10.3M 175K 55.9\nSQuAD 2.0 (Rajpurkar et al., 2018) | 15.4M. 188K 82.0\nQUOREF (Dasigi et al., 2019) 6.52M | 38.6K 169\n\n", "vlm_text": "The table contains information about various tasks and their datasets. \n\n- **Task:** Lists the specific task or dataset being described.\n- **# neg:** Number of negative instances (in thousands or millions).\n- **# pos:** Number of positive instances (in thousands).\n- **ratio:** The ratio of negative to positive instances.\n\n### Details:\n1. **CoNLL03 NER**\n   - # neg: 170K\n   - # pos: 34K\n   - ratio: 4.98\n\n2. **OntoNotes5.0 NER**\n   - # neg: 1.96M\n   - # pos: 239K\n   - ratio: 8.18\n\n3. **SQuAD 1.1**\n   - # neg: 10.3M\n   - # pos: 175K\n   - ratio: 55.9\n\n4. **SQuAD 2.0**\n   - # neg: 15.4M\n   - # pos: 188K\n   - ratio: 82.0\n\n5. **QUOREF**\n   - # neg: 6.52M\n   - # pos: 38.6K\n   - ratio: 169\n\nReferences are included for some datasets."}
{"layout": 8, "type": "text", "text": "Table 1: Number of positive and negative examples and their ratios for different data-imbalanced NLP tasks. ", "page_idx": 0, "bbox": [306, 266.79058837890625, 527, 290.63153076171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 9, "type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0, "bbox": [308, 304, 390, 317], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 10, "type": "text", "text": "Data imbalance is a common issue in a variety of NLP tasks such as tagging and machine read- ing comprehension. Table  1  gives concrete exam- ples: for the Named Entity Recognition (NER) task ( Sang and De Meulder ,  2003 ;  Nadeau and Sekine ,  2007 ), most tokens are backgrounds with tagging class    $O$  . Speciﬁcally, the number of to- kens with tagging class    $O$   is 5 times as many as those with entity labels for the CoNLL03 dataset and 8 times for the OntoNotes5.0 dataset; Data- imbalanced issue is more severe for MRC tasks ( Rajpurkar et al. ,  2016 ;  Nguyen et al. ,  2016 ;  Ra- jpurkar et al. ,  2018 ;  Ko cisk y et al. ,  2018 ;  Dasigi et al. ,  2019 ) with the value of negative-positive ra- tio being 50-200, which is due to the reason that the task of MRC is usually formalized as predicting the  starting  and  ending  indexes conditioned on the query and the context, and given a chunk of text of an arbitrary length, only two tokens are positive (or of interest) with all the rest being background. ", "page_idx": 0, "bbox": [306, 327.32000732421875, 527, 595.3274536132812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 11, "type": "text", "text": "Data imbalance results in the following two issues: (1)  the training-test discrepancy : Without bal- ancing the labels, the learning process tends to con- verge to a point that strongly biases towards class with the majority label. This actually creates a dis- crepancy between training and test: at training time, each training instance contributes equally to the objective function, whereas at test time, F1 gives equal weight to positive and negative examples; (2) the overwhelming effect of easy-negative exam- ples . As pointed out by  Meng et al.  ( 2019 ), a sig- niﬁcantly large number of negative examples also means that the number of easy-negative example is large. The huge number of easy examples tends to overwhelm the training, making the model not sufﬁciently learn to distinguish between positive examples and hard-negative examples. The cross- entropy objective (CE for short) or maximum like- lihood (MLE) objective, which is widely adopted as the training objective for data-imbalanced NLP tasks ( Lample et al. ,  2016 ;  Wu et al. ,  2019 ;  Devlin et al. ,  2018 ;  Yu et al. ,  2018a ;  McCann et al. ,  2018 ; Ma and Hovy ,  2016 ;  Chen et al. ,  2017 ), handles neither of the issues. ", "page_idx": 0, "bbox": [306, 605.333984375, 527, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 12, "type": "text", "text": "", "page_idx": 1, "bbox": [71, 63.68701934814453, 292, 224.38449096679688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 13, "type": "text", "text": "To handle the ﬁrst issue, we propose to replace CE or MLE with losses based on the Sørensen–Dice co- efﬁcient ( Sorensen ,  1948 ) or Tversky index ( Tver- sky ,  1977 ). The Sørensen–Dice coefﬁcient, dice loss for short, is the harmonic mean of precision and recall. It attaches equal importance to false pos- itives (FPs) and false negatives (FNs) and is thus more immune to data-imbalanced datasets. Tver- sky index extends dice loss by using a weight that trades precision and recall, which can be thought as the approximation of the  $F_{\\beta}$   score, and thus comes with more ﬂexibility. Therefore, we use dice loss or Tversky index to replace CE loss to address the ﬁrst issue. ", "page_idx": 1, "bbox": [71, 233.9080352783203, 292, 421.4324645996094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 14, "type": "text", "text": "Only using dice loss or Tversky index is not enough since they are unable to address the dominating inﬂuence of easy-negative examples. This is intrin- sically because dice loss is actually a soft version of the F1 score. Taking the binary classiﬁcation task as an example, at test time, an example will be classiﬁed as negative as long as its probability is smaller than 0.5, but training will push the value to 0 as much as possible. This gap isn’t a big issue for balanced datasets, but is extremely detrimental if a big proportion of training examples are easy- negative ones: easy-negative examples can easily dominate training since their probabilities can be pushed to 0 fairly easily. Meanwhile, the model can hardly distinguish between hard-negative examples and positive ones. Inspired by the idea of focal loss ( Lin et al. ,  2017 ) in computer vision, we pro- pose a dynamic weight adjusting strategy, which associates each training example with a weight in proportion to    $(1-p)$  , and this weight dynamically changes as training proceeds. This strategy helps deemphasize conﬁdent examples during training as their probability  $p$   approaches  1 , making the model attentive to hard-negative examples, and thus alle- viates the dominating effect of easy-negative exam- ples. Combing both strategies, we observe signif- icant performance boosts on a wide range of data imbalanced NLP tasks. ", "page_idx": 1, "bbox": [71, 430.9549865722656, 292, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 15, "type": "text", "text": "", "page_idx": 1, "bbox": [306, 63.68701934814453, 527, 103.66049194335938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 16, "type": "text", "text": "The rest of this paper is organized as follows: re- lated work is presented in Section 2. We describe different proposed losses in Section 3. Experimen- tal results are presented in Section 4. We perform ablation studies in Section 5, followed by a brief conclusion in Section 6. ", "page_idx": 1, "bbox": [306, 111.53101348876953, 527, 191.74545288085938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 17, "type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1, "bbox": [306, 203, 397, 216], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 18, "type": "text", "text": "2.1 Data Resampling ", "text_level": 1, "page_idx": 1, "bbox": [307, 225, 413, 238], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 19, "type": "text", "text": "The idea of weighting training examples has a long history. Importance sampling ( Kahn and Mar- shall ,  1953 ) assigns weights to different samples and changes the data distribution. Boosting algo- rithms such as AdaBoost ( Kanduri et al. ,  2018 ) select harder examples to train subsequent classi- ﬁers. Similarly, hard example mining ( Malisiewicz et al. ,  2011 ) downsamples the majority class and exploits the most difﬁcult examples. Oversampling ( Chen et al. ,  2010 ;  Chawla et al. ,  2002 ) is used to balance the data distribution. Another line of data resampling is to dynamically control the weights of examples as training proceeds. For example, focal loss ( Lin et al. ,  2017 ) used a soft weighting scheme that emphasizes harder examples during training. In self-paced learning ( Kumar et al. ,  2010 ), exam- ple weights are obtained through optimizing the weighted training loss which encourages learning easier examples ﬁrst. At each training step, self- paced learning algorithm optimizes model param- eters and example weights jointly. Other works ( Chang et al. ,  2017 ;  Katharopoulos and Fleuret , 2018 ) adjusted the weights of different training ex- amples based on training loss. Besides, recent work ( Jiang et al. ,  2017 ;  Fan et al. ,  2018 ) proposed to learn a separate network to predict sample weights. ", "page_idx": 1, "bbox": [306, 242.38502502441406, 527, 590.8744506835938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 20, "type": "text", "text": "2.2 Data Imbalance Issue in Computer Vision ", "text_level": 1, "page_idx": 1, "bbox": [307, 600, 495, 626], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 21, "type": "text", "text": "The background-object label imbalance issue is se- vere and thus well studied in the ﬁeld of object detection ( Li et al. ,  2015 ;  Girshick ,  2015 ;  He et al. , 2015 ;  Girshick et al. ,  2013 ;  Ren et al. ,  2015 ). The idea of hard negative mining (HNM) ( Girshick et al. ,  2013 ) has gained much attention recently. Pang et al.  ( 2019 ) proposed a novel method called IoU-balanced sampling and  Chen et al.  ( 2019 ) de- signed a ranking model to replace the conventional classiﬁcation task with an average-precision loss to alleviate the class imbalance issue. The efforts made on object detection have greatly inspired us to solve the data imbalance issue in NLP. ", "page_idx": 1, "bbox": [306, 632.1619873046875, 527, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 22, "type": "text", "text": "", "page_idx": 2, "bbox": [71, 63.68701934814453, 292, 103.66049194335938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 23, "type": "text", "text": "Sudre et al.  ( 2017 ) addressed the severe class imbal- ance issue for the image segmentation task. They proposed to use the class re-balancing property of the Generalized Dice Loss as the training ob- jective for unbalanced tasks.  Shen et al.  ( 2018 ) investigated the inﬂuence of Dice-based loss for multi-class organ segmentation using a dataset of abdominal CT volumes.  Kodym et al.  ( 2018 ) pro- posed to use the batch soft Dice loss function to train the CNN network for the task of segmentation of organs at risk (OAR) of medical images.  Shamir et al.  ( 2019 ) extended the deﬁnition of the classical Dice coefﬁcient to facilitate the direct comparison of a ground truth binary image with a probabilis- tic map. In this paper, we introduce dice loss into NLP tasks as the training objective and propose a dynamic weight adjusting strategy to address the dominating inﬂuence of easy-negative examples. ", "page_idx": 2, "bbox": [71, 110.70301055908203, 292, 351.8824768066406], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 24, "type": "text", "text": "3 Losses ", "text_level": 1, "page_idx": 2, "bbox": [71, 362, 124, 374], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 25, "type": "text", "text": "3.1 Notation ", "text_level": 1, "page_idx": 2, "bbox": [71, 382, 137, 394], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 26, "type": "text", "text": "For illustration purposes, we use the binary clas- siﬁcation task to demonstrate how different losses work. The mechanism can be easily extended to multi-class classiﬁcation. Let    $X$   denote a set of training instances and each instance  $x_{i}\\in X$  sociated with a golden binary label  $y_{i}=[y_{i0},y_{i1}]$  denoting the ground-truth class    $x_{i}$   belongs to, and    $p_{i}\\,=\\,[p_{i0},p_{i1}]$   is the predicted probabilities pect  $y_{i0},y_{i1}\\ \\in$   $\\{0,1\\},p_{i0},p_{i1}\\in[0,1]$  { }  ∈  and  $p_{i1}+p_{i0}=1$  . ", "page_idx": 2, "bbox": [71, 399.7829895019531, 292, 542.6957397460938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 27, "type": "text", "text": "3.2 Cross Entropy Loss ", "text_level": 1, "page_idx": 2, "bbox": [71, 543, 189, 555], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 28, "type": "text", "text": "The vanilla cross entropy (CE) loss is given by: ", "page_idx": 2, "bbox": [71, 559.7479858398438, 278.705810546875, 572.8934326171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 29, "type": "equation", "text": "\n$$\n\\mathrm{CE}=-\\frac{1}{N}\\sum_{i}\\sum_{j\\in\\{0,1\\}}y_{i j}\\log p_{i j}\n$$\n ", "text_format": "latex", "page_idx": 2, "bbox": [107, 578, 254, 614], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 30, "type": "text", "text": "As can be seen from Eq. 1 , each    $x_{i}$   contributes equally to the ﬁnal objective. Two strategies are normally used to address the the case where we wish that not all  $x_{i}$   are treated equally: associating different classes with different weighting factor    $\\alpha$  or resampling the datasets. For the former, Eq. 1  is adjusted as follows: ", "page_idx": 2, "bbox": [71, 620.489990234375, 292, 714.118408203125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 31, "type": "equation", "text": "\n$$\n\\mathrm{CE}=-\\frac{1}{N}\\sum_{i}\\alpha_{i}\\sum_{j\\in\\{0,1\\}}y_{i j}\\log p_{i j}\n$$\n ", "text_format": "latex", "page_idx": 2, "bbox": [126, 720, 283, 754], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 32, "type": "text", "text": "where    $\\alpha_{i}\\in[0,1]$   may be set by the inverse class frequency or treated as a hyperparameter to set by cross validation. In this work, we use    $\\mathrm{lg}\\big(\\frac{n-n_{t}}{n_{t}}+K\\big)$  to calculate the coefﬁcient    $\\alpha$  , where  $n_{t}$   is the num- ber of samples with class    $t$   and    $n$   is the total number of samples in the training set.    $K$   is a hyperparam- eter to tune. Intuitively, this equation assigns less weight to the majority class and more weight to the minority class. The data resampling strategy con- structs a new dataset by sampling training examples from the original dataset based on human-designed criteria, e.g. extracting equal training samples from each class. Both strategies are equivalent to chang- ing the data distribution during training and thus are of the same nature. Empirically, these two meth- ods are not widely used due to the trickiness of selecting    $\\alpha$   especially for multi-class classiﬁcation tasks and that inappropriate selection can easily bias towards rare classes ( Valverde et al. ,  2017 ). ", "page_idx": 2, "bbox": [306, 63.68701934814453, 527, 318.2804870605469], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 33, "type": "text", "text": "3.3 Dice Coefﬁcient and Tversky Index ", "text_level": 1, "page_idx": 2, "bbox": [307, 329, 496, 341], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 34, "type": "text", "text": "Sørensen–Dice coefﬁcient ( Sorensen ,  1948 ;  Dice , 1945 ), dice coefﬁcient (DSC) for short, is an F1- oriented statistic used to gauge the similarity of two sets. Given two sets    $A$   and    $B$  , the vanilla dice coefﬁcient between them is given as follows: ", "page_idx": 2, "bbox": [306, 346.4530029296875, 527, 413.25347900390625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 35, "type": "equation", "text": "\n$$\n\\mathrm{DSC}(A,B)=\\frac{2|A\\cap B|}{|A|+|B|}\n$$\n ", "text_format": "latex", "page_idx": 2, "bbox": [358, 422, 473, 453], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 36, "type": "text", "text": "In our case,    $A$   is the set that contains all positive examples predicted by a speciﬁc model, and    $B$   is the set of all golden positive examples in the dataset. When applied to boolean data with the deﬁnition of true positive (TP), false positive (FP), and false negative (FN), it can be then written as follows: ", "page_idx": 2, "bbox": [306, 462.6109924316406, 527, 542.825439453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 37, "type": "equation", "text": "\n$$\n\\begin{array}{r}{\\mathrm{DSC}=\\frac{2\\mathrm{TP}}{2\\mathrm{TP}+\\mathrm{FN}+\\mathrm{FP}}=\\frac{2\\frac{\\mathrm{TP}}{\\mathrm{TP}+\\mathrm{FN}}\\frac{\\mathrm{TP}}{\\mathrm{TP}+\\mathrm{FP}}}{\\frac{\\mathrm{TP}}{\\mathrm{TP}+\\mathrm{FN}}+\\frac{\\mathrm{TP}}{\\mathrm{TP}+\\mathrm{FP}}}}\\\\ {=\\frac{2\\mathrm{Pre}\\times\\mathrm{Res}}{\\mathrm{Pre}+\\mathrm{Res}}=F1\\qquad}\\end{array}\n$$\n ", "text_format": "latex", "page_idx": 2, "bbox": [316, 551, 515, 617], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 38, "type": "text", "text": "For an individual example    $x_{i}$  , its corresponding dice coefﬁcient is given as follows: ", "page_idx": 2, "bbox": [306, 625.0869750976562, 527, 651.6454467773438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 39, "type": "equation", "text": "\n$$\n\\mathrm{DSC}(x_{i})=\\frac{2p_{i1}y_{i1}}{p_{i1}+y_{i1}}\n$$\n ", "text_format": "latex", "page_idx": 2, "bbox": [366, 660, 466, 690], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 40, "type": "text", "text": "As can be seen, a negative example   $(y_{i1}=0)$  ) does not contribute to the objective. For smoothing pur- poses, it is common to add a    $\\gamma$   factor to both the nominator and the denominator, making the form to be as follows (we simply set    $\\gamma=1$   in the rest of Table 2: Different losses and their formulas. We add  $+1$  to DL, TL and DSC so that they are positive. ", "page_idx": 2, "bbox": [306, 699.2310180664062, 527, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 41, "type": "text", "text": "", "page_idx": 3, "bbox": [71, 190.79156494140625, 291, 214.6324920654297], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 42, "type": "text", "text": "this paper): ", "page_idx": 3, "bbox": [71, 221.9209747314453, 121.385498046875, 235.06643676757812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 43, "type": "equation", "text": "\n$$\n\\mathrm{DSC}(x_{i})=\\frac{2p_{i1}y_{i1}+\\gamma}{p_{i1}+y_{i1}+\\gamma}\n$$\n ", "text_format": "latex", "page_idx": 3, "bbox": [120, 238, 241, 267], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 44, "type": "text", "text": "As can be seen, negative examples whose DSC is  $\\frac{\\gamma}{p_{i1}\\!+\\!\\gamma}$    , also contribute to the training. Addition- ally,  Milletari et al.  ( 2016 ) proposed to change the denominator to the square form for faster conver- gence, which leads to the following dice loss (DL): ", "page_idx": 3, "bbox": [71, 269.2459716796875, 291, 336.0464782714844], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 45, "type": "equation", "text": "\n$$\n\\mathrm{{DL}}=\\frac{1}{N}\\sum_{i}\\left[1-\\frac{2p_{i1}y_{i1}+\\gamma}{p_{i1}^{2}+y_{i1}^{2}+\\gamma}\\right]\n$$\n ", "text_format": "latex", "page_idx": 3, "bbox": [103, 344, 259, 377], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 46, "type": "text", "text": "Another version of DL is to directly compute set- level dice coefﬁcient instead of the sum of individ- ual dice coefﬁcient, which is easier for optimiza- tion: ", "page_idx": 3, "bbox": [71, 379.6189880371094, 291, 433.0064697265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 47, "type": "equation", "text": "\n$$\n\\mathrm{{DL}}=1-{\\frac{2\\sum_{i}p_{i1}y_{i1}+\\gamma}{\\sum_{i}p_{i1}^{2}+\\sum_{i}y_{i1}^{2}+\\gamma}}\n$$\n ", "text_format": "latex", "page_idx": 3, "bbox": [107, 433, 255, 465], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 48, "type": "text", "text": "Tversky index (TI), which can be thought as the approximation of the  $F_{\\beta}$   score, extends dice coefﬁ- cient to a more general case. Given two sets    $A$   and  $B$  , tversky index is computed as follows: ", "page_idx": 3, "bbox": [71, 474.3219909667969, 291, 527.7084350585938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 49, "type": "equation", "text": "\n$$\n\\mathrm{TI}={\\frac{|A\\cap B|}{|A\\cap B|+\\alpha|A\\backslash B|+\\beta|B\\backslash A|}}\n$$\n ", "text_format": "latex", "page_idx": 3, "bbox": [99, 530, 262, 560], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 50, "type": "text", "text": "Tversky index offers the ﬂexibility in controlling the tradeoff between false-negatives and false- positives. It degenerates to DSC if    $\\alpha=\\beta=0.5$  The Tversky loss (TL) is thus given as follows: ", "page_idx": 3, "bbox": [71, 563.64599609375, 291, 617.032470703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 51, "type": "equation", "text": "\n$$\n\\mathrm{{TL}}=\\frac{1}{N}\\sum_{i}\\left[1-\\frac{p_{i1}y_{i1}+\\gamma}{p_{i1}y_{i1}+\\alpha\\;p_{i1}y_{i0}+\\beta\\;p_{i0}y_{i1}+\\gamma}\\right]\n$$\n ", "text_format": "latex", "page_idx": 3, "bbox": [78, 620, 282, 647], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 52, "type": "text", "text": "3.4 Self-adjusting Dice Loss ", "text_level": 1, "page_idx": 3, "bbox": [71, 666, 210, 679], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 53, "type": "text", "text": "Consider a simple case where the dataset consists of only one example  $x_{i}$  , which is classiﬁed as posi- tive as long as    $p_{i1}$   is larger than 0.5. The computa- tion of  $F1$   score is actually as follows: ", "page_idx": 3, "bbox": [71, 683.2360229492188, 291, 736.6224365234375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 54, "type": "equation", "text": "\n$$\n\\mathrm{F}1(x_{i})=2\\,\\frac{\\mathbb{I}(p_{i1}>0.5)y_{i1}}{\\mathbb{I}(p_{i1}>0.5)+y_{i1}}\n$$\n ", "text_format": "latex", "page_idx": 3, "bbox": [111, 739, 250, 769], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 55, "type": "image", "page_idx": 3, "img_path": "layout_images/2020.acl-main.45_1.jpg", "img_caption": "Figure 1: An illustration of derivatives of the four losses. The derivative of DSC approaches zero right after    $p$   exceeds 0.5, and for the other losses, the deriva- tives reach 0 only if the probability is exactly 1, which means they will push    $p$   to 1 as much as possible. ", "bbox": [306, 72, 527, 289], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Derivatives\n\nV DL(y:\nV TL(3+0.5)\nVv Dpsc\n\n05\n\n0\n\n05\n\noO. 02 0.3 04 05 0.6 07 08 0.9\nProbability of the ground-truth label / p,\n", "vlm_text": "The image is a graph showing the derivatives of four different loss functions with respect to the probability of the ground-truth label (\\( \\bar{p_i} \\)). The four loss functions included are:\n\n1. **FL (Focal Loss, \\(\\gamma=1\\))** - represented by a blue line.\n2. **DL (Dice Loss, \\(\\gamma=1\\))** - represented by an orange line.\n3. **TL (Tversky Loss, \\(\\beta=0.5\\))** - represented by a yellow line.\n4. **DSC (Dice Similarity Coefficient)** - represented by a purple line.\n\nThe y-axis denotes the derivatives, while the x-axis shows the probability of the ground-truth label. The caption notes that the derivative of the Dice Similarity Coefficient approaches zero after the probability exceeds 0.5, whereas the derivatives of the other loss functions reach zero only when the probability is exactly 1, encouraging the probability to reach 1 as much as possible."}
{"layout": 56, "type": "text", "text": "Comparing Eq. 5  with Eq. 11 , we can see that Eq. 5 is actually a soft form of    $F1$  , using a continuous    $p$  rather than the binary  $\\mathbb{I}(p_{i1}>0.5)$  . This gap isn’t a big issue for balanced datasets, but is extremely detrimental if a big proportion of training examples are easy-negative ones: easy-negative examples can easily dominate training since their probabil- ities can be pushed to 0 fairly easily. Meanwhile, the model can hardly distinguish between hard- negative examples and positive ones, which has a huge negative effect on the ﬁnal F1 performance. ", "page_idx": 3, "bbox": [306, 300.5, 527, 447.7834777832031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 57, "type": "text", "text": "To address this issue, we propose to multiply the soft probability  $p$   with a decaying factor    $(1-p)$  , changing Eq. 11  to the following adaptive variant of DSC: ", "page_idx": 3, "bbox": [306, 455.87298583984375, 527, 509.25946044921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 58, "type": "equation", "text": "\n$$\n\\mathrm{DSC}(x_{i})=\\frac{2(1-p_{i1})p_{i1}\\cdot y_{i1}+\\gamma}{(1-p_{i1})p_{i1}+y_{i1}+\\gamma}\n$$\n ", "text_format": "latex", "page_idx": 3, "bbox": [327, 516, 488, 547], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 59, "type": "text", "text": "One can think    $\\left(1-p_{i1}\\right)$   as a weight associated with each example, which changes as training proceeds. The intuition of changing    $p_{i1}$   to    $(1-p_{i1})p_{i1}$   is to push down the weight of easy examples. For easy examples whose probability are approaching 0 or 1,    $(1-p_{i1})p_{i1}$   makes the model attach signiﬁcantly less focus to them. ", "page_idx": 3, "bbox": [306, 557, 527, 650.8994140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 60, "type": "text", "text": "A close look at Eq. 12  reveals that it actually mim- ics the idea of focal loss (FL for short) ( Lin et al. , 2017 ) for object detection in vision. Focal loss was proposed for one-stage object detector to han- dle foreground-background tradeoff encountered during training. It down-weights the loss assigned to well-classiﬁed examples by adding a    $(1-p)^{\\gamma}$  factor, leading the ﬁnal loss to be    $-(1-p)^{\\gamma}\\log p$  . ", "page_idx": 3, "bbox": [306, 658.989013671875, 527, 773.438720703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 61, "type": "table", "page_idx": 4, "img_path": "layout_images/2020.acl-main.45_2.jpg", "table_footnote": "Table 3: Experimental results for Chinese POS datasets including CTB5, CTB6 and UD1.4. ", "bbox": [72, 63, 524, 237], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "CTB5 CTB6 UD1.4\n\nModel Prec. Rec. Fl Prec. Rec. Fl Prec. Ree. Fl\nJoint-POS(Sig)(Shao et al., 2017) 93.68 94.47 94.07 - - 90.81 89.28 89.54 89.41\nJoint-POS(Ens)(Shao et al., 2017) 93.95 94.81 94.38 - - - 89.67 89.86 89.75\nLattice-LSTM(Zhang and Yang, 2018) 94.77 95.51 95.14 92.00 90.86 91.43 90.47 89.70 90.09\nBERT-Tagger(Devlin et al., 2018) 95.86 96.26 96.06 94.91 94.63 94.77 95.42 94.17 94.79\nBERT+FL 96.11 97.42 96.76 95.80 95.08 95.44 96.33 95.85 96.81\n\n(+0.70) (+0.67) (+2.02)\nBERT+DL 96.77 98.87 97.81 94.08 96.12 95.09 96.10 97.79 96.94\n\n(+1.75) (+0.32) (+2.15)\nBERT+DSC 97.10 98.75 97.92 96.29 96.85 96.57 96.24 97.73 96.98\n\n(+1.86) (+1.80) (+2.19)\n", "vlm_text": "This table presents the precision (Prec.), recall (Rec.), and F1 scores of various models across three datasets: CTB5, CTB6, and UD1.4. The models evaluated are:\n\n- Joint-POS(Sig) (Shao et al., 2017)\n- Joint-POS(Ens) (Shao et al., 2017)\n- Lattice-LSTM (Zhang and Yang, 2018)\n- BERT-Tagger (Devlin et al., 2018)\n- BERT+FL\n- BERT+DL\n- BERT+DSC\n\n### CTB5 Dataset\n- **Highest F1 Score:** BERT+DSC (97.92)\n\n### CTB6 Dataset\n- **Highest F1 Score:** BERT+DSC (96.57)\n\n### UD1.4 Dataset\n- **Highest F1 Score:** BERT+DSC (96.98)\n\nFor models BERT+FL, BERT+DL, and BERT+DSC, there are improvements indicated in parentheses alongside some of the F1 scores."}
{"layout": 62, "type": "table", "page_idx": 4, "img_path": "layout_images/2020.acl-main.45_3.jpg", "table_footnote": "Table 4: Experimental results for English POS datasets. ", "bbox": [70, 245, 296, 475], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "English WSJ\n\nModel Prec. Rec. Fl\nMeta BiLSTM(Bohnet et al., 2018) - - 98.23\nBERT-Tagger (Devlin et al., 2018) 99.21 98.36 98.86\nBERT-Tagger+FL 98.36 98.97 98.88\n(+0.02)\nBERT-Tagger+DL 99.34 98.22 98.91\n(+0.05)\nBERT-Tagger+DSC 99.41 98.93 99.38\n(+0.52)\nEnglish Tweets\nModel Prec. Rec. Fl\nFastTexttCNN+CRF(Godin, 2019) - - 91.78\nBERT-Tagger (Devlin et al., 2018) 92.33 91.98 92.34\nBERT-Tagger+FL 91.24 93.22 92.47\n(+0.13)\nBERT-Tagger+DL 91.44 92.88 92.52\n(+0.18)\nBERT-Tagger+DSC 92.87 93.54 92.58\n\n(+0.24)\n", "vlm_text": "The table shows the performance of different models on two datasets: English WSJ and English Tweets. The models are evaluated based on Precision (Prec.), Recall (Rec.), and F1 score.\n\n**English WSJ:**\n- **Meta BiLSTM** (Bohnet et al., 2018): F1 = 98.23\n- **BERT-Tagger** (Devlin et al., 2018): Prec. = 99.21, Rec. = 98.36, F1 = 98.86\n- **BERT-Tagger+FL**: Prec. = 98.36, Rec. = 98.97, F1 = 98.88 (+0.02)\n- **BERT-Tagger+DL**: Prec. = 99.34, Rec. = 98.22, F1 = 98.91 (+0.05)\n- **BERT-Tagger+DSC**: Prec. = 99.41, Rec. = 98.93, F1 = 99.38 (+0.52)\n\n**English Tweets:**\n- **FastText+CNN+CRF** (Godin, 2019): F1 = 91.78\n- **BERT-Tagger** (Devlin et al., 2018): Prec. = 92.33, Rec. = 91.98, F1 = 92.34\n- **BERT-Tagger+FL**: Prec. = 91.24, Rec. = 93.22, F1 = 92.47 (+0.13)\n- **BERT-Tagger+DL**: Prec. = 91.44, Rec. = 92.88, F1 = 92.52 (+0.18)\n- **BERT-Tagger+DSC**: Prec. = 92.87, Rec. = 93.54, F1 = 92.58 (+0.24)"}
{"layout": 63, "type": "text", "text": "In Table  2 , we summarize all the aforementioned losses. Figure  1  gives an explanation from the per- spective in derivative: The derivative of DSC ap- proaches zero right after    $p$   exceeds 0.5, which sug- gests the model attends less to examples once they are correctly classiﬁed. But for the other losses, the derivatives reach 0 only if the probability is exactly 1, which means they will push    $p$   to 1 as much as possible. ", "page_idx": 4, "bbox": [71, 494.09100341796875, 292, 614.5464477539062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 64, "type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 4, "bbox": [71, 633, 155, 646], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 65, "type": "text", "text": "We evaluated the proposed method on four NLP tasks, part-of-speech tagging, named entity recog- nition, machine reading comprehension and para- phrase identiﬁcation. Hyperparameters are tuned on the corresponding development set of each dataset. More experiment details including datasets and hyperparameters are shown in supplementary material. ", "page_idx": 4, "bbox": [71, 658.989013671875, 292, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 66, "type": "text", "text": "4.1 Part-of-Speech Tagging ", "text_level": 1, "page_idx": 4, "bbox": [306, 249, 442, 261], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 67, "type": "text", "text": "Settings Part-of-speech tagging (POS) is the task of assigning a part-of-speech label (e.g., noun, verb, adjective) to each word in a given text. In this paper, we choose BERT ( Devlin et al. ,  2018 ) as the back- bone and conduct experiments on three widely used Chinese POS datasets including Chinese Treebank ( Xue et al. ,  2005 )   $5.0/6.0$   and UD1.4 and English datasets including Wall Street Journal (WSJ) and the dataset proposed by  Ritter et al.  ( 2011 ). We re- port the span-level micro-averaged precision, recall and F1 for evaluation. ", "page_idx": 4, "bbox": [306, 269.4072570800781, 527, 417.0834655761719], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 68, "type": "text", "text": "Baselines We used the following baselines: ", "text_level": 1, "page_idx": 4, "bbox": [307, 436, 505, 448], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 69, "type": "text", "text": "•  Joint-POS:  Shao et al.  ( 2017 ) jointly learns Chinese word segmentation and POS. •  Lattice-LSTM:  Zhang and Yang  ( 2018 ) con- structs a word-character lattice network. •  Bert-Tagger:  Devlin et al.  ( 2018 ) treats part- of-speech as a tagging task. ", "page_idx": 4, "bbox": [318, 464.00225830078125, 527, 544.6094360351562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 70, "type": "text", "text": "Results Table  3  presents the experimental results on Chinese datasets. As can be seen, the proposed DSC loss outperforms the best baseline results by a large margin, i.e., outperforming BERT-tagger by  $+1.86$   in terms of F1 score on CTB5,   $+1.80$   on CTB6 and   $+2.19$   on UD1.4. As far as we know, we are achieving SOTA performances on the three datasets. Focal loss only obtains a little perfor- mance improvement on CTB5 and CTB6, and the dice loss obtains huge gain on CTB5 but not on CTB6, which indicates the three losses are not con- sistently robust in solving the data imbalance issue. ", "page_idx": 4, "bbox": [306, 562.6062622070312, 527, 723.6964111328125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 71, "type": "text", "text": "Table  4  presents the experimental results for En- glish datasets. ", "page_idx": 4, "bbox": [306, 739.4719848632812, 527, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 72, "type": "table", "page_idx": 5, "img_path": "layout_images/2020.acl-main.45_4.jpg", "bbox": [75, 62, 289, 190], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "English CoNLL 2003\n\nModel Prec. Rec. FI\nELMo(Peters et al., 2018) - - 92.22\nCVT(Clark et al., 2018) - - 92.6\nBERT-Tagger(Devlin et al., 2018) - - 92.8\nBERT-MRC(Liet al., 2019) 92.33 94.61 93.04\nBERT-MRC+FL 93.13 93.09 93.11\n(+0.06)\nBERT-MRC+DL 93.22 93.12 93.17\n(+0.12)\nBERT-MRC+DSC 93.41 93.25 93.33\n\n(+0.29)\n", "vlm_text": "This table presents the performance of different models on the English CoNLL 2003 dataset. It compares models based on three metrics: Precision (Prec.), Recall (Rec.), and F1 Score (F1). The models listed are:\n\n1. **ELMo (Peters et al., 2018)**: F1 Score of 92.22\n2. **CVT (Clark et al., 2018)**: F1 Score of 92.6\n3. **BERT-Tagger (Devlin et al., 2018)**: F1 Score of 92.8\n4. **BERT-MRC (Li et al., 2019)**: Precision of 92.33, Recall of 94.61, F1 Score of 93.04\n\nAdditional BERT-MRC variations with enhancements show:\n\n- **BERT-MRC+FL**: Precision of 93.13, Recall of 93.09, F1 Score of 93.11 (+0.06 improvement over BERT-MRC)\n- **BERT-MRC+DL**: Precision of 93.22, Recall of 93.12, F1 Score of 93.17 (+0.12 improvement)\n- **BERT-MRC+DSC**: Precision of 93.41, Recall of 93.25, F1 Score of 93.33 (+0.29 improvement)\n\nThe table highlights how different model enhancements improve overall performance."}
{"layout": 73, "type": "table", "page_idx": 5, "img_path": "layout_images/2020.acl-main.45_5.jpg", "bbox": [74, 192, 289, 293.75], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "English OntoNotes 5.0\n\nModel Prec. Rec. Fl\nCVT (Clark et al., 2018) - - 88.8\nBERT-Tagger (Devlin et al., 2018) 90.01 88.35 89.16\nBERT-MRC(Li et al., 2019) 92.98 89.95 91.11\nBERT-MRC+FL 90.13 92.34 91.22\n\n(+0.11)\nBERT-MRC+DL 91.70 92.06 91.88\n\n(+0.77)\nBERT-MRC+DSC 91.59 92.56 92.07\n\n(+0.96)\n", "vlm_text": "The table presents a comparison of different models evaluated on the English OntoNotes 5.0 dataset. The models are assessed based on their Precision (Prec.), Recall (Rec.), and F1-score (F1) metrics. The specific models listed are:\n\n1. **CVT (Clark et al., 2018)**: This model has an F1-score of 88.8, but the Precision and Recall values are not available.\n2. **BERT-Tagger (Devlin et al., 2018)**: This model shows a Precision of 90.01, Recall of 88.35, and an F1-score of 89.16.\n3. **BERT-MRC (Li et al., 2019)**: This model achieves a Precision of 92.98, Recall of 89.95, and an F1-score of 91.11.\n4. **BERT-MRC+FL**: This variant of BERT-MRC achieves a slightly higher Precision of 90.13, Recall of 92.34, and an F1-score of 91.22, adding +0.11 to the base BERT-MRC model's F1-score.\n5. **BERT-MRC+DL**: This model has a Precision of 91.70, Recall of 92.06, and an F1-score of 91.88, with an improvement of +0.77 over the BERT-MRC model.\n6. **BERT-MRC+DSC**: This variant shows a Precision of 91.59, Recall of 92.56, and the highest F1-score of 92.07, indicating an improvement of +0.96 over BERT-MRC.\n\nThe table seems to compare the performance of various BERT-based and related models, particularly different versions of BERT-MRC with enhancements like FL, DL, and DSC, showing incremental improvements in F1-score."}
{"layout": 74, "type": "table", "page_idx": 5, "img_path": "layout_images/2020.acl-main.45_6.jpg", "table_footnote": "Table 5: Experimental results for NER task. ", "bbox": [73, 294.25, 289, 589], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "(+0.77)\n\nBERT-MRC+DSC 91.59 92.56 92.07\n(+0.96)\nChinese MSRA\nModel Prec. Rec. Fl\nLattice-LSTM (Zhang and Yang, 2018) 93.57 92.79 93.18\nBERT-Tagger (Devlin et al., 2018) 94.97 94.62 94.80\nGlyce-BERT (Wu et al., 2019) 95.57 95.51 95.54\nBERT-MRC(Liet al., 2019) 96.18 95.12 95.75\nBERT-MRC+FL 95.45 95.89 95.67\n(-0.08)\nBERT-MRC+DL 96.20 96.68 96.44\n(+0.69)\nBERT-MRC+DSC 96.67 96.77 96.72\n(+0.97)\nChinese OntoNotes 4.0\nModel Prec. Rec. Fl\nLattice-LSTM (Zhang and Yang, 2018) 76.35 71.56 73.88\nBERT-Tagger (Devlin et al., 2018) 78.01 80.35 79.16\nGlyce-BERT (Wu et al., 2019) 81.87 81.40 80.62\nBERT-MRC(Liet al., 2019) 82.98 81.25 82.11\nBERT-MRC+FL 83.63 82.97 83.30\n(+1.19)\nBERT-MRC+DL 83.97 84.05 84.01\n(+1.90)\nBERT-MRC+DSC 84.22 84.72 84.47\n\n(+2.36)\n", "vlm_text": "The table presents the performance of different models on two datasets: Chinese MSRA and Chinese OntoNotes 4.0. The performance is evaluated using three metrics: Precision (Prec.), Recall (Rec.), and F1-score (F1). Each dataset section lists the tested models, including Lattice-LSTM, BERT-Tagger, Glyce-BERT, BERT-MRC, BERT-MRC+FL, BERT-MRC+DL, and BERT-MRC+DSC. The evaluation results are displayed in terms of precision, recall, and F1-score, with changes in F1-score in parentheses to show improvements or declines compared to a specific baseline. The BERT-MRC+DSC model shows the highest F1-scores in both datasets. The table includes references to original model papers, indicated by author names and publication years."}
{"layout": 75, "type": "text", "text": "4.2 Named Entity Recognition ", "text_level": 1, "page_idx": 5, "bbox": [72, 602, 221, 614], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 76, "type": "text", "text": "Settings Named entity recognition (NER) is the task of detecting the span and semantic category of entities within a chunk of text. Our implementation uses the current state-of-the-art model proposed by Li et al.  ( 2019 ) as the backbone, and changes the MLE loss to DSC loss. Datasets that we use in- clude OntoNotes4.0 ( Pradhan et al. ,  2011 ), MSRA ( Levow ,  2006 ), CoNLL2003 ( Sang and Meulder 2003 ) and OntoNotes5.0 ( Pradhan et al. ,  2013 ). We report span-level micro-averaged precision, recall and F1. ", "page_idx": 5, "bbox": [72, 618.3552856445312, 290, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 77, "type": "text", "text": "Baselines We use the following baselines: ", "page_idx": 5, "bbox": [306, 63.29429244995117, 499.4490661621094, 77.48703002929688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 78, "type": "text", "text": "•  ELMo:  a tagging model with pretraining from  Peters et al.  ( 2018 ). •  Lattice-LSTM:  Zhang and Yang  ( 2018 ) con- structs a word-character lattice, only used in Chinese datasets. •  CVT:  Clark et al.  ( 2018 ) uses Cross-View Training(CVT) to improve the representations of a Bi-LSTM encoder. •  Bert-Tagger:  Devlin et al.  ( 2018 ) treats NER as a tagging task. • Glyce-BERT: Wu et al. (2019) combines Chi-nese glyph information with BERT pretrain- ing. •  BERT-MRC: Li et al.  ( 2019 ) formulates NER as a machine reading comprehension task and achieves SOTA results on Chinese and English NER benchmarks. ", "page_idx": 5, "bbox": [318, 84.17729187011719, 527, 312.3354797363281], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 79, "type": "text", "text": "Results Table  5  shows experimental results on NER datasets. DSC outperforms BERT-MRC( Li et al. ,  2019 ) by   $+0.29$  ,  $+0.96$  ,   $+0.97$   and  $+2.36$   re- spectively on CoNLL2003, OntoNotes5.0, MSRA and OntoNotes4.0. As far as we are concerned, we are setting new SOTA performances on all of the four NER datasets. ", "page_idx": 5, "bbox": [306, 320.4302673339844, 527, 414.45147705078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 80, "type": "text", "text": "4.3 Machine Reading Comprehension ", "text_level": 1, "page_idx": 5, "bbox": [307, 425, 491, 437], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 81, "type": "text", "text": "Settings The task of machine reading compre- hension (MRC) ( Seo et al. ,  2016 ;  Wang et al. ,  2016 ; Wang and Jiang ,  2016 ;  Wang et al. ,  2016 ;  Shen et al. ,  2017 ;  Chen et al. ,  2017 ) predicts the an- swer span in the passage given a question and the passage. We followed the standard protocols in Seo et al.  ( 2016 ), in which the start and end in- dexes of answer are predicted. We report Extract Match (EM) as well as F1 score on validation set. We use three datasets on this task: SQuAD v1.1, SQuAD v2.0 ( Rajpurkar et al. ,  2016 ,  2018 ) and Quoref ( Dasigi et al. ,  2019 ). ", "page_idx": 5, "bbox": [306, 441.7022705078125, 527, 602.7914428710938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 82, "type": "text", "text": "Baselines We used the following baselines: ", "page_idx": 5, "bbox": [306, 610.8862915039062, 504.90362548828125, 625.0790405273438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 83, "type": "text", "text": "•  QANet:  Yu et al.  ( 2018b ) builds a model based on convolutions and self-attentions. Convolutions are used to model local inter- actions and self-attention are used to model global interactions. •  BERT:  Devlin et al.  ( 2018 ) scores each can- didate span and the maximum scoring span is used as a prediction. •  XLNet:  Yang et al.  ( 2019 ) proposes a gener- alized autoregressive pretraining method that ", "page_idx": 5, "bbox": [318, 631.769287109375, 527, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 84, "type": "table", "page_idx": 6, "img_path": "layout_images/2020.acl-main.45_7.jpg", "table_caption": "Table 6: Experimental results for MRC task. ", "bbox": [127, 61, 471, 269], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "SQuAD v1.1 SQuAD v2.0 QuoRef\nModel EM Fl EM Fl EM Fl\nQANet (Yu et al., 2018b) 73.6 82.7 - - 34.41 38.26\nBERT (Devlin et al., 2018) 84.1 90.9 78.7 81.9 58.44 64.95\nBERT+FL 84.67 91.25 78.92 82.20 60.78 66.19\n(+0.57) (40.35) (40.22) (40.30) (42.34) (41.24)\nBERT+DL 84.83 91.86 78.99 82.88 62.03 66.88\n(+0.73) (40.96) (40.29) (40.98) (43.59) (+1.93)\nBERT+DSC 85.34 91.97 79.02 82.95 62.44 67.52\n(41.24) (41.07) (40.32) (41.05) (44.00) (42.57)\nXLNet (Yang et al., 2019) 88.95 94.52 86.12 88.79 64.52 71.49\nXLNet+FL 88.90 94.55 87.04 89.32 65.19 72.34\n(-0.05) (+0.03) (40.92) (40.53) (40.67)  (+0.85)\nXLNet+DL 89.13 95.36 87.22 89.44 65.77 72.85\n(+0.18) (40.84) (41.10) (40.65) (41.25) — (+1.36)\nXLNet+DSC 89.79 95.77 87.65 89.51 65.98 72.90\n(+0.84) (41.25) (41.53) (40.72) (41.46) (41.41)\n", "vlm_text": "The table compares the performance of different models on various datasets for question answering tasks. The key metrics reported are Exact Match (EM) and F1 scores across SQuAD v1.1, SQuAD v2.0, and QuoRef datasets. Each model is evaluated alone and with enhancements (FL, DL, DSC).\n\nHere's a breakdown:\n\n- **Models Evaluated**:\n  - QANet (Yu et al., 2018b)\n  - BERT (Devlin et al., 2018) with variants:\n    - BERT+FL\n    - BERT+DL\n    - BERT+DSC\n  - XLNet (Yang et al., 2019) with variants:\n    - XLNet+FL\n    - XLNet+DL\n    - XLNet+DSC\n\n- **Datasets & Metrics**:\n  - **SQuAD v1.1**: Measures EM and F1 scores. EM indicates exact matches between the predicted and gold answers, while F1 considers the overlap.\n  - **SQuAD v2.0**: Includes questions that do not have an answer, evaluating model robustness to predict unanswerable questions.\n  - **QuoRef**: Another dataset for EM and F1 score evaluations.\n\n- **Performance Summary**:\n  - **BERT** and its variants show improvements with FL, DL, DSC enhancements, providing small incremental gains in EM and F1. Notably, BERT+DSC achieves the highest scores among BERT variants.\n  - **XLNet** itself performs better than BERT on all datasets and metrics. Its enhancements (FL, DL, DSC) further improve performance slightly, with XLNet+DSC achieving the highest scores overall.\n  - The improved scores due to the enhancements are shown in parentheses as differences over the base model's scores.\n\nOverall, the table highlights that while baseline BERT and XLNet models are strong performers in question answering, applying additional techniques (FL, DL, DSC) can bring about further improvements."}
{"layout": 85, "type": "table", "page_idx": 6, "img_path": "layout_images/2020.acl-main.45_8.jpg", "table_footnote": "Table 7: Experimental results for PI task. ", "bbox": [86, 278, 276, 475], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "MRPC = QQP\nModel Fl Fl\nBERT (Devlin et al., 2018) 88.0 91.3\nBERT+FL 88.43 91.86\n(+0.43)  (+0.56)\nBERT+DL 88.71 91.92\n(40.71)  (+0.62)\nBERT+DSC 88.92 92.11\n(+0.92)  (+0.81)\nXLNet (Yang et al., 2019) 89.2 91.8\nXLNet+FL 89.25 92.31\n(+0.05)  (+0.51)\nXLNet+DL 89.33 92.39\n(+0.13)  (+0.59)\nXLNet+DSC 89.78 92.60\n(+0.58) — (+0.79)\n\n", "vlm_text": "The table presents F1 scores for different models on the MRPC and QQP datasets. Here's the breakdown:\n\n- **Models**: Variants of BERT and XLNet\n- **Metrics**: F1 scores for MRPC and QQP\n- **Baseline Models**:\n  - **BERT**: MRPC F1 = 88.0, QQP F1 = 91.3\n  - **XLNet**: MRPC F1 = 89.2, QQP F1 = 91.8\n\n- **Variations**:\n  - **+FL**: Small improvement in both datasets for BERT and XLNet.\n  - **+DL**: Further improvement compared to +FL.\n  - **+DSC**: Highest scores in both datasets for both models, showing the most significant improvements.\n\nThe values in parentheses represent the increase in F1 scores compared to the baseline models."}
{"layout": 86, "type": "text", "text": "enables learning bidirectional contexts. ", "page_idx": 6, "bbox": [93.81800079345703, 487.64599609375, 264, 500.7914733886719], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 87, "type": "text", "text": "Results Table  6  shows the experimental results for MRC task. With either BERT or XLNet, our proposed DSC loss obtains signiﬁcant performance boost on both EM and F1. For SQuADv1.1, our proposed method outperforms XLNet by  $+1.25$   in terms of F1 score and   $+0.84$   in terms of EM. For SQuAD v2.0, the proposed method achieves 87.65 on EM and 89.51 on F1. On QuoRef, the pro- posed method surpasses XLNet by  $+1.46$   on EM and  $+1.41$   on F1. ", "page_idx": 6, "bbox": [72, 509.5582580566406, 291, 643.8194580078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 88, "type": "text", "text": "4.4 Paraphrase Identiﬁcation ", "text_level": 1, "page_idx": 6, "bbox": [71, 655, 216, 667], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 89, "type": "text", "text": "Settings Paraphrase identiﬁcation (PI) is the task of identifying whether two sentences have the same meaning or not. We conduct experiments on the two widely-used datasets: MRPC ( Dolan and Brockett ,  2005 ) and QQP. F1 score is reported for comparison. We use BERT ( Devlin et al. ,  2018 ) and XLNet ( Yang et al. ,  2019 ) as baselines. ", "page_idx": 6, "bbox": [72, 672.0103149414062, 291, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 90, "type": "text", "text": "Results Table  7  shows the results. We ﬁnd that replacing the training objective with DSC intro- duces performance boost for both settings,  $+0.58$  for MRPC and   $+0.73$   for QQP. ", "page_idx": 6, "bbox": [307, 279.5862731933594, 527, 333.365478515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 91, "type": "text", "text": "5 Ablation Studies ", "text_level": 1, "page_idx": 6, "bbox": [306, 346, 411, 358], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 92, "type": "text", "text": "5.1 Datasets imbalanced to different extents ", "text_level": 1, "page_idx": 6, "bbox": [307, 369, 520, 380], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 93, "type": "text", "text": "It is interesting to see how differently the pro- posed objectives affect datasets imbalanced to dif- ferent extents. We use the paraphrase identiﬁcation dataset QQP (  $37\\%$   positive and   $63\\%$   negative) for studies. To construct datasets with different imbal- ance degrees, we used the original QQP dataset to construct synthetic training sets with different positive-negative ratios. Models are trained on these different synthetic sets and then test on the same original test set. ", "page_idx": 6, "bbox": [307, 386.28900146484375, 527, 520.157470703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 94, "type": "text", "text": "•  Original training set (original)  The inal dataset with 363,871 examples, with 37% be- ing positive and   $63\\%$   being negative •  Positive augmentation (  $^+$  positive) We created a balanced dataset by adding posi- tive examples. We ﬁrst randomly chose posi- tive training examples in the original training set as templates. Then we used Spacy 1   to re- trieve entity mentions and replace them with new ones by linking mentions to their corre- sponding entities in DBpedia. The augmented set contains 458,477 examples, with  $50\\%$   be- ing positive and   $50\\%$   being negative. •  Negative augmentation (  $\\cdot$   negative) We created a more imbalanced dataset. The size of the newly constructed training set and ", "page_idx": 6, "bbox": [318, 528.5632934570312, 527, 743.3074340820312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 95, "type": "table", "page_idx": 7, "img_path": "layout_images/2020.acl-main.45_9.jpg", "table_caption": "Table 8: The effect of different data augmentation ways for QQP in terms of F1-score. ", "bbox": [104, 61, 493, 145], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "original + positive + negative - negative + positive & negative\nBERT 91.3 92.27 90.08 89.73 93.14\nBERT+FL 91.86(+0.56) 92.64(4+0.37) —90.61(+0.53) — 90.79(+1.06) 93.45(+0.31)\nBERT+DL 91.92(+0.62) 92.87(+0.60) 90.22(+0.14) — 90.49(+0.76) 93.52(+0.38)\nBERT+DSC = 92.11(+0.81) —92.92(+0.65) — 90.78(+0.70) — 90.80(+1.07) 93.63(+0.49)\n", "vlm_text": "This table presents the performance metrics of several variations of the BERT model under different conditions. The columns represent different scenarios or configurations, and the rows list different models or variations of BERT. Here’s a breakdown of the table:\n\n- **Columns**:\n  1. **Original**: Performance of the basic versions without any added effects.\n  2. **+ Positive**: Performance results when positive elements are added.\n  3. **+ Negative**: Performance outcomes when negative elements are introduced.\n  4. **- Negative**: Performance when negative elements are removed.\n  5. **+ Positive & Negative**: Performance with both positive and negative elements added.\n\n- **Rows**:\n  1. **BERT**: Shows baseline performance for each of the configurations.\n  2. **BERT+FL**: Performance of BERT with feature labeled \"FL\".\n  3. **BERT+DL**: Performance of BERT with a modification labeled \"DL\".\n  4. **BERT+DSC**: Performance of BERT with an enhancement labeled \"DSC\".\n\nEach cell contains a numerical value representing the model's performance, presumably as a percentage, and the additional value in parentheses indicates the difference or gain as compared to the baseline BERT model under the same column condition."}
{"layout": 96, "type": "text", "text": "the data augmented technique are exactly the same as  +negative , except that we chose neg- ative training examples as templates. The aug- mented training set contains 458,477 exam- ples, with  $21\\%$   being positive and  $79\\%$   being negative. ", "page_idx": 7, "bbox": [93, 156.8780059814453, 292, 237.09249877929688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 97, "type": "text", "text": " Negative downsampling (- negative) ", "text_level": 1, "page_idx": 7, "bbox": [82, 239, 261, 250], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 98, "type": "text", "text": "We down-sampled negative examples in the original training set to get a balanced training set. The down-sampled set contains 269,165 examples, with  $50\\%$   being positive and  $50\\%$  being negative.  Posit e and negative augmentation (  $\\cdot$   pos- itive & +negative) We augmented the original training data with additional positive and negative examples with the data distribution staying the same. The augmented dataset contains 458,477 ex- amples, with  $50\\%$   being positive and   $50\\%$   be- ing negative. ", "page_idx": 7, "bbox": [88.83655548095703, 250.7740020751953, 292, 424.8854675292969], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 99, "type": "text", "text": "Results are shown in Table  8 . We ﬁrst look at the ﬁrst line, with all results obtained using the MLE objective. We can see that  $^+$   positive  outperforms original , and  +negative  underperforms  original . This is in line with our expectation since    $^+$   pos- itive  creates a balanced dataset while  +negative creates a more imbalanced dataset. Despite the fact that  -negative  creates a balanced dataset, the num- ber of training data decreases, resulting in inferior performances. ", "page_idx": 7, "bbox": [71, 433.6239929199219, 292, 567.493408203125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 100, "type": "text", "text": "DSC achieves the highest F1 score across all datasets. Specially, for  $^+$  positive , DSC achieves minor improvements   $(+0.05\\,\\mathrm{F}1)$  ) over DL. In con- trast, it signiﬁcantly outperforms DL for  +negative dataset. This is in line with our expectation since DSC helps more on more imbalanced datasets. The performance of FL and DL are not consistent across different datasets, while DSC consistently performs the best on all datasets. ", "page_idx": 7, "bbox": [71, 576.2319946289062, 292, 696.6874389648438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 101, "type": "text", "text": "5.2 Dice loss for accuracy-oriented tasks? ", "text_level": 1, "page_idx": 7, "bbox": [71, 708, 273, 720], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 102, "type": "text", "text": "We argue that the cross-entropy objective is ac- tually accuracy-oriented, whereas the proposed losses perform as a soft version of F1 score. To ", "page_idx": 7, "bbox": [71, 726.0579833984375, 292, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 103, "type": "table", "page_idx": 7, "img_path": "layout_images/2020.acl-main.45_10.jpg", "bbox": [351, 155, 482, 218], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "SST-2 SST-5\n\nModel Acc Acc\n\nBERT+CE 94.90 55.57\nBERT+DL 94.37 54.63\nBERT+DSC 94.84 55.19\n", "vlm_text": "The table presents accuracy (Acc) results for three different models on two sentiment analysis datasets, SST-2 and SST-5. The models evaluated are BERT+CE, BERT+DL, and BERT+DSC. The accuracy scores for each model on the SST-2 and SST-5 datasets are as follows:\n\n- BERT+CE: \n  - SST-2: 94.90\n  - SST-5: 55.57\n  \n- BERT+DL: \n  - SST-2: 94.37\n  - SST-5: 54.63\n  \n- BERT+DSC: \n  - SST-2: 94.84\n  - SST-5: 55.19\n\nBERT+CE achieves the highest accuracy for both datasets among the models listed."}
{"layout": 104, "type": "text", "text": "Table 9: The effect of DL and DSC on sentiment clas- siﬁcation tasks. BERT  $\\mathsf{\\ddot{\\Gamma}}+\\mathsf{C E}$   refers to ﬁne-tuning BERT and setting cross-entropy as the training objective. ", "page_idx": 7, "bbox": [306, 227.30755615234375, 527, 262.9844970703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 105, "type": "text", "text": "explore the effect of the dice loss on accuracy- oriented tasks such as text classiﬁcation, we con- duct experiments on the Stanford Sentiment Tree- bank (SST) datasets including SST-2 and SST-5. We ﬁne-tuned   $\\mathrm{BERT_{Large}}$   with different training ob- jectives. Experimental results for SST are shown in Table  9 . For SST-5, BERT with CE achieves 55.57 in terms of accuracy, while DL and DSC perform slightly worse (54.63 and 55.19, respec- tively). Similar phenomenon is observed for SST-2. These results verify that the proposed dice loss is not accuracy-oriented, and should not be used for accuracy-oriented tasks. ", "page_idx": 7, "bbox": [306, 275.04998779296875, 527, 449.16046142578125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 106, "type": "text", "text": "5.3 Hyper-parameters in Tversky Index ", "text_level": 1, "page_idx": 7, "bbox": [307, 461, 500, 472], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 107, "type": "text", "text": "As mentioned in Section  3.3 , Tversky index (TI) offers the ﬂexibility in controlling the tradeoff be- tween false-negatives and false-positives. In this subsection, we explore the effect of hyperparame- ters (i.e.,    $\\alpha$   and    $\\beta_{.}$  ) in TI to test how they manipu- late the tradeoff. We conduct experiments on the Chinese OntoNotes4.0 NER dataset and English QuoRef MRC dataset. Experimental results are shown in Table  10 . The highest F1 on Chinese OntoNotes4.0 is 84.67 when    $\\alpha$   is set to 0.6 while for QuoRef, the highest F1 is 68.44 when    $\\alpha$   is set to 0.4. In addition, we can observe that the performance varies a lot as  $\\alpha$   changes in distinct datasets, which shows that the hyperparameters  $\\alpha,\\beta$   acturally play an important role in TI. ", "page_idx": 7, "bbox": [306, 477.8659973144531, 527, 678.804443359375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 108, "type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 7, "bbox": [306, 690, 383, 703], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 109, "type": "text", "text": "In this paper, we propose the dice-based loss to narrow down the gap between training objective and evaluation metrics (F1 score). Experimental results show that the proposed loss function help ", "page_idx": 7, "bbox": [306, 712.64501953125, 527, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 110, "type": "table", "page_idx": 8, "img_path": "layout_images/2020.acl-main.45_11.jpg", "bbox": [81, 61, 279, 169], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Chinese Onto4.0 | English QuoRef\n\nWoe Wn WW Wy\nBe Seo Vlas ©\n\neeeegeegegngee8\nCaANAMRWNHH\n\n80.13 63.23\n81.17 63.45\n84.22 65.88\n84.52 68.44\n84.47 67.52\n84.67 66.35\n81.81 65.09\n80.97 64.13\n80.21 64.84\n", "vlm_text": "The table presents values across two datasets, \"Chinese Onto4.0\" and \"English QuoRef,\" for various values of a parameter denoted as \\(\\alpha\\). It comprises three columns: the first column lists the \\(\\alpha\\) values, and the subsequent columns display the corresponding numerical values for the \"Chinese Onto4.0\" and \"English QuoRef\" datasets. Each row correlates a specific \\(\\alpha\\) value with its respective results from the two datasets.\n\nHere’s a breakdown of the table's data:\n\n- **For \\(\\alpha = 0.1\\):** \n  - Chinese Onto4.0: 80.13\n  - English QuoRef: 63.23\n- **For \\(\\alpha = 0.2\\):** \n  - Chinese Onto4.0: 81.17\n  - English QuoRef: 63.45\n- **For \\(\\alpha = 0.3\\):** \n  - Chinese Onto4.0: 84.22\n  - English QuoRef: 65.88\n- **For \\(\\alpha = 0.4\\):** \n  - Chinese Onto4.0: 84.52\n  - English QuoRef: 68.44 (highlighted in bold)\n- **For \\(\\alpha = 0.5\\):** \n  - Chinese Onto4.0: 84.47\n  - English QuoRef: 67.52\n- **For \\(\\alpha = 0.6\\):** \n  - Chinese Onto4.0: 84.67 (highlighted in bold)\n  - English QuoRef: 66.35\n- **For \\(\\alpha = 0.7\\):** \n  - Chinese Onto4.0: 81.81\n  - English QuoRef: 65.09\n- **For \\(\\alpha = 0.8\\):** \n  - Chinese Onto4.0: 80.97\n  - English QuoRef: 64.13\n- **For \\(\\alpha = 0.9\\):** \n  - Chinese Onto4.0: 80.21\n  - English QuoRef: 64.84\n\nThe bold values indicate the highest scores achieved for each respective dataset across different \\(\\alpha\\) values."}
{"layout": 111, "type": "text", "text": "Table 10: The effect of hyperparameters in Tversky In- dex. We set  $\\beta=1-\\alpha$   and thus we only list  $\\alpha$   here. ", "page_idx": 8, "bbox": [71, 177.55657958984375, 292, 201.3975067138672], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 112, "type": "text", "text": "to achieve signiﬁcant performance boost without changing model architectures. ", "page_idx": 8, "bbox": [71, 212.6750030517578, 292, 239.23348999023438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 113, "type": "text", "text": "Acknowledgement ", "text_level": 1, "page_idx": 8, "bbox": [72, 250, 167, 264], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 114, "type": "text", "text": "We thank all anonymous reviewers, as well as Qinghong Han, Wei Wu and Jiawei Wu for their comments and suggestions. The work is supported by the National Natural Science Foundation of China (NSFC No. 61625107 and 61751209). ", "page_idx": 8, "bbox": [71, 271.52001953125, 292, 338.3204650878906], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 115, "type": "text", "text": "References ", "text_level": 1, "page_idx": 8, "bbox": [71, 361, 128, 375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 116, "type": "text", "text": "Bernd Bohnet, Ryan T. McDonald, Gonc ¸alo Sim˜ oes, Daniel Andor, Emily Pitler, and Joshua Maynez. 2018. Morphosyntactic tagging with a meta-bilstm model over context sensitive token encodings. In  Proceed- ings of the 56th Annual Meeting of the Association for Computational Linguistics, ACL 2018, Melbourne, Australia, July 15-20, 2018, Volume 1: Long Papers , pages 2642–2652. ", "page_idx": 8, "bbox": [71, 381.1685791015625, 292, 469.9354248046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 117, "type": "text", "text": "Haw-Shiuan Chang, Erik G. Learned-Miller, and An- drew McCallum. 2017. Active bias: Training more ac- curate neural networks by emphasizing high variance samples. In  NIPS . ", "page_idx": 8, "bbox": [71, 476.18548583984375, 292, 521.06640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 118, "type": "text", "text": "N. V. Chawla, K. W. Bowyer, Lawrence O. Hall, and W. P. Kegelmeyer. 2002. Smote: Synthetic minority over-sampling technique.  J. Artif. Intell. Res. , 16:321– 357. ", "page_idx": 8, "bbox": [71, 527.3164672851562, 292, 572.1983642578125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 119, "type": "text", "text": "Danqi Chen, Adam Fisch, Jason Weston, and Antoine Bordes. 2017. Reading wikipedia to answer open- domain questions.  arXiv preprint arXiv:1704.00051 . ", "page_idx": 8, "bbox": [71, 578.4484252929688, 292, 612.370361328125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 120, "type": "text", "text": "Kean Chen, Jianguo Li, Weiyao Lin, John See, Ji Wang, Lingyu Duan, Zhibo Chen, Changwei He, and Junni Zou. 2019.  Towards accurate one-stage object detec- tion with ap-loss . In  IEEE Conference on Computer Vi- sion and Pattern Recognition, CVPR 2019, Long Beach, CA, USA, June 16-20, 2019 , pages 5119–5127. ", "page_idx": 8, "bbox": [71, 618.6204223632812, 292, 685.4203491210938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 121, "type": "text", "text": "Shijuan Chen, Haibo He, and Edwardo A. Garcia. 2010. Ramoboost: Ranked minority oversampling in boost- ing.  IEEE Transactions on Neural Networks , 21:1624– 1642. ", "page_idx": 8, "bbox": [71, 691.66943359375, 292, 736.5513916015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 122, "type": "text", "text": "Kevin Clark, Minh-Thang Luong, Christopher D. Man- ning, and Quoc V. Le. 2018. Semi-supervised sequence modeling with cross-view training. In  Proceedings of the 2018 Conference on Empirical Methods in Natural Language Procfessing, Brussels, Belgium, October 31 - November 4, 2018 , pages 1914–1925. ", "page_idx": 8, "bbox": [71, 742.8014526367188, 292, 765.765380859375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 123, "type": "text", "text": "", "page_idx": 8, "bbox": [306, 64.56146240234375, 527, 109.44335174560547], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 124, "type": "text", "text": "Pradeep Dasigi, Nelson F Liu, Ana Marasovic, Noah A Smith, and Matt Gardner. 2019. Quoref: A reading comprehension dataset with questions requiring coref- erential reasoning.  arXiv preprint arXiv:1908.05803 . ", "page_idx": 8, "bbox": [306, 116.138427734375, 527, 161.0203094482422], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 125, "type": "text", "text": "Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. 2018. Bert: Pre-training of deep bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805 . ", "page_idx": 8, "bbox": [306, 167.71539306640625, 527, 212.59727478027344], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 126, "type": "text", "text": "Lee R Dice. 1945. Measures of the amount of ecologic association between species.  Ecology , 26(3):297–302. ", "page_idx": 8, "bbox": [306, 219.2923583984375, 527, 242.2562713623047], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 127, "type": "text", "text": "William B. Dolan and Chris Brockett. 2005.  Automat- ically constructing a corpus of sentential paraphrases . In  Proceedings of the Third International Workshop on Paraphrasing (IWP2005) . ", "page_idx": 8, "bbox": [306, 248.95135498046875, 527, 293.832275390625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 128, "type": "text", "text": "Yang Fan, Fei Tian, Tao Qin, Xiuping Li, and Tie-Yan Liu. 2018. Learning to teach.  ArXiv , abs/1805.03643. ", "page_idx": 8, "bbox": [306, 300.52734375, 527, 323.49127197265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 129, "type": "text", "text": "Ross B. Girshick. 2015. Fast r-cnn. 2015 IEEE In- ternational Conference on Computer Vision (ICCV) , pages 1440–1448. ", "page_idx": 8, "bbox": [306, 330.18634033203125, 527, 364.1092529296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 130, "type": "text", "text": "Ross B. Girshick, Jeff Donahue, Trevor Darrell, and Jitendra Malik. 2013. Rich feature hierarchies for accurate object detection and semantic segmentation. 2014 IEEE Conference on Computer Vision and Pat- tern Recognition , pages 580–587. ", "page_idx": 8, "bbox": [306, 370.8043212890625, 527, 426.64520263671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 131, "type": "text", "text": "Fr´ ederic Godin. 2019.  Improving and Interpreting Neu- ral Networks for Word-Level Prediction Tasks in Natu- ral Language Processing . Ph.D. thesis, Ghent Univer- sity, Belgium. ", "page_idx": 8, "bbox": [306, 433.290283203125, 527, 478.22216796875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 132, "type": "text", "text": "Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. 2015. Deep residual learning for image recogni- tion.  2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR) , pages 770–778. ", "page_idx": 8, "bbox": [306, 484.917236328125, 527, 529.7991333007812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 133, "type": "text", "text": "Lu Jiang, Zhengyuan Zhou, Thomas Leung, Li-Jia Li, and Li Fei-Fei. 2017. Mentornet: Learning data-driven curriculum for very deep neural networks on corrupted labels. In  ICML . ", "page_idx": 8, "bbox": [306, 536.4942016601562, 527, 581.3751220703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 134, "type": "text", "text": "H. Kahn and A. W. Marshall. 1953. Methods of reduc- ing sample size in monte carlo computations.  Opera- tions Research , 1(5):263–278. ", "page_idx": 8, "bbox": [306, 588.0701904296875, 527, 621.9931030273438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 135, "type": "text", "text": "Anil Kanduri, Mohammad Hashem Haghbayan, Amir M. Rahmani, Muhammad Shaﬁque, Axel Jantsch, and Pasi Liljeberg. 2018. adboost: Thermal aware performance boosting through dark silicon patterning.  IEEE Trans. Computers , 67(8):1062–1077. ", "page_idx": 8, "bbox": [306, 628.6881713867188, 527, 684.5291137695312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 136, "type": "text", "text": "Angelos Katharopoulos and Franc ¸ois Fleuret. 2018. Not all samples are created equal: Deep learning with importance sampling. In  ICML . ", "page_idx": 8, "bbox": [306, 691.2241821289062, 527, 725.1470947265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 137, "type": "text", "text": "Tom´ aˇ s Koˇ cisk\\` y, Jonathan Schwarz, Phil Blunsom, Chris Dyer, Karl Moritz Hermann, G´ aabor Melis, and Edward Grefenstette. 2018. The narrativeqa reading comprehension challenge.  Transactions of the Associa- tion of Computational Linguistics , 6:317–328. ", "page_idx": 8, "bbox": [306, 731.7921752929688, 527, 765.7650756835938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 138, "type": "text", "text": "", "page_idx": 9, "bbox": [71, 64.56158447265625, 292, 87.52550506591797], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 139, "type": "text", "text": "Oldrich Kodym, Michal Spanel, and Adam Herout. 2018. Segmentation of head and neck organs at risk us- ing CNN with batch dice loss. In  Pattern Recognition - 40th German Conference, GCPR 2018, Stuttgart, Ger- many, October 9-12, 2018, Proceedings , pages 105– 114. ", "page_idx": 9, "bbox": [71, 94.59759521484375, 292, 161.39744567871094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 140, "type": "text", "text": "M. Pawan Kumar, Benjamin Packer, and Daphne Koller. 2010. Self-paced learning for latent variable models. In  Advances in Neural Information Process- ing Systems 23: 24th Annual Conference on Neural In- formation Processing Systems 2010. Proceedings of a meeting held 6-9 December 2010, Vancouver, British Columbia, Canada. , pages 1189–1197. ", "page_idx": 9, "bbox": [71, 168.46954345703125, 292, 246.22740173339844], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 141, "type": "text", "text": "Guillaume Lample, Miguel Ballesteros, Sandeep Sub- ramanian, Kazuya Kawakami, and Chris Dyer. 2016. Neural architectures for named entity recognition. arXiv preprint arXiv:1603.01360 . ", "page_idx": 9, "bbox": [71, 253.29949951171875, 292, 298.181396484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 142, "type": "text", "text": "Gina-Anne Levow. 2006.  The third international Chi- nese language processing bakeoff: Word segmentation and named entity recognition . In  Proceedings of the Fifth SIGHAN Workshop on Chinese Language Pro- cessing , pages 108–117, Sydney, Australia. Associa- tion for Computational Linguistics. ", "page_idx": 9, "bbox": [71, 305.25347900390625, 292, 372.0533447265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 143, "type": "text", "text": "H. Li, Z. Lin, X. Shen, J. Brandt, and G. Hua. 2015. A convolutional neural network cascade for face detec- tion . In  2015 IEEE Conference on Computer Vision and Pattern Recognition (CVPR) , pages 5325–5334. ", "page_idx": 9, "bbox": [71, 379.1253967285156, 292, 424.00634765625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 144, "type": "text", "text": "Xiaoya Li, Jingrong Feng, Yuxian Meng, Qinghong Han, Fei Wu, and Jiwei Li. 2019. A uniﬁed MRC framework for named entity recognition. CoRR , abs/1910.11476. ", "page_idx": 9, "bbox": [71, 431.0783996582031, 292, 475.9603271484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 145, "type": "text", "text": "Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and Piotr Doll´ ar. 2017. Focal loss for dense object detection. In  Proceedings of the IEEE international conference on computer vision , pages 2980–2988. ", "page_idx": 9, "bbox": [71, 483.0323791503906, 292, 527.914306640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 146, "type": "text", "text": "Xuezhe Ma and Eduard Hovy. 2016. End-to-end se- quence labeling via bi-directional lstm-cnns-crf.  arXiv preprint arXiv:1603.01354 . ", "page_idx": 9, "bbox": [71, 534.986328125, 292, 568.9093017578125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 147, "type": "text", "text": "Tomasz Malisiewicz, Abhinav Gupta, and Alexei A. Efros. 2011. Ensemble of exemplar-svms for object de- tection and beyond. In  IEEE International Conference on Computer Vision, ICCV 2011, Barcelona, Spain, November 6-13, 2011 , pages 89–96. ", "page_idx": 9, "bbox": [71, 575.9813232421875, 292, 631.8212890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 148, "type": "text", "text": "Bryan McCann, Nitish Shirish Keskar, Caiming Xiong, and Richard Socher. 2018. The natural language decathlon: Multitask learning as question answering. arXiv preprint arXiv:1806.08730 . ", "page_idx": 9, "bbox": [71, 638.893310546875, 292, 683.7752685546875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 149, "type": "text", "text": "Yuxian Meng, Muyu Li, Wei Wu, and Jiwei Li. 2019. Dsreg: Using distant supervision as a regularizer. arXiv preprint arXiv:1905.11658 . ", "page_idx": 9, "bbox": [71, 690.8473510742188, 292, 724.770263671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 150, "type": "text", "text": "Fausto Milletari, Nassir Navab, and Seyed-Ahmad Ah- madi. 2016. V-net: Fully convolutional neural net- works for volumetric medical image segmentation. In 2016 Fourth International Conference on 3D Vision (3DV) , pages 565–571. IEEE. ", "page_idx": 9, "bbox": [71, 731.8423461914062, 292, 765.7652587890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 151, "type": "text", "text": "", "page_idx": 9, "bbox": [306, 64.56134033203125, 527, 87.52526092529297], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 152, "type": "text", "text": "David Nadeau and Satoshi Sekine. 2007. A survey of named entity recognition and classiﬁcation.  Lingvisti- cae Investigationes , 30(1):3–26. ", "page_idx": 9, "bbox": [306, 93.684326171875, 527, 127.60723114013672], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 153, "type": "text", "text": "Tri Nguyen, Mir Rosenberg, Xia Song, Jianfeng Gao, Saurabh Tiwary, Rangan Majumder, and Li Deng. 2016. Ms marco: A human generated machine reading comprehension dataset. arXiv preprint arXiv:1611.09268 . ", "page_idx": 9, "bbox": [306, 133.76629638671875, 527, 189.60618591308594], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 154, "type": "text", "text": "Jiangmiao Pang, Kai Chen, Jianping Shi, Huajun Feng, Wanli Ouyang, and Dahua Lin. 2019. Libra R-CNN: to- wards balanced learning for object detection. In  IEEE Conference on Computer Vision and Pattern Recogni- tion, CVPR 2019, Long Beach, CA, USA, June 16-20, 2019 , pages 821–830. ", "page_idx": 9, "bbox": [306, 195.7652587890625, 527, 262.56512451171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 155, "type": "text", "text": "Matthew E Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke Zettlemoyer. 2018. Deep contextualized word repre- sentations.  arXiv preprint arXiv:1802.05365 . ", "page_idx": 9, "bbox": [306, 268.72320556640625, 527, 313.6051025390625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 156, "type": "text", "text": "Sameer Pradhan, Mitchell P. Marcus, Martha Palmer, Lance A. Ramshaw, Ralph M. Weischedel, and Ni- anwen Xue, editors. 2011. Proceedings of the Fif- teenth Conference on Computational Natural Lan- guage Learning: Shared Task . ACL. ", "page_idx": 9, "bbox": [306, 319.76416015625, 527, 375.60406494140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 157, "type": "text", "text": "Sameer Pradhan, Alessandro Moschitti, Nianwen Xue, Hwee Tou   $\\mathrm{Mg}$  , Anders Bj¨ orkelund, Olga Uryupina, Yuchen Zhang, and Zhi Zhong. 2013.  Towards robust linguistic analysis using OntoNotes . In  Proceedings of the Seventeenth Conference on Computational Nat- ural Language Learning , pages 143–152, Soﬁa, Bul- garia. Association for Computational Linguistics. ", "page_idx": 9, "bbox": [306, 381.76312255859375, 527, 459.52197265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 158, "type": "text", "text": "Pranav Rajpurkar, Robin Jia, and Percy Liang. 2018. Know what you don’t know: Unanswerable questions for squad.  arXiv preprint arXiv:1806.03822 . ", "page_idx": 9, "bbox": [306, 465.6800231933594, 527, 499.60296630859375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 159, "type": "text", "text": "Pranav Rajpurkar, Jian Zhang, Konstantin Lopyrev, and Percy Liang. 2016. Squad:   $100{,}000{+}$   questions for machine comprehension of text. arXiv preprint arXiv:1606.05250 . ", "page_idx": 9, "bbox": [306, 505.76202392578125, 527, 550.6439208984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 160, "type": "text", "text": "Shaoqing Ren, Kaiming He, Ross B. Girshick, and Jian Sun. 2015. Faster r-cnn: Towards real-time object de- tection with region proposal networks. IEEE Trans- actions on Pattern Analysis and Machine Intelligence , 39:1137–1149. ", "page_idx": 9, "bbox": [306, 556.802978515625, 527, 612.6429443359375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 161, "type": "text", "text": "Alan Ritter, Sam Clark, Mausam, and Oren Etzioni. 2011.  Named entity recognition in tweets: An exper- imental study . In  Proceedings of the 2011 Conference on Empirical Methods in Natural Language Process- ing, pages 1524–1534, Edinburgh, Scotland, UK. As-sociation for Computational Linguistics. ", "page_idx": 9, "bbox": [306, 618.802001953125, 527, 685.6008911132812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 162, "type": "text", "text": "Erik F Sang and Fien De Meulder. 2003. Introduction to the conll-2003 shared task: Language-independent named entity recognition.  arXiv preprint cs/0306050 . ", "page_idx": 9, "bbox": [306, 691.760009765625, 527, 725.6829223632812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 163, "type": "text", "text": "Erik F. Tjong Kim Sang and Fien De Meulder. 2003. Introduction to the conll-2003 shared task: Language- independent named entity recognition . In  Proceed- ings of the Seventh Conference on Natural Language Learning, CoNLL 2003, Held in cooperation with HLT- NAACL 2003, Edmonton, Canada, May 31 - June 1, 2003 , pages 142–147. ", "page_idx": 9, "bbox": [306, 731.8419799804688, 527, 765.7649536132812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 164, "type": "text", "text": "", "page_idx": 10, "bbox": [71, 64.56158447265625, 292, 109.44347381591797], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 165, "type": "text", "text": "Minjoon Seo, Aniruddha Kembhavi, Ali Farhadi, and Hannaneh Hajishirzi. 2016. Bidirectional attention ﬂow for machine comprehension. arXiv preprint arXiv:1611.01603 . ", "page_idx": 10, "bbox": [71, 116.257568359375, 292, 161.1394500732422], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 166, "type": "text", "text": "Reuben R. Shamir, Yuval Duchin, Jinyoung Kim, Guillermo Sapiro, and Noam Harel. 2019. Continuous dice coefﬁcient: a method for evaluating probabilistic segmentations.  CoRR , abs/1906.11031. ", "page_idx": 10, "bbox": [71, 167.9525146484375, 292, 212.8343963623047], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 167, "type": "text", "text": "Yan Shao, Christian Hardmeier, J¨ org Tiedemann, and Joakim Nivre. 2017. Character-based joint segmenta- tion and pos tagging for chinese using bidirectional rnn- crf.  arXiv preprint arXiv:1704.01314 . ", "page_idx": 10, "bbox": [71, 219.59844970703125, 292, 264.53033447265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 168, "type": "text", "text": "Chen Shen, Holger R. Roth, Hirohisa Oda, Masahiro Oda, Yuichiro Hayashi, Kazunari Misawa, and Ken- saku Mori. 2018. On the inﬂuence of dice loss func- tion in multi-class organ segmentation of abdominal CT using 3d fully convolutional networks. CoRR , abs/1801.05912. ", "page_idx": 10, "bbox": [71, 271.3433837890625, 292, 338.14324951171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 169, "type": "text", "text": "Yelong Shen, Po-Sen Huang, Jianfeng Gao, and Weizhu Chen. 2017. Reasonet: Learning to stop read- ing in machine comprehension. In  Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining , pages 1047– 1055. ACM. ", "page_idx": 10, "bbox": [71, 344.9573059082031, 292, 411.7562255859375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 170, "type": "text", "text": "Th A Sorensen. 1948. A method of establishing groups of equal amplitude in plant sociology based on similar- ity of species content and its application to analyses of the vegetation on danish commons.  Biol. Skar. , 5:1–34. ", "page_idx": 10, "bbox": [71, 418.5702819824219, 292, 463.45220947265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 171, "type": "text", "text": "Carole H. Sudre, Wenqi Li, Tom Vercauteren, S´ ebastien Ourselin, and M. Jorge Cardoso. 2017.  Gen- eralised dice overlap as a deep learning loss function for highly unbalanced segmentations . In  Deep Learn- ing in Medical Image Analysis and Multimodal Learn- ing for Clinical Decision Support - Third International Workshop, DLMIA 2017, and 7th International Work- shop, ML-CDS 2017, Held in Conjunction with MIC- CAI 2017, Qu´ ebec City, QC, Canada, September 14, 2017, Proceedings , pages 240–248. ", "page_idx": 10, "bbox": [71, 470.2652587890625, 292, 580.9010620117188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 172, "type": "text", "text": "Amos Tversky. 1977. Features of similarity.  Psycho- logical review , 84(4):327. ", "page_idx": 10, "bbox": [71, 587.714111328125, 292, 610.6780395507812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 173, "type": "text", "text": "Sergi Valverde, Mariano Cabezas, Eloy Roura, San- dra Gonz´ alez-Vill\\` a, Deborah Pareto, Joan C Vilanova, Llu´ ıs Rami´ o-Torrent\\` a,  Alex Rovira, Arnau Oliver, and Xavier Llad´ o. 2017. Improving automated multiple sclerosis lesion segmentation with a cascaded 3d con- volutional neural network approach. NeuroImage , 155:159–168. ", "page_idx": 10, "bbox": [71, 617.4921264648438, 292, 695.2500610351562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 174, "type": "text", "text": "Shuohang Wang and Jing Jiang. 2016. Machine com- prehension using match-lstm and answer pointer.  arXiv preprint arXiv:1608.07905 . ", "page_idx": 10, "bbox": [71, 702.0640869140625, 292, 735.987060546875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 175, "type": "text", "text": "Zhiguo Wang, Haitao Mi, Wael Hamza, and Radu Florian. 2016. Multi-perspective context match- ing for machine comprehension. arXiv preprint arXiv:1612.04211 . ", "page_idx": 10, "bbox": [71, 742.8011474609375, 292, 765.7650756835938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 176, "type": "text", "text": "", "page_idx": 10, "bbox": [306, 64.5611572265625, 527, 87.52507781982422], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 177, "type": "text", "text": "Wei Wu, Yuxian Meng, Qinghong Han, Muyu Li, Xi- aoya Li, Jie Mei, Ping Nie, Xiaofei Sun, and Jiwei Li. 2019. Glyce: Glyph-vectors for chinese character rep- resentations.  arXiv preprint arXiv:1901.10125 . ", "page_idx": 10, "bbox": [306, 93.96514892578125, 527, 138.84703063964844], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 178, "type": "text", "text": "Naiwen Xue, Fei Xia, Fudong Choiu, and Marta Palmer. 2005.  The penn chinese treebank: Phrase struc- ture annotation of a large corpus .  Natural Language Engineering , 11(2):207–238. ", "page_idx": 10, "bbox": [306, 145.287109375, 527, 190.1689910888672], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 179, "type": "text", "text": "Zhilin Yang, Zihang Dai, Yiming Yang, Jaime G. Car- bonell, Ruslan Salakhutdinov, and Quoc V. Le. 2019. Xlnet: Generalized autoregressive pretraining for lan- guage understanding .  CoRR , abs/1906.08237. ", "page_idx": 10, "bbox": [306, 196.60906982421875, 527, 241.48997497558594], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 180, "type": "text", "text": "Adams Wei Yu, David Dohan, Minh-Thang Luong, Rui Zhao, Kai Chen, Mohammad Norouzi, and Quoc V Le. 2018a. Qanet: Combining local convolution with global self-attention for reading comprehension.  arXiv preprint arXiv:1804.09541 . ", "page_idx": 10, "bbox": [306, 247.9300537109375, 527, 303.77093505859375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 181, "type": "text", "text": "Adams Wei Yu, David Dohan, Minh-Thang Luong, Rui Zhao, Kai Chen, Mohammad Norouzi, and Quoc V. Le. 2018b. Qanet: Combining local convolution with global self-attention for reading comprehension. In  6th International Conference on Learning Representations, ICLR 2018, Vancouver, BC, Canada, April 30 - May 3, 2018, Conference Track Proceedings . ", "page_idx": 10, "bbox": [306, 310.21099853515625, 527, 387.9698486328125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 182, "type": "text", "text": "Yue Zhang and Jie Yang. 2018. Chinese ner using lat- tice lstm.  arXiv preprint arXiv:1805.02023 . ", "page_idx": 10, "bbox": [306, 394.409912109375, 527, 417.37286376953125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 183, "type": "text", "text": "A Dataset Details ", "text_level": 1, "page_idx": 10, "bbox": [307, 429, 405, 441], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 184, "type": "text", "text": "A.1 Part-of-Speech Tagging ", "text_level": 1, "page_idx": 10, "bbox": [306, 451, 445, 463], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 185, "type": "text", "text": "Datasets We conduct experiments on three widely used benchmark, i.e., Chinese Treebank  $5.0^{2}/6.0^{3}$    and   $\\mathrm{{UD1.4^{4}}}$  . ", "page_idx": 10, "bbox": [306, 467.5986328125, 527, 507.9654846191406], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 186, "type": "text", "text": "•  CTB5  is a Chinese dataset for tagging and parsing, which contains 507,222 words, 824,983 characters and 18,782 sentences ex- tracted from newswire sources, including 698 articles from Xinhua (1994-1998), 55 articles from Information Services Department of HK- SAR (1997) and 132 articles from Sinorama Magazine (1996-1998 & 2000-2001). ", "page_idx": 10, "bbox": [318, 515.3273315429688, 527, 622.761474609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 187, "type": "text", "text": "•  CTB6  is an extension of CTB5, contain- ing 781,351 words, 1,285,149 characters and 28,295 sentences. ", "page_idx": 10, "bbox": [318, 630.123291015625, 527, 670.4894409179688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 188, "type": "text", "text": "•  UD  is the abbreviation of Universal Depen- dencies, which is a framework for consistent annotation of grammar (parts of speech, mor- phological features, and syntactic dependen- cies) across different human languages. In this work, we use UD1.4 for Chinese POS tagging. ", "page_idx": 10, "bbox": [318, 677.8512573242188, 527, 704.8024291992188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 189, "type": "text", "text": "", "page_idx": 11, "bbox": [93, 63.68701934814453, 292, 130.48745727539062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 190, "type": "text", "text": "A.2 Named Entity Recognition ", "text_level": 1, "page_idx": 11, "bbox": [71, 139, 224, 152], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 191, "type": "text", "text": "Datasets For the NER task, we consider both Chinese datasets, i.e., OntoNotes  $4.0^{5}$    and MSRA 6 , and English datasets, i.e., CoNLL2003   7   and OntoNotes  $;5.0^{8}$  . ", "page_idx": 11, "bbox": [72, 155.8972625732422, 292, 209.67648315429688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 192, "type": "text", "text": "•  CoNLL2003  is an English dataset with 4 en- tity types: Location, Organization, Person and Miscellaneous. We followed data processing protocols in ( Ma and Hovy ,  2016 ). ", "page_idx": 11, "bbox": [83, 216.3273162841797, 292, 270.1064758300781], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 193, "type": "text", "text": "•  English OntoNotes5.0  consists of texts from a wide variety of sources and contains 18 en- tity types. We use the standard train/dev/test split of CoNLL2012 shared task. ", "page_idx": 11, "bbox": [83, 276.7562561035156, 292, 330.5364685058594], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 194, "type": "text", "text": "•  Quoref  is a QA dataset which tests the coref- erential reasoning capability of reading com- prehension systems, containing 24K questions over 4.7K paragraphs from Wikipedia. ", "page_idx": 11, "bbox": [318, 63.29435348510742, 527, 117.07449340820312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 195, "type": "text", "text": "A.4 Paraphrase Identiﬁcation ", "text_level": 1, "page_idx": 11, "bbox": [306, 126, 454, 139], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 196, "type": "text", "text": "Datasets Experiments are conducted on two PI datasets:   $\\mathbf{M}\\mathbf{R}\\mathbf{P}\\mathbf{C}^{11}$    and   $\\mathbf{Q}\\mathbf{Q}\\mathbf{P}^{12}$  . ", "page_idx": 11, "bbox": [307, 143.12730407714844, 527, 170.07949829101562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 197, "type": "text", "text": "•  MRPC  is a corpus of sentence pairs automati- cally extracted from online news sources, with human annotations of whether the sentence pairs are semantically equivalent. The MRPC dataset has imbalanced classes (6800 pairs in total, and  $68\\%$   for positive,   $32\\%$   for negative). ", "page_idx": 11, "bbox": [318, 176.7292938232422, 527, 257.3364562988281], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 198, "type": "text", "text": "•  QQP  is a collection of question pairs from the community question-answering website Quora. The class distribution in QQP is also unbalanced (over 400,000 question pairs in total, and  $37\\%$   for positive,   $63\\%$   for negative). ", "page_idx": 11, "bbox": [318, 263.9862365722656, 527, 331.1794738769531], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 199, "type": "text", "text": "•  Chinese MSRA  performs as a Chinese bench- mark dataset containing 3 entity types. Data in MSRA is collected from news domain. Since the development set is not provided in the original MSRA dataset, we randomly split the training set into training and development splits by 9:1. We use the ofﬁcial test set for evaluation. ", "page_idx": 11, "bbox": [83, 337.1862487792969, 292, 444.6204833984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 200, "type": "text", "text": "•  Chinese OntoNotes4.0  is a Chinese dataset and consists of texts from news domain, which has 18 entity types. In this paper, we take the same data split as  Wu et al.  ( 2019 ) did. ", "page_idx": 11, "bbox": [83, 451.2712707519531, 292, 505.05047607421875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 201, "type": "text", "text": "A.3 Machine Reading Comprephension ", "text_level": 1, "page_idx": 11, "bbox": [71, 513, 265, 527], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 202, "type": "text", "text": "Datasets For MRC task, we use three datasets:  $\\mathrm{{SNuADv1.1/v2.0^{9}}}$    and Queref 10   datasets. ", "page_idx": 11, "bbox": [70, 530.4602661132812, 292, 557.4114379882812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 203, "type": "text", "text": "•  SQuAD v1.1 and SQuAD  ${\\bf v2.0}$   are the most widely used QA benchmarks. SQuAD1.1 is a collection of 100K crowdsourced question-answer pairs, and SQuAD2.0 ex- tends SQuAD1.1 allowing no short answer exists in the provided passage. ", "page_idx": 11, "bbox": [83, 564, 292, 644.66943359375], "page_size": [595.2760009765625, 841.8900146484375]}
