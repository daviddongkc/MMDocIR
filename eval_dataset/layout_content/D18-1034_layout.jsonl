{"layout": 0, "type": "text", "text": "Neural Cross-Lingual Named Entity Recognition with Minimal Resources ", "text_level": 1, "page_idx": 0, "bbox": [71, 67, 527, 87], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 1, "type": "text", "text": "Jiateng Xie,   Zhilin Yang, Graham Neubig, Noah A. Smith, ,   and Jaime Carbonell 1 ", "page_idx": 0, "bbox": [188.39300537109375, 94.968994140625, 410.3959045410156, 128.8087158203125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 2, "type": "text", "text": "1 Language Technologies Institute, Carnegie Mellon University 2 Paul G. Allen School of Computer Science & Engineering, University of Washington 3 Allen Institute for Artiﬁcial Intelligence { jiatengx,zhiliny,gneubig,jgc } @cs.cmu.edu , nasmith@cs.washington.edu ", "page_idx": 0, "bbox": [93.99397277832031, 127.63338470458984, 506.5427551269531, 197.3043975830078], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 3, "type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0, "bbox": [159, 223, 204, 236], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 4, "type": "text", "text": "For languages with no annotated resources, unsupervised transfer of natural language pro- cessing models such as named-entity recog- nition (NER) from resource-rich languages would be an appealing capability. However, differences in words and word order across languages make it a challenging problem. To improve mapping of lexical items across lan- guages, we propose a method that ﬁnds trans- lations based on bilingual word embeddings. To improve robustness to word order differ- ences, we propose to use self-attention, which allows for a degree of ﬂexibility with respect to word order. We demonstrate that these methods achieve state-of-the-art or competi- tive NER performance on commonly tested languages under a cross-lingual setting, with much lower resource requirements than past approaches. We also evaluate the challenges of applying these methods to Uyghur, a low- resource language. ", "page_idx": 0, "bbox": [89, 247.59454345703125, 273, 498.7033996582031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 5, "type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0, "bbox": [71, 511, 155, 524], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 6, "type": "text", "text": "Named entity recognition (NER), the task of de- tecting and classifying named entities from text into a few predeﬁned categories such as people, lo- cations or organizations, has seen the state-of-the- art greatly advanced by the introduction of neu- ral architectures ( Collobert et al. ,  2011 ;  Huang et al. ,  2015 ;  Chiu and Nichols ,  2016 ;  Lample et al. , 2016 ;  Yang et al. ,  2016 ;  Ma and Hovy ,  2016 ;  Pe- ters et al. ,  2017 ;  Liu et al. ,  2018 ;  Peters et al. , 2018 ). However, the success of these methods is highly dependent on a reasonably large amount of annotated training data, and thus it remains a chal- lenge to apply these models to languages with lim- ited amounts of labeled data. Cross-lingual NER attempts to address this challenge by transferring knowledge from a high-resource source language with abundant entity labels to a low-resource tar- get language with few or no labels. Speciﬁcally, in this paper we attempt to tackle the extreme sce- nario of  unsupervised transfer , where no labeled data is available in the target language. Within this paradigm, there are two major challenges to tackle: how to effectively perform lexical mapping between the languages, and how to address word order differences. ", "page_idx": 0, "bbox": [71, 532.7918701171875, 290, 735.6253051757812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 7, "type": "text", "text": "", "page_idx": 0, "bbox": [307, 223.4199981689453, 525, 358.5075378417969], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 8, "type": "text", "text": "To cope with the ﬁrst challenge of lexical map- ping, a number of methods use parallel corpora to project annotations between languages through word alignment ( Ehrmann et al. ,  2011 ;  Kim et al. , 2012 ;  Wang and Manning ,  2014 ;  Ni et al. ,  2017 ). Since parallel corpora may not be always avail- able, Mayhew et al.  ( 2017 ) proposed a “cheap translation” approach that uses a bilingual dictio- nary to perform word-level translation. The above approaches provide a reasonable proxy for the actual labeled training data, largely because the words that participate in entities can be translated relatively reliably given extensive parallel dictio- naries or corpora (e.g., with 1 million word pairs or sentences). Additionally, as a side beneﬁt of having explicitly translated words, models can di- rectly exploit features extracted from the surface forms (e.g. through character-level neural feature extractors), which has proven essential for high accuracy in the monolingual scenario ( Ma and Hovy ,  2016 ). However, these methods are largely predicated on the availability of large-scale paral- lel resources, and thus, their applicability to low- resource languages is limited. ", "page_idx": 0, "bbox": [307, 359.43505859375, 525, 684.2125854492188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 9, "type": "text", "text": "In contrast, it is also possible to learn lex- ical mappings through bilingual word embed- dings (BWE). These bilingual embeddings can be obtained by using a small dictionary to project two sets of embeddings into a consistent space ( Mikolov et al. ,  2013a ;  Faruqui and Dyer , 2014 ;  Artetxe et al. ,  2016 ;  Smith et al. ,  2017 ), or even in an entirely unsupervised manner using adversarial training or identical character strings ( Zhang et al. ,  2017 ;  Artetxe et al. ,  2017 ;  Lam- ple et al., 2018).Many approaches in the pasthave leveraged the shared embedding space for cross-lingual applications ( Guo et al. ,  2015 ;  Am- mar et al. ,  2016b ;  Zhang et al. ,  2016 ;  Fang and Cohn ,  2017 ), including NER ( Bharadwaj et al. , 2016 ;  Ni et al. ,  2017 ). The minimal dependency on parallel resources makes the embedding-based method much more suitable for low-resource lan- guages. However, since different languages have different linguistic properties, it is hard, if not im- possible, to align the two embedding spaces per- fectly (see Figure  1 ). Meanwhile, because sur- face forms are not available, character-level fea- tures cannot be used, resulting in reduced tagging accuracy (as demonstrated in our experiments). ", "page_idx": 0, "bbox": [307, 685.14013671875, 525, 766.0315551757812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 10, "type": "text", "text": "", "page_idx": 1, "bbox": [72, 63.68701934814453, 290, 320.7185974121094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 11, "type": "text", "text": "To address the above issues, we propose a new lexical mapping approach that combines the ad- vantages of both discrete dictionary-based meth- ods and continuous embedding-based methods. Speciﬁcally, we ﬁrst project embeddings of dif- ferent languages into the shared BWE space, then learn discrete word translations by looking for nearest neighbors in this projected space, and ﬁ- nally train a model on the translated data. This allows our method to inherit the beneﬁts of both embedding-based and dictionary-based methods: its resource requirements are low as in the former, but it suffers less from misalignment of the em- bedding spaces and has access to character-level information like the latter. ", "page_idx": 1, "bbox": [72, 325.0351257324219, 290, 527.86962890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 12, "type": "text", "text": "Turning to differences in word ordering, to our knowledge there are no methods that explic- itly deal with this problem in unsupervised cross- lingual transfer for NER. Our second contribu- tion is a method to alleviate this issue by incor- porating an order-invariant self-attention mech- anism ( Vaswani et al. ,  2017 ;  Lin et al. ,  2017 ) into our neural architecture. Self-attention al- lows re-ordering of information within a partic- ular encoded sequence, which makes it possible to account for word order differences between the source and the target languages. ", "page_idx": 1, "bbox": [72, 532.1862182617188, 290, 694.3726806640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 13, "type": "text", "text": "In our experiments, we start with models trained in English as the source language on the CoNLL 2002 and 2003 datasets and transfer them into Spanish, Dutch, and German as the target lan- guages. Our approach obtains new state-of-the- art cross-lingual results in Spanish and Dutch, and competitive results in German, even without a dictionary, completely removing the need for re- sources such as Wikipedia and parallel corpora. Next, we transfer English using the same approach into Uyghur, a truly low-resource language. With signiﬁcantly fewer cross-lingual resources, our ap- proach can still perform competitively with previ- ous best results. ", "page_idx": 1, "bbox": [72, 698.6892700195312, 290, 766.0316772460938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 14, "type": "text", "text": "", "page_idx": 1, "bbox": [305, 63.68726348876953, 525, 185.22677612304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 15, "type": "text", "text": "2 Approach ", "text_level": 1, "page_idx": 1, "bbox": [307, 195, 377, 209], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 16, "type": "text", "text": "We establish our problem setting ( § 2.1 ), then present our methods in detail ( § 2.2 ), and provide some additional motivation   $(\\S2.3)$  . ", "page_idx": 1, "bbox": [305, 216.3252716064453, 525, 256.5687561035156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 17, "type": "text", "text": "2.1 Problem Setting ", "text_level": 1, "page_idx": 1, "bbox": [307, 266, 408, 279], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 18, "type": "text", "text": "NER takes a sentence as the input and outputs a se- quence of labels corresponding to the named entity categories of the words in the sentence, such as lo- cation, organization, person, or none. In standard supervised NER, we are provided with a labeled corpus of sentences in the target language along with tags indicating which spans correspond to en- tities of each type. ", "page_idx": 1, "bbox": [305, 283.0682373046875, 525, 391.0577697753906], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 19, "type": "text", "text": "As noted in the introduction, we study the prob- lem of unsupervised cross-lingual NER: given la- beled training data only in a separate source lan- guage, we aim to learn a model that is able to per- form NER in the target language. This transfer can be performed using a variety of resources, in- cluding parallel corpora ( T¨ ackstr¨ om et al. ,  2012 ; Ni et al. ,  2017 ), Wikipedia ( Nothman et al. ,  2013 ), and large dictionaries ( Ni et al. ,  2017 ;  Mayhew et al. ,  2017 ). In this work, we limit ourselves to a setting where we have the following resources, making us comparable to other methods such as Mayhew et al.  ( 2017 ) and  Ni et al.  ( 2017 ):\n\n ", "page_idx": 1, "bbox": [305, 391.4613037109375, 525, 567.1978149414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 20, "type": "text", "text": "•  Labeled training data in the source language.\n\n •  Monolingual corpora in both source and target languages.\n\n •  A dictionary, either a small pre-existing one, or one induced by unsupervised methods. ", "page_idx": 1, "bbox": [305, 573.0553588867188, 525, 648.923828125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 21, "type": "text", "text": "2.2 Method ", "text_level": 1, "page_idx": 1, "bbox": [306, 659, 369, 671], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 22, "type": "text", "text": "Our method follows the process below:\n\n ", "page_idx": 1, "bbox": [305, 675.42236328125, 478.5268859863281, 688.5678100585938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 23, "type": "text", "text": "1. Train separate word embeddings using mono- lingual corpora using standard embedding train- ing methods ( § 2.2.1 ).\n\n 2. Project word embeddings in the two languages into a shared embedding space by optimizing ", "page_idx": 1, "bbox": [305, 694.4263305664062, 525, 766.03076171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 24, "type": "image", "page_idx": 2, "img_path": "layout_images/D18-1034_0.jpg", "img_caption": "Figure 1: Example of the result of our approach on Spanish-English words not included in the dictionary (em- beddings are reduced to 2 dimensions for visual clarity). We ﬁrst project word embeddings into a shared space, and then use the nearest neighbors for word translation. Notice that the word pairs are not perfectly aligned in the shared embedding space, but after word translation we obtain correct alignments. ", "bbox": [70, 73, 527, 244], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "06\n\no4\n\n02\n\n0.0\n\n6°90\niiss macs\npovitsades ogy\n—\nens\npen —\neam otaggenni BONY\ngua aa\n\nties\n\nProjection\n\n06\n\noa\n\n02\n\n0.0\n\n-0.4\n\ngray ered\n—. Nearest|Neighbor\nBRR\nSwoineMEne FEYLFize eorsie\negantiegs oiboblidodes\n“oa. -02~«00°~«~«S SS*C=«‘C SSC\n\nTranslation\neng esp\ndisorder trastorno\nrecognize | reconocer\ncollapse colapso\nangry enojado\n\n", "vlm_text": "The image illustrates a method for translating Spanish-English words that aren't included in a dictionary using word embeddings. The process involves projecting word embeddings into a shared space and then using the concept of nearest neighbors for translating words.\n\nOn the left side of the image, there is a scatter plot showing Spanish (red points) and English (blue points) words that are not perfectly aligned in a shared embedding space. Some examples include \"trastorno\" (Spanish) and \"disorder\" (English), or \"enojo\" (Spanish) and \"angry\" (English).\n\nAn arrow labeled \"Projection\" points to a second scatter plot on the right side of the image, where the words have been aligned more closely by finding their nearest neighbors. The pairs seem better aligned compared to the initial scatter plot.\n\nThere is also a table labeled \"Translation\" that provides example English-Spanish word pairs:\n- disorder - trastorno\n- recognize - reconocer\n- collapse - colapso\n- angry - enojado\n\nThe table indicates that the approach results in correct alignments despite the initial projection not perfectly aligning the word pairs in the shared embedding space."}
{"layout": 25, "type": "text", "text": "the word embedding alignment using the given dictionary ( 2.2.2 ).\n\n ", "page_idx": 2, "bbox": [82, 263.97406005859375, 291, 290.6685485839844], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 26, "type": "text", "text": "3. For each word in the source language training data, translate it by ﬁnding its nearest neighbor in the shared embedding space ( § 2.2.3 ).\n\n 4. Train an NER model using the translated words along with the named entity tags from the En- glish corpus ( § 2.2.4 ). ", "page_idx": 2, "bbox": [69, 296.194091796875, 291, 389.6138916015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 27, "type": "text", "text": "We consider each in detail. ", "page_idx": 2, "bbox": [69, 388.3841247558594, 189.5783233642578, 401.52960205078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 28, "type": "text", "text": "2.2.1 Learning Monolingual Embeddings ", "text_level": 1, "page_idx": 2, "bbox": [70, 411, 272, 423], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 29, "type": "text", "text": "Given text in the source and target language, we ﬁrst independently learn word embedding matri- ces    $X$   and    $Y$   in the source and target languages respectively. These embeddings can be learned on monolingual text in both languages with any of the myriad of word embedding methods ( Mikolov et al. ,  2013b ;  Pennington et al. ,  2014 ;  Bojanowski et al. ,  2017 ). ", "page_idx": 2, "bbox": [69, 427.0411376953125, 291, 535.0306396484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 30, "type": "text", "text": "2.2.2 Learning Bilingual Embeddings ", "text_level": 1, "page_idx": 2, "bbox": [70, 544, 255, 557], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 31, "type": "text", "text": "Next, we learn a cross-lingual projection of    $X$  and  $Y$   into a shared space. Assume we are given a dictionary    $\\{x_{i},y_{i}\\}_{i=1}^{D}$  , where    $x_{i}$   and    $y_{i}$   denote the embeddings of a word pair. Let    $\\begin{array}{r l}{X_{D}}&{{}=}\\end{array}$   $[x_{1},x_{2},\\cdot\\cdot\\cdot,x_{D}]^{\\top}$  and    $Y_{D}~=~[y_{1},y_{2},\\cdot\\cdot\\cdot,y_{D}]^{\\top}$  denote two embedding matrices consisting of word pairs from the dictionary. ", "page_idx": 2, "bbox": [69, 560, 291, 654.9816284179688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 32, "type": "text", "text": "Following previous work ( Zhang et al. ,  2016 ; Artetxe et al. ,  2016 ;  Smith et al. ,  2017 ), we opti- mize the following objective: ", "page_idx": 2, "bbox": [69, 655.7052001953125, 291, 695.9486083984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 33, "type": "equation", "text": "\n$$\n\\operatorname*{min}_{W}\\sum_{i=1}^{d}\\|W x_{i}-y_{i}\\|^{2}\\;\\;\\mathrm{s.t.}\\;\\;W W^{\\top}=I,\n$$\n ", "text_format": "latex", "page_idx": 2, "bbox": [91, 705, 269, 744], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 34, "type": "text", "text": "jective can be further simpliﬁed as ", "page_idx": 2, "bbox": [305, 263.97320556640625, 457.41778564453125, 277.1186828613281], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 35, "type": "equation", "text": "\n$$\n\\operatorname*{max}_{W}\\mathrm{Tr}(X_{D}W Y_{D}^{\\top})\\;\\;\\mathrm{s.t.}\\;\\;W W^{\\top}=I.\n$$\n ", "text_format": "latex", "page_idx": 2, "bbox": [332, 280, 499, 302], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 36, "type": "text", "text": "Here, the transformation matrix    $W$   is constrained to be orthogonal so that the dot product similarity of words is invariant with respect to the transfor- mation both within and across languages. ", "page_idx": 2, "bbox": [305, 305.54119873046875, 526, 359.3346862792969], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 37, "type": "text", "text": "To optimize the above objective (the Procrustes problem), we decompose the matrix    $Y_{D}^{\\top}X_{D}$   us- ing singular value decomposition. Let the results be    $Y_{D}^{\\top}\\bar{X}_{D}\\;=\\;U\\sum V^{\\top}$   P , then    $\\boldsymbol{W}\\,=\\,\\boldsymbol{U}\\boldsymbol{V}^{\\top}$  the exact solution. We deﬁne the similarity ma- trix between  X  Y  $Y$   to be  S  $S~=~Y W X^{\\top}~=~$   $Y U(X V)^{\\top}$  , where each column contains the co- sine similarity between source word  $x_{i}$   and all tar- get words  $y_{i}$  . We can then deﬁne    $X^{\\prime}=X V$  and  $Y^{\\prime}=Y U$  , which are    $X$   and    $Y$  transformed into a shared embedding space. ", "page_idx": 2, "bbox": [305, 359.73822021484375, 526, 508.375732421875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 38, "type": "text", "text": "To reﬁne the alignment in this shared space fur- ther, we iteratively perform a self-learning reﬁne- ment step    $\\textit{k}^{2}$    times by:\n\n ", "page_idx": 2, "bbox": [305, 508.77923583984375, 526, 549.022705078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 39, "type": "text", "text": "1. Using the aligned embeddings to generate a new dictionary that consists of mutual nearest neigh- bors obtained using the same metric as intro- duced below.\n\n 2. Solving the Procrustes problem based on the newly generated dictionary to get a new set of bilingual embeddings. ", "page_idx": 2, "bbox": [305, 554.8812866210938, 526, 652.9127197265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 40, "type": "text", "text": "The bilingual embeddings at the end of the    $k$  th step,    $X_{k}^{\\prime}$    and    $Y_{k}^{\\prime}$  , will be used to perform trans- lation. ", "page_idx": 2, "bbox": [305, 658.7713012695312, 526, 699.0147094726562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 41, "type": "text", "text": "2.2.3 Learning Word Translations ", "text_level": 1, "page_idx": 2, "bbox": [306, 707, 474, 719], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 42, "type": "text", "text": "To learn actual word translations, we next pro- ceed to perform nearest-neighbor search in the where    $W$   is a square parameter matrix. This ob- ", "page_idx": 2, "bbox": [305, 721.9072875976562, 526, 748.6016845703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 43, "type": "text", "text": "", "page_idx": 2, "bbox": [72.00006103515625, 752.8861694335938, 290.2637023925781, 766.0316162109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 44, "type": "text", "text": "common space. Instead of using a common dis- tance metric such as cosine similarity, we adopt the cross-domain similarity local scaling (CSLS) metric ( Lample et al. ,  2018 ), which is designed to address the hubness problem common to the shared embedding space ( Dinu and Baroni ,  2014 ). Speciﬁcally,", "page_idx": 3, "bbox": [71, 63.68701934814453, 290, 158.12753295898438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 45, "type": "equation", "text": "\n$$\n\\mathrm{CS}(x_{i},y_{j})=2\\cos(x_{i},y_{j})-r_{T}(x_{i})-r_{S}(y_{j})\n$$\n ", "text_format": "latex", "page_idx": 3, "bbox": [72, 168, 289, 184], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 46, "type": "text", "text": "where    $\\begin{array}{r l r}{r_{T}(x_{i})}&{{}\\!=\\!}&{{\\frac{1}{K}}\\sum_{y_{t}\\in N_{T}(x_{i})}\\cos(x_{i},y_{t})}\\end{array}$  P  de- ∈ notes the mean cosine similarity between    $x_{i}$   and its    $K$   neighbors    $y_{t}$  . Using this metric, we ﬁnd translations for each source word    $s$   by selecting target word  $\\hat{t_{s}}$   where  $\\hat{t_{s}}=\\arg\\operatorname*{max}_{t}\\mathrm{CSLS}(x_{s},y_{t})$  . ", "page_idx": 3, "bbox": [71, 188.4772186279297, 290, 269], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 47, "type": "text", "text": "2.2.4 Training the NER Model ", "text_level": 1, "page_idx": 3, "bbox": [71, 276, 222, 289], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 48, "type": "text", "text": "Finally, we translate the entire English NER train- ing data into the target language by taking English sentences    $S\\,=\\,s_{1},s_{2},...,s_{n}$   and translating them into target sentences  $\\hat{T}\\;=\\;t_{1},t_{2},...,t_{n}$  . The la- bel of each English word is copied to be the la- bel of the target word. We can then train an NER model directly using the translated data. Notably, because the model has access to the surface forms of the target sentences, it can use the character se- quences of the target language as part of its input. ", "page_idx": 3, "bbox": [71, 291.92108154296875, 290, 427.0096130371094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 49, "type": "text", "text": "During learning, all word embeddings are nor- malized to lie on the unit ball, allowing every training pair an equal contribution to the objective and improving word translation accuracy ( Artetxe et al. ,  2016 ). When training the NER model, how- ever, we do not normalize the word embeddings, because preliminary experiments showed the orig- inal unnormalized embeddings gave superior re- sults. We suspect this is due to frequency infor- mation conveyed by vector length, an important signal for NER. (Named entities appear less fre- quently in the monolingual corpus.) ", "page_idx": 3, "bbox": [71, 427.58013916015625, 290, 589.7666625976562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 50, "type": "text", "text": "2.3 Discussion ", "text_level": 1, "page_idx": 3, "bbox": [71, 600, 146, 612], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 51, "type": "text", "text": "Figure  1  shows an example of the embeddings and translations learned with our approach trained on Spanish and English data from the experiments (see  $\\S4$   for more details). As shown in the ﬁgure, there is usually a noticeable difference between the word embeddings of a word pair in different languages, which is inevitable because different languages have distinct traits and different mono- lingual data, and as a result it is intrinsically hard to learn a perfect alignment. This indicates that models trained directly on data using the source ", "page_idx": 3, "bbox": [71, 617.3942260742188, 290, 766.0316162109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 52, "type": "image", "page_idx": 3, "img_path": "layout_images/D18-1034_1.jpg", "img_caption": "Figure 2: Self-attentive Bi-LSTM-CRF Model ", "bbox": [320, 67, 518, 374], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "CRF\nLayer\n\n° ° B-Loc LLoc\n\nGlobal\nContext\n\nLSTM\nOutput\n\nMasked Self-attention\n\nWord\nEmbedding\n\nChar\nEmbedding\n\nChar\nBi-LSTM\n\n", "vlm_text": "The image depicts a detailed architecture of a Self-attentive Bi-LSTM-CRF model. This model is often used for tasks like Named Entity Recognition (NER) in Natural Language Processing. Here's a breakdown of the components visible in the image:\n\n1. **Char Bi-LSTM**: \n   - This layer processes character-level information of the words in the input sentence. It uses a Bidirectional LSTM (Bi-LSTM) to capture character-level features and create character embeddings for each word.\n\n2. **Char Embedding**: \n   - Represents character-level embeddings derived from the Char Bi-LSTM layer.\n\n3. **Word Embedding**: \n   - Represents word-level embeddings, capturing the semantic representation of each word in a vector form.\n\n4. **Word Bi-LSTM**: \n   - A Bidirectional LSTM layer processes the concatenation of char and word embeddings, allowing the model to consider context from both directions, which is useful for understanding the sentence’s overall meaning.\n\n5. **Masked Self-attention**: \n   - This component applies self-attention with a mask to focus on relevant parts of the input, which helps the model weigh different positions of the input, enhancing its understanding of relationships between words.\n\n6. **Global Context**: \n   - Captures the context of entire sentences beyond the individual representations gained from LSTM outputs, allowing for improved understanding and prediction.\n\n7. **CRF Layer**: \n   - The Conditional Random Field layer is used for sequence prediction, decoding the optimal label sequence for the input, which is valuable in structured prediction tasks like NER.\n   - It uses label sequences such as `O`, `B-LOC`, and `I-LOC` to tag parts of the sentence, where:\n     - `O` indicates tokens that are not named entities.\n     - `B-LOC` marks the beginning of a location entity.\n     - `I-LOC` marks the inside of a location entity.\n\nThe image illustrates the flow of data and transformations from raw input text (\"flights from Diego\") through embeddings, processing layers, attention mechanisms, and finally, sequence tagging by the CRF layer."}
{"layout": 53, "type": "text", "text": "embeddings may not generalize well to the slightly different embeddings of the target language. ", "page_idx": 3, "bbox": [307, 393.3909912109375, 525, 420.0854797363281], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 54, "type": "text", "text": "Instead of directly modeling the shared embed- ding space ( Guo et al. ,  2015 ;  Zhang et al. ,  2016 ; Fang and Cohn ,  2017 ;  Ni et al. ,  2017 ), we lever- age the shared embedding space for word transla- tion. As shown in Figure  1 , unaligned word pairs can still be translated correctly with our method, as the embeddings are still closer to the correct trans- lations than the closest incorrect one. ", "page_idx": 3, "bbox": [307, 420.8089904785156, 525, 528.7994384765625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 55, "type": "text", "text": "3 NER Model Architecture ", "text_level": 1, "page_idx": 3, "bbox": [306, 539, 454, 553], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 56, "type": "text", "text": "We describe the model we use to perform NER. We will ﬁrst describe the basic hierarchical neural CRF tagging model ( Lample et al. ,  2016 ;  Ma and Hovy ,  2016 ;  Yang et al. ,  2016 ), and introduce the self-attention mechanism that we propose to deal with divergence of word order. ", "page_idx": 3, "bbox": [307, 562.2369995117188, 525, 643.12744140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 57, "type": "text", "text": "3.1 Hierarchical Neural CRF ", "text_level": 1, "page_idx": 3, "bbox": [305, 653, 450, 666], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 58, "type": "text", "text": "The hierarchical CRF model consists of three components: a character-level neural network, ei- ther an RNN or a CNN, that allows the model to capture subword information, such as morpholog- ical variations and capitalization patterns; a word- level neural network, usually an RNN, that con- sumes word representations and produces context sensitive hidden representations for each word; and a linear-chain CRF layer that models the de- pendency between labels and performs inference. ", "page_idx": 3, "bbox": [307, 671.5910034179688, 525, 766.031494140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 59, "type": "text", "text": "", "page_idx": 4, "bbox": [71, 63.68701934814453, 291, 103.93148803710938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 60, "type": "text", "text": "In this paper, we closely follow the architecture proposed by Lample et al.  ( 2016 ), and use bi- directional LSTMs for both the character level and word level neural networks. Speciﬁcally, given an input sequence of words    $(w_{1},w_{2},...,w_{n})$  , and each word’s corresponding character sequence, the model ﬁrst produces a representation for each word,    $x_{i}$  , by concatenating its character rep- resentation with its word embedding. Subse- quently, the word representations of the input se- quence    $\\left(x_{1},x_{2},\\cdot\\cdot\\cdot,x_{n}\\right)$   are fed into a word level Bi-LSTM, which models the contextual depen- dency within each sentence and outputs a se- quence of context sensitive hidden representations  $\\left(h_{1},h_{2},\\cdot\\cdot\\cdot,h_{n}\\right)$  . A CRF layer is then applied on top of the word level LSTM and takes in as its input the sequence of hidden representations  $\\left(h_{1},h_{2},\\cdot\\cdot\\cdot,h_{n}\\right)$  , and deﬁnes the joint distribution of all possible output label sequences. The Viterbi algorithm is used during decoding. ", "page_idx": 4, "bbox": [71, 104.33502960205078, 291, 374.9156188964844], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 61, "type": "text", "text": "3.2 Self-Attention ", "text_level": 1, "page_idx": 4, "bbox": [72, 385, 162, 396], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 62, "type": "text", "text": "The training-time inputs to our model are in essence corrupted sentences from the target lan- guage (e.g., Spanish), which have a different or- der from natural target sentences. We propose to alleviate this problem by adding a self-attention layer ( Vaswani et al. ,  2017 ) on top of the word- level Bi-LSTM. Self-attention provides each word with a context feature vector based on  all  the words of a sentence. As the context vectors are obtained irrespective of the words’ positions in a sentence, at test time, the model is more likely to see vectors similar to those seen at training time, which we posit introduces a level of ﬂexibility with respect to the word order, and thus may al- low for better generalization. ", "page_idx": 4, "bbox": [71, 401.6021423339844, 291, 604.4366455078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 63, "type": "text", "text": "Let    $H\\;=\\;[h_{1},h_{2},\\cdot\\cdot\\cdot\\;,h_{n}]^{\\top}$  be a sequence of word-level hidden representations. We apply a single layer MLP on    $H$   to obtain the queries    $Q$  and keys    $K=\\operatorname{tanh}(H W+b)$  ere    $W\\in\\mathbb{R}^{d\\times d}$  is a  rameter matrix and  $b\\,\\in\\,\\mathbb{R}^{d}$   ∈   is a bias term, with  d  being the hidden state size. The output of attention layer is deﬁned as: ", "page_idx": 4, "bbox": [71, 604, 291, 699.2806396484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 64, "type": "equation", "text": "\n$$\n\\begin{array}{r l}&{H^{a}=\\mathrm{softmax}(Q K^{\\top})\\odot(E-I)H}\\\\ &{\\quad\\quad=[h_{1}^{a},h_{2}^{a},...,h_{3}^{a}]^{\\top}}\\end{array}\n$$\n ", "text_format": "latex", "page_idx": 4, "bbox": [99, 707, 262, 744], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 65, "type": "text", "text": "where  $I$   is an identity matrix and    $E$   is an all-one matrix. The term    $(E\\mathrm{~-~}I)$   serves as an atten- tion mask that prevents the weights from center- ing on the word itself, as we would like to provide each word with sentence level context. The out- puts from the self-attention layer are then concate- nated with the original hidden representations to form the ﬁnal inputs to the CRF layer, which are  $\\left([h_{1},h_{1}^{a}],[h_{2},h_{2}^{a}],...,[h_{3},h_{3}^{a}]\\right)$  . ", "page_idx": 4, "bbox": [71, 752.8861694335938, 291, 766.0316162109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 66, "type": "text", "text": "", "page_idx": 4, "bbox": [307, 63.68720245361328, 525, 172], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 67, "type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 4, "bbox": [307, 184, 390, 196], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 68, "type": "text", "text": "To examine the effectiveness of both of our pro- posed methods, we conduct four sets of experi- ments. First, we evaluate our model both with and without provided dictionaries on a benchmark NER dataset and compare with previous state-of- the-art results. Second, we compare our meth- ods against a recently proposed dictionary-based translation baseline ( Mayhew et al. ,  2017 ) by di- rectly applying our model on their translated data. Subsequently, we conduct an ablation study to fur- ther understand our proposed methods. Lastly, we apply our methods to a truly low-resource lan- guage, Uyghur. ", "page_idx": 4, "bbox": [307, 205.5362091064453, 525, 381.2717590332031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 69, "type": "text", "text": "4.1 Experimental Settings ", "text_level": 1, "page_idx": 4, "bbox": [307, 393, 436, 404], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 70, "type": "text", "text": "We evaluate our proposed methods on the bench- mark CoNLL 2002 and 2003 NER datasets ( Tjong Kim Sang ,  2002 ;  Tjong Kim Sang and De Meulder ,  2003 ), which contain 4 European lan- guages, English, German, Dutch and Spanish. For all experiments, we use English as the source lan- guage and translate its training data into the target language. We train a model on the translated data, and test it on the target language. For each exper- iment, we run our models 5 times using different seeds and report the mean and standard deviation, as suggested by  Reimers and Gurevych  ( 2017 ). ", "page_idx": 4, "bbox": [307, 410.12127685546875, 525, 572.3078002929688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 71, "type": "text", "text": "Word Embeddings  For all languages, we use two different embedding methods, fastText ( Bo- janowski et al. ,  2017 ) and GloVe ( Pennington et al. ,  2014 ), to perform word-embedding based translations and train the NER model, respectively. For fastText, we use the publicly available em- beddings trained on Wikipedia for all languages. For GloVe, we use the publicly available embed- dings pre-trained on Gigaword and Wikipedia for English. For Spanish, German and Dutch, we use Spanish Gigaword and Wikipedia, German WMT News Crawl data and Wikipedia, and Dutch Wikipedia, respectively, to train the GloVe word embeddings. We use a vocabulary size of 100,000 for both embedding methods. ", "page_idx": 4, "bbox": [307, 572.7106323242188, 525, 735.289794921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 72, "type": "text", "text": "", "page_idx": 5, "bbox": [69, 63.68701934814453, 290, 103.93148803710938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 73, "type": "text", "text": "Dictionary  We consider three different settings to obtain the seed dictionary, including two meth- ods that do not use parallel resources:\n\n ", "page_idx": 5, "bbox": [69, 103.94230651855469, 290, 144.57852172851562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 74, "type": "text", "text": "1. Use identical character strings shared between the two vocabularies as the seed dictionary.\n\n ", "page_idx": 5, "bbox": [69, 150.4370880126953, 290, 177.13156127929688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 75, "type": "text", "text": "2.  Lample et al.  ( 2018 )’s method of using adver- sarial learning to induce a mapping that aligns the two embedding spaces, and the mutual near- est neighbors in the shared space will be used as a dictionary. The learning procedure is formu- lated as a two player game, where a discrim- inator is trained to distinguish words from the two embedding spaces, and a linear mapping is trained to align the two embedding spaces and thus fool the discriminator.\n\n ", "page_idx": 5, "bbox": [69, 181.6601104736328, 290, 316.7486267089844], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 76, "type": "text", "text": "3. Use a provided dictionary. In our experiments, we use the ones provided by  Lample et al. ( 2018 ),   each of which contain 5,000 source words and about 10,000 entries. ", "page_idx": 5, "bbox": [69, 321.27716064453125, 290, 375.0696716308594], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 77, "type": "text", "text": "Translation  We follow the general procedure described in Section  2 , and replace each word from the English training data with its correspond- ing word in the target language. For out-of- vocabulary (OOV) words, we simply keep them as-is. We capitalize the resulting sentences fol- lowing the pattern of the original English words. Note that for German, simply following the En- glish capitalization pattern does not work, because all nouns in German are capitalized. To handle this problem, we count the number of times each word is capitalized in Wikipedia, and capitalize the word if the probability is greater than  0 . 6 . ", "page_idx": 5, "bbox": [69, 380.53546142578125, 290, 556.6636962890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 78, "type": "text", "text": "Network Parameters  For our experiments, we set the character embedding size to be 25, char- acter level LSTM hidden size to be 50, and word level LSTM hidden size to be 200. For OOV words, we initialize an unknown embedding by uniformly sampling from range  $\\textstyle[{\\sqrt{\\frac{3}{\\mathrm{emb}}}},+{\\sqrt{\\frac{3}{\\mathrm{emb}}}}]$  q q , where emb is the size of embedding, 100 in our case. We replace each number with 0 when used as input to the character level Bi-LSTM. ", "page_idx": 5, "bbox": [69, 556.6746215820312, 290, 683.3754272460938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 79, "type": "text", "text": "Network Training  We use SGD with momen- tum to train the NER model for 30 epochs, and select the best model on the target language de- velopment set. We choose the initial learning rate to be    $\\eta_{\\mathrm{0}}\\,=\\,0.015$  , and update it using a learning decay mechanism after each epoch,    $\\begin{array}{r}{\\eta_{t}\\ =\\ \\frac{\\eta_{0}}{1+\\rho t}}\\end{array}$  , where    $t$   is the number of completed epoch and  $\\rho~=~0.05$   is the decay rate. We use a batch size of 10 and evaluate the model per 150 batches within each epoch. We apply dropout on the in- puts to the word-level Bi-LSTM, the outputs of the word-level Bi-LSTM, and the outputs of the self-attention layer to prevent overﬁtting. The self- attention dropout rate is set to 0.5 when using our translated data, and 0.2 when using cheap- translation data. We use 0.5 for all other dropouts. The word embeddings are not ﬁne-tuned during training. ", "page_idx": 5, "bbox": [69, 683.3862915039062, 290, 737.5724487304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 80, "type": "text", "text": "", "page_idx": 5, "bbox": [306, 63.68701934814453, 525, 252.97256469726562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 81, "type": "text", "text": "4.2 Results ", "text_level": 1, "page_idx": 5, "bbox": [306, 264, 366, 275], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 82, "type": "text", "text": "Table  1  presents our results on transferring from English to three other languages, alongside results from previous studies. Here “BWET” (bilingual word embedding translation) denotes using the hi- erarchical neural CRF model trained on data trans- lated from English. As can be seen from the ta- ble, our methods outperform previous state-of-the- art results on Spanish and Dutch by a large mar- gin and perform competitively on German even without using any parallel resources. We achieve similar results using different seed dictionaries, and produce the best results when adding the self- attention mechanism to our model. ", "page_idx": 5, "bbox": [306, 280.92803955078125, 525, 456.6636047363281], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 83, "type": "text", "text": "Despite the good performance on Spanish and Dutch, our model does not outperform the previ- ous best result on German, and we speculate that there are a few reasons. First, German has rich morphology and contains many compound words, making the word embeddings less reliable. Our supervised result on German indicates the same problem, as it is about 8    $F_{1}$   points worse than Spanish and Dutch. Second, these difﬁculties be- come more pronounced in the cross-lingual set- ting, leading to a noisier embedding space align- ment, which lowers the quality of BWE-based translation. We believe that this is a problem with all methods using word embeddings. In such cases, more resource-intensive methods may be necessary. ", "page_idx": 5, "bbox": [306, 457.2951354980469, 525, 673.6785888671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 84, "type": "text", "text": "4.2.1 Comparison with Dictionary-Based Translation ", "text_level": 1, "page_idx": 5, "bbox": [306, 683, 506, 708], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 85, "type": "text", "text": "Table  1  also presents results of a comparison be- tween our proposed BWE translation method and the “cheap translation” baseline of ( Mayhew et al. , 2017 ). The size of the dictionaries used by both ", "page_idx": 5, "bbox": [306, 712.2381591796875, 525, 766.0316162109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 86, "type": "table", "page_idx": 6, "img_path": "layout_images/D18-1034_2.jpg", "bbox": [70, 62, 527, 219], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Model Spanish Dutch German Extra Resources\n*  Tackstrém et al. (2012) 59.30 58.40 40.40 parallel corpus\n*  Nothman et al. (2013) 61.0 64.00 55.80 Wikipedia\n* Tsai et al. (2016) 60.55 61.60 48.10 Wikipedia\n* Niet al. (2017) 65.10 65.40 58.50 Wikipedia, parallel corpus, 5K dict.\n*F Mayhew et al. (2017) 65.95 66.50 59.11 Wikipedia, 1M dict.\n* Mayhew et al. (2017) (only Eng. data) 51.82 53.94 50.96 1M dict.\nOur methods:\nBWET (id.c.) 71.14+0.60 | 70.244£1.18 | 57.03+0.25 | -\nBWET (id.c.) + self-att. 72.37 + 0.65 | 70.4041.16 | 57.76 +0.12 | —\nBWET (adv.) 70.544 0.85 | 70.1341.04 | 55.71+0.47 | -\nBWET (adv.) + self-att. 71.03 + 0.44 | 71.25+0.79 | 56.90+0.76 | -\nBWET 71.33 41.26 | 69.3940.53 | 56.95+1.20 | 10K dict.\nBWET + self-att. 71.67 £0.86 | 70.904 1.09 | 57.43+0.95 | 10K dict.\n* BWET on data from Mayhew et al. (2017) 66.53 41.12 | 69.2440.66 | 55.39+0.98 | 1M dict.\n* BWET + self-att. on data from Mayhew et al. (2017) | 66.90+ 0.65 | 69.31+0.49 | 55.98+0.65 | 1M dict.\n\nBie eee ah aL\n\nBen ah ae\n\nWo aes ioe\n\n=...\n\n", "vlm_text": "This table displays a comparative analysis of different models and methods for Spanish, Dutch, and German text processing or translation tasks, using specific extra resources. The table compares the performance of various models and methods, with scores given for each language (Spanish, Dutch, and German). The models listed include previous works by Täckström et al. (2012), Nothman et al. (2013), Tsai et al. (2016), Ni et al. (2017), and Mayhew et al. (2017), with some models marked with asterisks or other symbols possibly indicating special notes or conditions relevant to the study. \n\nThe \"Our methods\" section presents new methods abbreviated as \"BWET\" with variations or enhancements like \"self-att.\" The performance scores for these methods are shown with a mean and standard deviation. The listed extra resources detail the type of resources utilized by each method or model, such as parallel corpora, Wikipedia, different sizes of dictionaries (5K dict., 10K dict., 1M dict.), and annotated corpora. Some entries under \"Extra Resources\" have a dash (\"–\"), likely indicating no additional resources were used for those particular methods."}
{"layout": 87, "type": "text", "text": "Table 1: NER    $F_{1}$   scores.   ∗ Approaches that use more resources than ours (“Wikipedia” means Wikipedia is used not as a monolingual corpus, but to provide external knowledge). † Approaches that use multiple languages for transfer. “Only Eng. data” is the model used in  Mayhew et al.  ( 2017 ) trained on their data translated from English without using Wikipedia and other languages. The “data from  Mayhew et al.  ( 2017 )” is the same data translated from only English they used. “Id.c.” indicates using identical character strings between the two languages as the seed dictionary. “Adv.” indicates using adversarial training and mutual nearest neighbors to induce a seed dictionary. Our supervised results are obtained using models trained on annotated corpus from CoNLL. ", "page_idx": 6, "bbox": [72, 232.7315673828125, 525, 316.46759033203125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 88, "type": "text", "text": "approaches are given in the right-most column. Using our model on their translated data from En- glish outperforms the baseline scores produced by their models over all languages, a testament to the strength of our neural CRF baseline. The results produced by our model on their data indicate that our approach is effective, as we manage to outper- form their approaches on all three languages using much smaller dictionaries and even without dictio- naries. Also, we see that self-attention is effective when applied on their data, which also does not carry the correct word order. ", "page_idx": 6, "bbox": [72, 336.15606689453125, 290, 498.3426208496094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 89, "type": "text", "text": "4.2.2 Why Does Translation Work Better? ", "text_level": 1, "page_idx": 6, "bbox": [71, 509, 276, 521], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 90, "type": "text", "text": "In this section, we study the effects of differ- ent ways of using bilingual word embeddings and the resulting induced translations. As we pointed out previously, ﬁnding translations has two advan- tages: (1) the model can be trained on the exact points from the target embedding space, and (2) the model has access to the target language’s orig- inal character sequences. Here, we conduct abla- tion studies over these two variables. Speciﬁcally, we consider the following three variants. ", "page_idx": 6, "bbox": [72, 525.4781494140625, 290, 660.5665893554688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 91, "type": "text", "text": "•  Common space  This is the most common set- ting for using bilingual word embeddings, and has recently been applied in NER ( Ni et al. , 2017 ). In short, the source and target word em- beddings are cast into a common space, namely  $X^{\\prime}\\;=\\;X V$   and    $Y^{\\prime}\\;=\\;Y U$  , and the model is trained with the source side embedding and the source character sequence, and directly applied on the target side.\n\n ", "page_idx": 6, "bbox": [72, 666.6494750976562, 290, 734.3845825195312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 92, "type": "text", "text": "", "page_idx": 6, "bbox": [317, 336, 526, 389.948486328125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 93, "type": "text", "text": "•  Replace  In this setting, we replace each original word embedding    $x_{i}$   with its nearest neighbor    $y_{i}$  in the common space but do not perform trans- lation. This way, the model will be trained with target word embeddings and source-side char- acter sequences.\n\n ", "page_idx": 6, "bbox": [307, 414.4552917480469, 526, 495.739501953125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 94, "type": "text", "text": "•  Translation  This is our proposed approach, where the model is trained on both exact points in the target space and target language character sequences. ", "page_idx": 6, "bbox": [307, 520.2453002929688, 526, 574.4315185546875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 95, "type": "text", "text": "The three variants are compared in Table  2 . The “common space” variant performs the worst by a large margin, conﬁrming our hypothesis that discrepancy between the two embedding spaces harms the model’s ability to generalize. From the comparison between the “replace” and “transla- tion,” we observe that having access to the target language’s character sequence helps performance, especially for German, perhaps due in part to its capitalization patterns, which differ from English. In this case, we have to lower-case all the words for character inputs in order to prevent the model from overﬁtting the English capitalization pattern. ", "page_idx": 6, "bbox": [307, 590.2950439453125, 526, 766.031494140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 96, "type": "table", "page_idx": 7, "img_path": "layout_images/D18-1034_3.jpg", "table_caption": "Table 2: Comparison of different ways of using bilingual word embeddings, within our method (NER    $F_{1}$  ). ", "bbox": [85, 62, 511, 137], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Model | Spanish Dutch German\n\nCommon space | 65.40 +1.22 | 66.15+1.62 | 43.73 + 0.94\nReplace 68.21+1.22 | 69.3741.33 | 48.59 + 1.21\nTranslation 69.21 + 0.95 | 69.39 41.21 | 53.94+ 0.66\n\n", "vlm_text": "The table presents data comparing three models (Common space, Replace, and Translation) across three languages (Spanish, Dutch, and German). \n\nFor each language and model, performance is given as a value ± a margin, likely representing a mean and some measure of variability (e.g., standard deviation or standard error).\n\n- **Spanish:**\n  - Common space: 65.40 ± 1.22\n  - Replace: 68.21 ± 1.22\n  - Translation: 69.21 ± 0.95\n\n- **Dutch:**\n  - Common space: 66.15 ± 1.62\n  - Replace: 69.37 ± 1.33\n  - Translation: 69.39 ± 1.21\n\n- **German:**\n  - Common space: 43.73 ± 0.94\n  - Replace: 48.59 ± 1.21\n  - Translation: 53.94 ± 0.66\n\nThe Translation model appears to perform the best across all languages."}
{"layout": 97, "type": "table", "page_idx": 7, "img_path": "layout_images/D18-1034_4.jpg", "table_caption": "Uyghur Unsequestered Set Extra Resources ", "bbox": [72, 144, 528, 248], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Wikipedia, 100K dict.\n\n*T Mayhew et al. (2017) 51.32\n* Mayhew et al. (2017) (only Eng. data) 27.20 Wikipedia, 100K dict.\nBWET 25.73 + 0.89 5K dict.\nBWET + self-att. 26.38 + 0.34 5K dict.\n* BWET on data from Mayhew et al. (2017) 30.20 + 0.98 Wikipedia, 100K dict.\n* BWET + self-att. on data from Mayhew et al. (2017) | 30.68 + 0.45 Wikipedia, 100K dict.\n* Combined (see text) 31.61 + 0.46 Wikipedia, 100K dict., 5K dict.\n* Combined + self-att. 32.09 + 0.61 Wikipedia, 100K dict., 5K dict.\n\n", "vlm_text": "The table presents the results of different models evaluated on an \"Original Unsequestered Set,\" with the use of various extra resources. Here's a breakdown:\n\n### Columns:\n1. **Model**: Lists different model variants.\n2. **Original Unsequestered Set**: Results of the models on a specific test set, showing both the value and, where applicable, the uncertainty (e.g., \\( \\pm \\)).\n3. **Extra Resources**: Resources used alongside the model.\n\n### Row Details:\n\n- **Mayhew et al. (2017)**: Achieved a score of 51.32 using Wikipedia and a 100K dictionary.\n- **Mayhew et al. (2017) (only Eng. data)**: Achieved a score of 27.20 with the same resources.\n- **BWET**: Scored 25.73 ± 0.89 using a 5K dictionary.\n- **BWET + self-att.**: Scored 26.38 ± 0.34 with a 5K dictionary.\n- **BWET on data from Mayhew et al. (2017)**: Scored 30.20 ± 0.98 using Wikipedia and a 100K dictionary.\n- **BWET + self-att. on data from Mayhew et al. (2017)**: Scored 30.68 ± 0.45 with the same resources.\n- **Combined (see text)**: Scored 31.61 ± 0.46 using Wikipedia, a 100K dictionary, and a 5K dictionary.\n- **Combined + self-att.**: Scored 32.09 ± 0.61 using the same resources.\n\nThe table essentially compares the performance of different models and configurations using varying data resources."}
{"layout": 98, "type": "text", "text": "Table 3: NER    $F_{1}$   scores on Uyghur.   ∗ Approaches using language-speciﬁc features and resources (“Wikipedia” means Wikipedia is used not as a monolingual corpus, but to provide external knowledge). † Approaches that transfer from multiple languages and use language-speciﬁc techniques. ", "page_idx": 7, "bbox": [72, 255.610595703125, 525, 291.52655029296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 99, "type": "text", "text": "4.3 Case Study: Uyghur ", "text_level": 1, "page_idx": 7, "bbox": [71, 306, 192, 318], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 100, "type": "text", "text": "In this section, we directly apply our approach to Uyghur, a truly low-resource language with very limited monolingual and parallel resources. We test our model on 199 annotated evaluation documents from the DARPA LORELEI program (the “unsequestered set”) and compare with previ- ously reported results in the cross-lingual setting by  Mayhew et al.  ( 2017 ). Similar to our previous experiments, we transfer from English, use fast- Text embeddings trained on Common Crawl and Wikipedia 6   and a provided dictionary to perform translation, and use GloVe trained on a monolin- gual corpus that has 30 million tokens to perform NER. Results are presented in Table  3 . ", "page_idx": 7, "bbox": [71, 327.0360107421875, 290, 516.321533203125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 101, "type": "text", "text": "Our method performs competitively, consid- ering that we use a much smaller dictionary than  Mayhew et al.  ( 2017 ) and no knowledge from Wikipedia in Uyghur. Our best results come from a combined approach: using word embeddings to translate words that are not covered by  Mayhew et al.  ( 2017 )’s dictionary (last line of Table  3 ). Note that for the CoNLL languages, Mayhew et al.  ( 2017 ) used Wikipedia for the Wikiﬁer fea- tures ( Tsai et al. ,  2016 ), while for Uyghur they used it for translating named entities, which is cru- cial for low-resource languages when some named entities are not covered by the dictionary or the translation is not reliable. We suspect that the un- reliable translation of named entities is the ma- jor reason why our method alone performs worse but performs better when combined with their data that has access to higher quality translations of named entities. ", "page_idx": 7, "bbox": [71, 518.6390991210938, 290, 721.4735107421875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 102, "type": "text", "text": "", "page_idx": 7, "bbox": [307, 305.760009765625, 525, 359.5534973144531], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 103, "type": "text", "text": "The table omits results using adversarial learn- ing and identical character strings, as both failed  ${\\cal F}_{1}$   scores around 10). We attribute these failures to the low quality of Uyghur word embeddings and the fact that the two languages are distant. Also, Uyghur is mainly written in Arabic script, mak- ing the identical character method inappropriate. Overall, this reveals a practical challenge for mul- tilingual embedding methods, where the underly- ing distributions of the text in the two languages are divergent. ", "page_idx": 7, "bbox": [307, 361.02203369140625, 525, 509.6585998535156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 104, "type": "text", "text": "5 Related Work ", "text_level": 1, "page_idx": 7, "bbox": [306, 523, 397, 536], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 105, "type": "text", "text": "Cross-Lingual Learning  Cross-lingual learning approaches can be loosely classiﬁed into two categories: annotation projection and language- independent transfer. ", "page_idx": 7, "bbox": [307, 547.1254272460938, 525, 601.3115844726562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 106, "type": "text", "text": "Annotation projection methods create training data by using parallel corpora to project annota- tions from the source to the target language. Such approaches have been applied to many tasks un- der the cross-lingual setting, such as POS tag- ging ( Yarowsky et al. ,  2001 ;  Das and Petrov ,  2011 ; T¨ ackstr¨ om et al. ,  2013 ;  Fang and Cohn ,  2016 ), mention detection ( Zitouni and Florian ,  2008 ) and parsing ( Hwa et al. ,  2005 ;  McDonald et al. ,  2011 ). ", "page_idx": 7, "bbox": [307, 602.7800903320312, 525, 724.3185424804688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 107, "type": "text", "text": "Language independent transfer-based ap- proaches build models using language indepen- dent and delexicalized features. For instance, Zirikly and Hagiwara  ( 2015 ) transfers word cluster and gazetteer features through the use of comparable copora.  Tsai et al.  ( 2016 ) links words to Wikipedia entries and uses the entry category as features to train language independent NER models. Recently,  Ni et al.  ( 2017 ) propose to project word embeddings into a common space as language independent features. These approaches utilize such features by training a model on the source language and directly applying it to the target language. ", "page_idx": 7, "bbox": [307, 725.787109375, 525, 766.0315551757812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 108, "type": "text", "text": "", "page_idx": 8, "bbox": [72, 63.68701934814453, 290, 212.32455444335938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 109, "type": "text", "text": "Another way of performing language indepen- dent transfer resorts to multi-task learning, where a model is trained jointly across different lan- guages by sharing parameters to allow for knowl- edge transfer ( Ammar et al. ,  2016a ;  Yang et al. , 2017 ;  Cotterell and Duh ,  2017 ;  Lin et al. ,  2018 ). However, such approaches usually require some amounts of training data in the target language for bootstrapping, which is different from our un- supervised approach that requires no labeled re- sources in the target language. ", "page_idx": 8, "bbox": [72, 212.7610626220703, 290, 361.3985900878906], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 110, "type": "text", "text": "Bilingual Word Embeddings There have been two general paradigms in obtaining bilingual word vectors besides using dictionaries: through paral- lel corpora and through joint training. Approaches based on parallel corpora usually learn bilingual word embeddings that can produce similar repre- sentations for aligned sentences ( Hermann and Blunsom ,  2014 ;  Chandar et al. ,  2014 ). Jointly- trained models combine the common monolin- gual training objective with a cross-lingual train- ing objective that often comes from parallel corpus ( Zou et al. ,  2013 ;  Gouws et al. ,  2015 ). Recently, unsupervised approaches also have been used to align two sets of word embeddings by learning a mapping through adversarial learning or self- learning ( Zhang et al. ,  2017 ;  Artetxe et al. ,  2017 ; Lample et al. ,  2018 ). ", "page_idx": 8, "bbox": [72, 368.8883972167969, 290, 599.2136840820312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 111, "type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 8, "bbox": [71, 610, 148, 622], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 112, "type": "text", "text": "In this paper, we propose two methods to tackle the cross-lingual NER problem under the unsuper- vised transfer setting. To address the challenge of lexical mapping, we ﬁnd translations of words in a shared embedding space built from a seed lex- icon. To alleviate word order divergence across languages, we add a self-attention mechanism to our neural architecture. With these methods com- bined, we are able to achieve state-of-the-art or competitive results on commonly tested languages under a cross-lingual setting, with lower resource requirements than past approaches. We also eval- uate the challenges of applying these methods to an extremely low-resource language, Uyghur. ", "page_idx": 8, "bbox": [72, 630.9432373046875, 290, 766.0316162109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 113, "type": "text", "text": "", "page_idx": 8, "bbox": [307, 63.68720245361328, 525, 117.48068237304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 114, "type": "text", "text": "Acknowledgments ", "text_level": 1, "page_idx": 8, "bbox": [307, 128, 401, 141], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 115, "type": "text", "text": "We thank Stephen Mayhew for sharing the data, and Zihang Dai for meaningful discussion. ", "page_idx": 8, "bbox": [307, 148.9372100830078, 525, 175.63168334960938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 116, "type": "text", "text": "This research was sponsored by Defense Ad- vanced Research Projects Agency Information In- novation Ofﬁce (I2O) under the Low Resource Languages for Emergent Incidents (LORELEI) program, issued by DARPA/I2O under Contract No. HR0011-15-C0114. The views and conclu- sions contained in this document are those of the authors and should not be interpreted as repre- senting the ofﬁcial policies, either expressed or implied, of the U.S. government. The U.S. gov- ernment is authorized to reproduce and distribute reprints for government purposes notwithstanding any copyright notation here on. ", "page_idx": 8, "bbox": [307, 176.0352325439453, 525, 351.7717590332031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 117, "type": "text", "text": "References ", "text_level": 1, "page_idx": 8, "bbox": [307, 375, 363, 387], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 118, "type": "text", "text": "Waleed Ammar, George Mulcaire, Miguel Ballesteros, Chris Dyer, and Noah A. Smith. 2016a. Many lan- guages, one parser.  Transactions of the Association for Computational Linguistics , 4:431–444. Waleed Ammar, George Mulcaire, Yulia Tsvetkov, Guillaume Lample, Chris Dyer, and Noah A. Smith. 2016b. Massively multilingual word embeddings. https://arxiv.org/pdf/1602.01925 . Mikel Artetxe, Gorka Labaka, and Eneko Agirre. 2016. Learning principled bilingual mappings of word em- beddings while preserving monolingual invariance. In  EMNLP , pages 2289–2294. Mikel Artetxe, Gorka Labaka, and Eneko Agirre. 2017. Learning bilingual word embeddings with (almost) no bilingual data. In  ACL , pages 451–462. Akash Bharadwaj, David Mortensen, Chris Dyer, and Jaime Carbonell. 2016. Phonologically aware neu- ral model for named entity recognition in low re- source transfer settings. In  EMNLP , pages 1462– 1472. Piotr Bojanowski, Edouard Grave, Armand Joulin, and Tomas Mikolov. 2017. Enriching word vectors with subword information.  Transactions of the Associa- tion for Computational Linguistics , 5:135–146. Sarath Chandar, Stanislas Lauly, Hugo Larochelle, Mitesh Khapra, Balaraman Ravindran, Vikas C Raykar, and Amrita Saha. 2014. An autoencoder approach to learning bilingual word representations. In  NIPS , pages 1853–1861. ", "page_idx": 8, "bbox": [307, 393.5778503417969, 525, 765.7646484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 119, "type": "text", "text": "Jason Chiu and Eric Nichols. 2016. Named entity recognition with bidirectional lstm-cnns.  Transac- tions of the Association for Computational Linguis- tics , 4:357–370. Ronan Collobert, Jason Weston, L´ eon Bottou, Michael Karlen, Koray Kavukcuoglu, and Pavel Kuksa. 2011. Natural language processing (almost) from scratch. Journal of Machine Learning Research , 12(Aug):2493–2537. Ryan Cotterell and Kevin Duh. 2017. Low- resource named entity recognition with cross- lingual, character-level neural conditional random ﬁelds. In  IJCNLP , pages 91–96. Dipanjan Das and Slav Petrov. 2011. Unsupervised part-of-speech tagging with bilingual graph-based projections. In  ACL , pages 600–609. Georgiana Dinu and Marco Baroni. 2014. Improving zero-shot learning by mitigating the hubness prob- lem.  CoRR , abs/1412.6568. Maud Ehrmann, Marco Turchi, and Ralf Steinberger. 2011. Building a multilingual named entity- annotated corpus using annotation projection. In RANLP , pages 118–124. Meng Fang and Trevor Cohn. 2016. Learning when to trust distant supervision: An application to low- resource POS tagging using cross-lingual projection. In  CoNLL , pages 178–186. Meng Fang and Trevor Cohn. 2017. Model transfer for tagging low-resource languages using a bilingual dictionary. In  ACL , pages 587–593. Manaal Faruqui and Chris Dyer. 2014. Improving vec- tor space word representations using multilingual correlation. In  ACL , pages 462–471. Stephan Gouws, Yoshua Bengio, and Greg Corrado. 2015. Bilbowa: Fast bilingual distributed represen- tations without word alignments. In  ICML , pages 748–756. Jiang Guo, Wanxiang Che, David Yarowsky, Haifeng Wang, and Ting Liu. 2015. Cross-lingual depen- dency parsing based on distributed representations. In  ACL , volume 1, pages 1234–1244. Karl Moritz Hermann and Phil Blunsom. 2014. Multi- lingual models for compositional distributed seman- tics. In  ACL , pages 58–68. Zhiheng Huang, Wei Xu, and Kai Yu. 2015. Bidi- rectional LSTM-CRF models for sequence tagging. CoRR , abs/1508.01991. Rebecca Hwa, Philip Resnik, Amy Weinberg, Clara Cabezas, and Okan Kolak. 2005. Bootstrapping parsers via syntactic projection across parallel texts. Natural language engineering , 11(3):311–325. ", "page_idx": 9, "bbox": [71, 64.56158447265625, 290, 765.7653198242188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 120, "type": "text", "text": "Sungchul Kim, Kristina Toutanova, and Hwanjo Yu. 2012. Multilingual named entity recognition using parallel data and metadata from wikipedia. In    $A C L$  , pages 694–702. Guillaume Lample, Miguel Ballesteros, Sandeep Sub- ramanian, Kazuya Kawakami, and Chris Dyer. 2016. Neural architectures for named entity recognition. In  NAACL , pages 260–270. Guillaume Lample, Alexis Conneau, Marc’Aurelio Ranzato, Ludovic Denoyer, and Herv Jgou. 2018. Word translation without parallel data. In  ICLR . Ying Lin, Shengqi Yang, Veselin Stoyanov, and Heng Ji. 2018. A multi-lingual multi-task architecture for low-resource sequence labeling. In  ACL , pages 799–809. Zhouhan Lin, Minwei Feng, Cicero Nogueira dos San- tos, Mo Yu, Bing Xiang, Bowen Zhou, and Yoshua Bengio. 2017. A structured self-attentive sentence embedding. In  ICLR . L. Liu, J. Shang, F. Xu, X. Ren, H. Gui, J. Peng, and J. Han. 2018. Empower sequence labeling with task- aware neural language model. In  AAAI . Xuezhe Ma and Eduard Hovy. 2016. End-to-end se- quence labeling via bi-directional lstm-cnns-crf. In ACL , pages 1064–1074. Stephen Mayhew, Chen-Tse Tsai, and Dan Roth. 2017. Cheap translation for cross-lingual named entity recognition. In  EMNLP , pages 2526–2535. Ryan McDonald, Slav Petrov, and Keith Hall. 2011. Multi-source transfer of delexicalized dependency parsers. In  EMNLP , pages 62–72. Tomas Mikolov, Quoc V. Le, and Ilya Sutskever. 2013a. Exploiting similarities among languages for ma- chine translation.  CoRR , abs/1309.4168. Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor- rado, and Jeff Dean. 2013b. Distributed representa- tions of words and phrases and their compositional- ity. In  NIPS , pages 3111–3119. Jian Ni, Georgiana Dinu, and Radu Florian. 2017. Weakly supervised cross-lingual named entity recognition via effective annotation and representa- tion projection. In  ACL , pages 1470–1480. Joel Nothman, Nicky Ringland, Will Radford, Tara Murphy, and James R Curran. 2013. Learning mul- tilingual named entity recognition from wikipedia. Artiﬁcial Intelligence , 194:151–175. Jeffrey Pennington, Richard Socher, and Christopher Manning. 2014. Glove: Global vectors for word representation. In  EMNLP , pages 1532–1543. Matthew Peters, Waleed Ammar, Chandra Bhagavat- ula, and Russell Power. 2017. Semi-supervised se- quence tagging with bidirectional language models. In  ACL , pages 1756–1765. ", "page_idx": 9, "bbox": [307, 64.5614013671875, 525, 765.7650756835938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 121, "type": "text", "text": "Matthew E. Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke Zettlemoyer. 2018. Deep contextualized word rep- resentations. In  NAACL , pages 2227–2237. Nils Reimers and Iryna Gurevych. 2017. Reporting score distributions makes a difference: Performance study of lstm-networks for sequence tagging. In EMNLP , pages 338–348. Samuel L. Smith, David H. P. Turban, Steven Hamblin, and Nils Y. Hammerla. 2017. Ofﬂine bilingual word vectors, orthogonal transformations and the inverted softmax. In  ICLR . Oscar T¨ ackstr¨ om, Dipanjan Das, Slav Petrov, Ryan T. McDonald, and Joakim Nivre. 2013. Token and type constraints for cross-lingual part-of-speech tagging. TACL , 1:1–12. Oscar T¨ ackstr¨ om, Ryan McDonald, and Jakob Uszko- reit. 2012. Cross-lingual word clusters for direct transfer of linguistic structure. In  NAACL , pages 477–487. Erik F. Tjong Kim Sang. 2002. Introduction to the CoNLL-2002 shared task: Language-independent named entity recognition. In  CoNLL , pages 1–4. Erik F Tjong Kim Sang and Fien De Meulder. 2003. Introduction to the CoNLL-2003 shared task: Language-independent named entity recognition. In CoNLL , pages 142–147. Chen-Tse Tsai, Stephen Mayhew, and Dan Roth. 2016. Cross-lingual named entity recognition via wikiﬁca- tion. In  CoNLL , pages 219–228. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Ł ukasz Kaiser, and Illia Polosukhin. 2017. Attention is all you need. In  NIPS , pages 6000–6010. Mengqiu Wang and Christopher D. Manning. 2014. Cross-lingual projected expectation regularization for weakly supervised learning.  Transactions of the Association for Computational Linguistics (TACL) , 2(5):55–66. Zhilin Yang, Ruslan Salakhutdinov, and William W. Cohen. 2016. Multi-task cross-lingual sequence tag- ging from scratch.  CoRR , abs/1603.06270. Zhilin Yang, Ruslan Salakhutdinov, and William W. Cohen. 2017. Transfer learning for sequence tag- ging with hierarchical recurrent networks. D. Yarowsky, G. Ngai, and R. Wicentowski. 2001. In- ducing multilingual text analysis tools via robust projection across aligned corpora. In  HLT . Meng Zhang, Yang Liu, Huanbo Luan, and Maosong Sun. 2017. Adversarial training for unsupervised bilingual lexicon induction. In  ACL , volume 1, pages 1959–1970. ", "page_idx": 10, "bbox": [71, 64.56158447265625, 290, 765.7651977539062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 122, "type": "text", "text": "Yuan Zhang, David Gaddy, Regina Barzilay, and Tommi S. Jaakkola. 2016. Ten pairs to tag - mul- tilingual POS tagging via coarse mapping between embeddings. In  NAACL , pages 1307–1317. Ayah Zirikly and Masato Hagiwara. 2015. Cross- lingual transfer of named entity recognizers without parallel corpora. In  ACL , pages 390–396. Associa- tion for Computational Linguistics. Imed Zitouni and Radu Florian. 2008. Mention detec- tion crossing the language barrier. In  EMNLP , pages 600–609. Will Y Zou, Richard Socher, Daniel Cer, and Christo- pher D Manning. 2013. Bilingual word embeddings for phrase-based machine translation. In  EMNLP , pages 1393–1398. ", "page_idx": 10, "bbox": [307, 64.561279296875, 525, 256.8900146484375], "page_size": [595.2760009765625, 841.8900146484375]}
