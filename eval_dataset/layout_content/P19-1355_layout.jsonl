{"layout": 0, "type": "text", "text": "Energy and Policy Considerations for Deep Learning in NLP ", "text_level": 1, "page_idx": 0, "bbox": [111, 68, 487, 87], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 1, "type": "text", "text": "Emma Strubell Ananya Ganesh Andrew McCallum College of Information and Computer Sciences University of Massachusetts Amherst { strubell, aganesh, mccallum } @cs.umass.edu ", "page_idx": 0, "bbox": [144.45599365234375, 113.2550048828125, 456.08026123046875, 178.052001953125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 2, "type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0, "bbox": [159, 224, 204, 235], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 3, "type": "text", "text": "Recent progress in hardware and methodol- ogy for training neural networks has ushered in a new generation of large networks trained on abundant data. These models have ob- tained notable gains in accuracy across many NLP tasks. However, these accuracy improve- ments depend on the availability of exception- ally large computational resources that neces- sitate similarly substantial energy consump- tion. As a result these models are costly to train and develop, both ﬁnancially, due to the cost of hardware and electricity or cloud com- pute time, and environmentally, due to the car- bon footprint required to fuel modern tensor processing hardware. In this paper we bring this issue to the attention of NLP researchers by quantifying the approximate ﬁnancial and environmental costs of training a variety of re- cently successful neural network models for NLP. Based on these ﬁndings, we propose ac- tionable recommendations to reduce costs and improve equity in NLP research and practice. ", "page_idx": 0, "bbox": [89, 243.862548828125, 273, 506.9253845214844], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 4, "type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0, "bbox": [72, 514, 155, 529], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 5, "type": "text", "text": "Advances in techniques and hardware for train- ing deep neural networks have recently en- abled impressive accuracy improvements across many fundamental NLP tasks ( Bahdanau et al. , 2015 ;  Luong et al. ,  2015 ;  Dozat and Man- ning ,  2017 ;  Vaswani et al. ,  2017 ), with the most computationally-hungry models obtaining the highest scores ( Peters et al. ,  2018 ;  Devlin et al. , 2019 ;  Radford et al. ,  2019 ;  So et al. ,  2019 ). As a result, training a state-of-the-art model now re- quires substantial computational resources which demand considerable energy, along with the as- sociated ﬁnancial and environmental costs. Re- search and development of new models multiplies these costs by thousands of times by requiring re- training to experiment with model architectures and hyperparameters. Whereas a decade ago most ", "page_idx": 0, "bbox": [71, 536.098876953125, 290, 766.0313110351562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 6, "type": "table", "page_idx": 0, "img_path": "layout_images/P19-1355_0.jpg", "bbox": [311, 220, 524, 291], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Consumption COxzge (Ibs)\nAir travel, 1 person, NYOSF 1984\nHuman life, avg, 1 year 11,023\nAmerican life, avg, 1 year 36,156\nCar, avg incl. fuel, 1 lifetime 126,000\n", "vlm_text": "The table provides data on the carbon dioxide equivalent (CO₂e) emissions associated with different types of consumption. It lists four types of consumption with their corresponding CO₂e emissions measured in pounds (lbs):\n\n1. Air travel for one person between New York (NY) and San Francisco (SF) and back results in CO₂e emissions of 1,984 lbs.\n2. An average human life over one year is responsible for 11,023 lbs of CO₂e emissions.\n3. An average American life over one year produces 36,156 lbs of CO₂e emissions.\n4. The average emissions from a car, including fuel, over its lifetime amount to 126,000 lbs of CO₂e."}
{"layout": 7, "type": "table", "page_idx": 0, "img_path": "layout_images/P19-1355_1.jpg", "table_caption": "Training one model (GPU) ", "bbox": [311, 303, 524, 372], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "NLP pipeline (parsing, SRL) 39\nw/ tuning & experiments 78,468\nTransformer (big) 192\nw/ neural arch. search 626,155\n", "vlm_text": "The table presents data related to natural language processing (NLP) tasks, specifically focusing on two main components: an NLP pipeline and a Transformer model. Each component has two associated metrics:\n\n1. **NLP Pipeline (parsing, SRL):** This likely refers to a traditional NLP approach involving parsing and semantic role labeling (SRL).\n   - The first value, \"39,\" might represent a baseline metric such as the number of parameters, iterations, or computational units involved in processing.\n   - The second value, \"78,468,\" corresponds to the same NLP pipeline with additional tuning and experiments, suggesting a substantial increase in resource usage or output.\n\n2. **Transformer (big):** This is indicative of a Transformer model, which is a type of neural network architecture commonly used in NLP tasks.\n   - The first value, \"192,\" could represent an initial metric related to this model's configuration or performance.\n   - The second value, \"626,155,\" pertains to the same Transformer model with neural architecture search applied, which likely implies an increase in complexity or performance optimization.\n\nOverall, the table captures the difference in resource metrics or performance indicators between a basic configuration and an optimized version of each model."}
{"layout": 8, "type": "text", "text": "Table 1: Estimated   $\\mathrm{CO_{2}}$   emissions from training com- mon NLP models, compared to familiar consumption. ", "page_idx": 0, "bbox": [307, 381, 525, 405.4645080566406], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 9, "type": "text", "text": "NLP models could be trained and developed on a commodity laptop or server, many now require multiple instances of specialized hardware such as GPUs or TPUs, therefore limiting access to these highly accurate models on the basis of ﬁnances. ", "page_idx": 0, "bbox": [307, 427.8800048828125, 525, 495.2215270996094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 10, "type": "text", "text": "Even when these expensive computational re- sources are available, model training also incurs a substantial cost to the environment due to the en- ergy required to power this hardware for weeks or months at a time. Though some of this energy may come from renewable or carbon credit-offset re- sources, the high energy demands of these models are still a concern since (1) energy is not currently derived from carbon-neural sources in many loca- tions, and (2) when renewable energy is available, it is still limited to the equipment we have to pro- duce and store it, and energy spent training a neu- ral network might better be allocated to heating a family’s home. It is estimated that we must cut carbon emissions by half over the next decade to deter escalating rates of natural disaster, and based on the estimated  $\\mathrm{CO_{2}}$   emissions listed in Table  1 , model training and development likely make up a substantial portion of the greenhouse gas emis- sions attributed to many NLP researchers. ", "page_idx": 0, "bbox": [307, 496.03704833984375, 525, 727.6065063476562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 11, "type": "text", "text": "", "page_idx": 1, "bbox": [72, 63.68701934814453, 290, 103.93148803710938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 12, "type": "text", "text": "To heighten the awareness of the NLP commu- nity to this issue and promote mindful practice and policy, we characterize the dollar cost and carbon emissions that result from training the neural net- works at the core of many state-of-the-art NLP models. We do this by estimating the kilowatts of energy required to train a variety of popular off-the-shelf NLP models, which can be converted to approximate carbon emissions and electricity costs. To estimate the even greater resources re- quired to transfer an existing model to a new task or develop new models, we perform a case study of the full computational resources required for the development and tuning of a recent state-of-the-art NLP pipeline ( Strubell et al. ,  2018 ). We conclude with recommendations to the community based on our ﬁndings, namely: (1) Time to retrain and sen- sitivity to hyperparameters should be reported for NLP machine learning models; (2) academic re- searchers need equitable access to computational resources; and (3) researchers should prioritize de- veloping efﬁcient models and hardware. ", "page_idx": 1, "bbox": [72, 104.73004913330078, 290, 402.4086608886719], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 13, "type": "text", "text": "2 Methods ", "text_level": 1, "page_idx": 1, "bbox": [71, 413, 135, 427], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 14, "type": "text", "text": "To quantify the computational and environmen- tal cost of training deep neural network mod- els for NLP, we perform an analysis of the en- ergy required to train a variety of popular off- the-shelf NLP models, as well as a case study of the complete sum of resources required to develop LISA ( Strubell et al. ,  2018 ), a state-of-the-art NLP model from EMNLP 2018, including all tuning and experimentation. ", "page_idx": 1, "bbox": [72, 436.2891845703125, 290, 557.8286743164062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 15, "type": "text", "text": "We measure energy use as follows. We train the models described in  $\\S2.1$   using the default settings provided, and sample GPU and CPU power con- sumption during training. Each model was trained for a maximum of 1 day. We train all models on a single NVIDIA Titan X GPU, with the excep- tion of ELMo which was trained on 3 NVIDIA GTX 1080 Ti GPUs. While training, we repeat- edly query the NVIDIA System Management In- terface 2   to sample the GPU power consumption and report the average over all samples. To sample CPU power consumption, we use Intel’s Running Average Power Limit interface. ", "page_idx": 1, "bbox": [72, 558.6272583007812, 290, 734.3626708984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 16, "type": "table", "page_idx": 1, "img_path": "layout_images/P19-1355_2.jpg", "table_caption": "Consumer Renew. Gas Coal Nuc. ", "table_footnote": "Table 2: Percent energy sourced from: Renewable (e.g. hydro, solar, wind), natural gas, coal and nuclear for the top 3 cloud compute providers ( Cook et al. ,  2017 ), compared to the United States,   China 5   and Germany ( Burger ,  2019 ). ", "bbox": [306, 63, 526, 234], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "3%\n\n4%\n\nChina 22% 65%\n\nGermany 40% 7% 38% 13%\nUnited States 17% 35% 27% 19%\nAmazon-AWS 17% 24% 30% 26%\nGoogle 56% 14% 15% 10%\nMicrosoft 32% 23% 31% 10%\n", "vlm_text": "The table shows the energy consumption distribution for various consumers, divided into four types of energy sources: Renewables, Gas, Coal, and Nuclear. The consumers include three countries (China, Germany, United States) and three companies (Amazon-AWS, Google, Microsoft). Here's the percentage breakdown:\n\n- **China:**\n  - Renewables: 22%\n  - Gas: 3%\n  - Coal: 65%\n  - Nuclear: 4%\n\n- **Germany:**\n  - Renewables: 40%\n  - Gas: 7%\n  - Coal: 38%\n  - Nuclear: 13%\n\n- **United States:**\n  - Renewables: 17%\n  - Gas: 35%\n  - Coal: 27%\n  - Nuclear: 19%\n\n- **Amazon-AWS:**\n  - Renewables: 17%\n  - Gas: 24%\n  - Coal: 30%\n  - Nuclear: 26%\n\n- **Google:**\n  - Renewables: 56%\n  - Gas: 14%\n  - Coal: 15%\n  - Nuclear: 10%\n\n- **Microsoft:**\n  - Renewables: 32%\n  - Gas: 23%\n  - Coal: 31%\n  - Nuclear: 10%"}
{"layout": 17, "type": "text", "text": "We estimate the total time expected for mod- els to train to completion using training times and hardware reported in the original papers. We then calculate the power consumption in kilowatt-hours  $(\\mathrm{kWh})$   as follows. Let    $p_{c}$   be the average power draw (in watts) from all CPU sockets during train- ing, let    $p_{r}$   be the average power draw from all DRAM (main memory) sockets, let  $p_{g}$   be the aver- age power draw of a GPU during training, and let  $g$   be the number of GPUs used to train. We esti- mate total power consumption as combined GPU, CPU and DRAM consumption, then multiply this by Power Usage Effectiveness (PUE), which ac- counts for the additional energy required to sup- port the compute infrastructure (mainly cooling). We use a PUE coefﬁcient of 1.58, the 2018 global average for data centers ( Ascierto ,  2018 ). Then the total power    $p_{t}$   required at a given instance during training is given by: ", "page_idx": 1, "bbox": [306, 253.9940948486328, 525, 511.0246887207031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 18, "type": "equation", "text": "\n$$\np_{t}=\\frac{1.58t(p_{c}+p_{r}+g p_{g})}{1000}\n$$\n ", "text_format": "latex", "page_idx": 1, "bbox": [354, 516, 477, 544], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 19, "type": "text", "text": "The U.S. Environmental Protection Agency (EPA) provides average   $\\mathrm{CO_{2}}$   produced (in pounds per kilowatt-hour) for power consumed in the U.S. ( EPA ,  2018 ), which we use to convert power to estimated  $\\mathrm{CO_{2}}$   emissions: ", "page_idx": 1, "bbox": [306, 548.7789916992188, 525, 617.7584228515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 20, "type": "equation", "text": "\n$$\n\\mathrm{CO_{2}e}=0.954p_{t}\n$$\n ", "text_format": "latex", "page_idx": 1, "bbox": [377, 623, 455, 638], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 21, "type": "text", "text": "This conversion takes into account the relative pro- portions of different energy sources (primarily nat- ural gas, coal, nuclear and renewable) consumed to produce energy in the United States. Table  2 lists the relative energy sources for China, Ger- many and the United States compared to the top three cloud service providers. The U.S. break- down of energy is comparable to that of the most popular cloud compute service, Amazon Web Ser- vices, so we believe this conversion to provide a reasonable estimate of   $\\mathrm{CO_{2}}$   emissions per kilowatt hour of compute energy used. ", "page_idx": 1, "bbox": [306, 646.074951171875, 525, 726.9664306640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 22, "type": "text", "text": "", "page_idx": 2, "bbox": [71, 63.68701934814453, 290, 144.57852172851562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 23, "type": "text", "text": "2.1 Models ", "text_level": 1, "page_idx": 2, "bbox": [71, 160, 131, 171], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 24, "type": "text", "text": "We analyze four models, the computational re- quirements of which we describe below. All mod- els have code freely available online, which we used out-of-the-box. For more details on the mod- els themselves, please refer to the original papers. ", "page_idx": 2, "bbox": [71, 179.37306213378906, 290, 246.71456909179688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 25, "type": "text", "text": "Transformer . The Transformer (T2T) model ( Vaswani et al. ,  2017 ) is an encoder-decoder archi- tecture primarily recognized for efﬁcient and accu- rate machine translation. The encoder and decoder each consist of 6 stacked layers of multi-head self- attention. Vaswani et al.  ( 2017 ) report that the Transformer base model   $({\\bf T}2{\\bf T}_{b a s e}$  ; 65M param- eters) was trained on 8 NVIDIA P100 GPUs for 12 hours, and the Transformer big model   $({\\bf T}2{\\bf T}_{b i g}$  ; 213M parameters) was trained for 3.5 days (84 hours;   $300\\mathbf{k}$   steps). This model is also the ba- sis for recent work on neural architecture search ( NAS ) for machine translation and language mod- eling ( So et al. ,  2019 ), and the NLP pipeline that we study in more detail in    $\\S4.2$   ( Strubell et al. , 2018 ).  So et al.  ( 2019 ) report that their full ar- chitecture search ran for a total of 979M training steps, and that their base model requires 10 hours to train for  $300\\mathbf{k}$   steps on one TPUv2 core. This equates to 32,623 hours of TPU or 274,120 hours on 8 P100 GPUs. ", "page_idx": 2, "bbox": [71, 248.20835876464844, 290, 532.7306518554688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 26, "type": "text", "text": "ELMo.  The ELMo model ( Peters et al. ,  2018 ) is based on stacked LSTMs and provides rich word representations in context by pre-training on a large amount of data using a language model- ing objective. Replacing context-independent pre- trained word embeddings with ELMo has been shown to increase performance on downstream tasks such as named entity recognition, semantic role labeling, and coreference.  Peters et al.  ( 2018 ) report that ELMo was trained on 3 NVIDIA GTX 1080 GPUs for 2 weeks (336 hours). ", "page_idx": 2, "bbox": [71, 534.2235107421875, 290, 683.253662109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 27, "type": "text", "text": "BERT.  The BERT model ( Devlin et al. ,  2019 ) pro- vides a Transformer-based architecture for build- ing contextual representations similar to ELMo, but trained with a different language modeling ob- jective. BERT substantially improves accuracy on tasks requiring sentence-level representations such as question answering and natural language infer- ence.  Devlin et al.  ( 2019 ) report that the BERT base model   $({\\bf B E R T}_{b a s e}$  ; 110M parameters) was trained on 16 TPU chips for 4 days (96 hours). NVIDIA reports that they can train a BERT model in 3.3 days (79.2 hours) using 4 DGX-2H servers, totaling 64 Tesla V100 GPUs ( Forster et al. ,  2019 ). ", "page_idx": 2, "bbox": [71, 684.7474975585938, 290, 766.0316162109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 28, "type": "text", "text": "", "page_idx": 2, "bbox": [307, 63.68720245361328, 525, 158.12771606445312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 29, "type": "text", "text": "GPT-2 . This model is the latest edition of OpenAI’s GPT general-purpose token encoder, also based on Transformer-style self-attention and trained with a language modeling objective ( Rad- ford et al. ,  2019 ). By training a very large model on massive data,  Radford et al.  ( 2019 ) show high zero-shot performance on question answering and language modeling benchmarks. The large model described in  Radford et al.  ( 2019 ) has 1542M pa- rameters and is reported to require 1 week (168 hours) of training on 32 TPUv3 chips.   6 ", "page_idx": 2, "bbox": [307, 158.9084930419922, 525, 307.9387512207031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 30, "type": "text", "text": "3 Related work ", "text_level": 1, "page_idx": 2, "bbox": [307, 321, 395, 333], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 31, "type": "text", "text": "There is some precedent for work characterizing the computational requirements of training and in- ference in modern neural network architectures in the computer vision community.  Li et al.  ( 2016 ) present a detailed study of the energy use required for training and inference in popular convolutional models for image classiﬁcation in computer vi- sion, including ﬁne-grained analysis comparing different neural network layer types. Canziani et al.  ( 2016 ) assess image classiﬁcation model ac- curacy as a function of model size and gigaﬂops required during inference. They also measure av- erage power draw required during inference on GPUs as a function of batch size. Neither work an- alyzes the recurrent and self-attention models that have become commonplace in NLP, nor do they extrapolate power to estimates of carbon and dol- lar cost of training. ", "page_idx": 2, "bbox": [307, 344.0412902832031, 525, 587.5238037109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 32, "type": "text", "text": "Analysis of hyperparameter tuning has been performed in the context of improved algorithms for hyperparameter search ( Bergstra et al. ,  2011 ; Bergstra and Bengio ,  2012 ;  Snoek et al. ,  2012 ). To our knowledge there exists to date no analysis of the computation required for R&D and hyperpa- rameter tuning of neural network models in NLP. ", "page_idx": 2, "bbox": [307, 588.6963500976562, 525, 683.1368408203125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 33, "type": "table", "page_idx": 3, "img_path": "layout_images/P19-1355_3.jpg", "table_caption": "Model Hardware Power (W) Hours kWh PUE CO 2 e Cloud compute cost ", "table_footnote": "Table 3: Estimated cost of training a model in terms of   $\\mathrm{CO_{2}}$   emissions (lbs) and cloud compute cost (USD).   Power and carbon footprint are omitted for TPUs due to lack of public information on power draw for this hardware. ", "bbox": [70, 62, 526, 226], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "~\n\nT2T rig\nELMo\nBERToase\nBERT ase\nNAS\nNAS\nGPT-2\n\nP100x8\nP100x8\nP100x3\nV100x64\nTPUv2x16\nP100x8\nTPUv2x1\nTPUv3x32\n\n1415.78\n1515.43\n517.66\n12,041.51\n1515.43\n\n12\n\n84\n\n336\n\n79\n\n96\n274,120\n32,623\n168\n\n$41-$140\n\n27 26\n201 192 $289-$981\n275 262 $433-$1472\n1507 1438 $3751-$12,571\n$2074-$69 12\n656,347 626,155 $942,973-$3,201,722\n\n$44,055-$146,848\n$12,902-$43,008\n", "vlm_text": "The table provides information about different models and their associated hardware, power consumption, and costs:\n\n1. **Models**: T2T_base, T2T_big, ELMo, BERT_base, NAS, GPT-2.\n  \n2. **Hardware**: Details of the hardware used, including the type and number of processing units (e.g., P100x8, V100x64).\n\n3. **Power (W)**: The power consumption for each model.\n\n4. **MLU**: Some numerical value, possibly related to processing capability or usage.\n\n5. **TPUv2**: Values possibly indicating settings related to TPU version 2 usage.\n\n6. **Ops**: Number of operations or some measure of processing activity.\n\n7. **Cloud Compute Cost**: The estimated cost range for running each model in a cloud computing environment.\n\nThe table provides a comparison of different machine learning models in terms of resource requirements and potential operational costs."}
{"layout": 34, "type": "text", "text": "4 Experimental results ", "text_level": 1, "page_idx": 3, "bbox": [71, 246, 198, 260], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 35, "type": "text", "text": "4.1 Cost of training ", "text_level": 1, "page_idx": 3, "bbox": [71, 268, 172, 281], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 36, "type": "text", "text": "Table  3  lists  $\\mathrm{CO_{2}}$   emissions and estimated cost of training the models described in    $\\S2.1$  . Of note is that TPUs are more cost-efﬁcient than GPUs on workloads that make sense for that hardware (e.g. BERT). We also see that models emit substan- tial carbon emissions; training BERT on GPU is roughly equivalent to a trans-American ﬂight.  So et al.  ( 2019 ) report that NAS achieves a new state- of-the-art BLEU score of 29.7 for English to Ger- man machine translation, an increase of just 0.1 BLEU at the cost of at least  $\\mathbb{S}150\\mathbf{k}$   in on-demand compute time and non-trivial carbon emissions. ", "page_idx": 3, "bbox": [71, 285.79107666015625, 290, 447.9776306152344], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 37, "type": "text", "text": "4.2 Cost of development: Case study ", "text_level": 1, "page_idx": 3, "bbox": [71, 458, 249, 471], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 38, "type": "text", "text": "To quantify the computational requirements of R&D for a new model we study the logs of all training required to develop Linguistically- Informed Self-Attention ( Strubell et al. ,  2018 ), a multi-task model that performs part-of-speech tag- ging, labeled dependency parsing, predicate detec- tion and semantic role labeling. This model makes for an interesting case study as a representative NLP pipeline and as a Best Long Paper at EMNLP. ", "page_idx": 3, "bbox": [71, 475.42913818359375, 290, 596.9676513671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 39, "type": "text", "text": "Model training associated with the project spanned a period of 172 days (approx. 6 months). During that time 123 small hyperparameter grid searches were performed, resulting in 4789 jobs in total. Jobs varied in length ranging from a min- imum of 3 minutes, indicating a crash, to a maxi- mum of 9 days, with an average job length of 52 hours. All training was done on a combination of NVIDIA Titan   $\\mathrm{X}\\,(72\\%)$   and M40   $(28\\%)$   GPUs. ", "page_idx": 3, "bbox": [71, 597.5061645507812, 290, 719.045654296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 40, "type": "text", "text": "The sum GPU time required for the project totaled 9998 days (27 years). This averages to ", "page_idx": 3, "bbox": [71, 719.5841674804688, 290, 746.2786254882812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 41, "type": "table", "page_idx": 3, "img_path": "layout_images/P19-1355_4.jpg", "table_footnote": "Table 4: Estimated cost in terms of cloud compute and electricity for training: (1) a single model (2) a single tune and (3) all models trained during R&D. ", "bbox": [306, 252, 527, 361], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "PUES EE ME A a ey\n\nModels Hours Cloud Electric\n1 120 $52-$175 $5\n\n24 2880 $1238-$4205 $118\n4789 239,942 $103k-$350k $9870\n", "vlm_text": "The table compares estimated costs for models in terms of hours and expenses for both cloud and electric options:\n\n- **1 Model**\n  - **Hours:** 120\n  - **Cloud Cost:** $52–$175\n  - **Electric Cost:** $5\n\n- **24 Models**\n  - **Hours:** 2880\n  - **Cloud Cost:** $1238–$4205\n  - **Electric Cost:** $118\n\n- **4789 Models**\n  - **Hours:** 239,942\n  - **Cloud Cost:** $103k–$350k\n  - **Electric Cost:** $9870"}
{"layout": 42, "type": "text", "text": "about 60 GPUs running constantly throughout the 6 month duration of the project. Table  4  lists upper and lower bounds of the estimated cost in terms of Google Cloud compute and raw electricity re- quired to develop and deploy this model.   We see that while training a single model is relatively in- expensive, the cost of tuning a model for a new dataset, which we estimate here to require 24 jobs, or performing the full R&D required to develop this model, quickly becomes extremely expensive. ", "page_idx": 3, "bbox": [307, 383.3069763183594, 525, 518.3955078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 43, "type": "text", "text": "5 Conclusions ", "text_level": 1, "page_idx": 3, "bbox": [306, 529, 388, 542], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 44, "type": "text", "text": "Authors should report training time and sensitivity to hyperparameters. ", "text_level": 1, "page_idx": 3, "bbox": [306, 552, 496, 578], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 45, "type": "text", "text": "Our experiments suggest that it would be beneﬁ- cial to directly compare different models to per- form a cost-beneﬁt (accuracy) analysis. To ad- dress this, when proposing a model that is meant to be re-trained for downstream use, such as re- training on a new domain or ﬁne-tuning on a new task, authors should report training time and com- putational resources required, as well as model sensitivity to hyperparameters. This will enable direct comparison across models, allowing subse- quent consumers of these models to accurately as- sess whether the required computational resources are compatible with their setting. More explicit characterization of tuning time could also reveal inconsistencies in time spent tuning baseline mod- els compared to proposed contributions. Realiz- ing this will require: (1) a standard, hardware- independent measurement of training time, such as gigaﬂops required to convergence, and (2) a standard measurement of model sensitivity to data and hyperparameters, such as variance with re- spect to hyperparameters searched. ", "page_idx": 3, "bbox": [307, 583.3980102539062, 525, 745.58447265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 46, "type": "text", "text": "", "page_idx": 4, "bbox": [72, 63.68701934814453, 290, 198.77554321289062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 47, "type": "text", "text": "Academic researchers need equitable access to computation resources. ", "text_level": 1, "page_idx": 4, "bbox": [71, 214, 289, 240], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 48, "type": "text", "text": "Recent advances in available compute come at a high price not attainable to all who desire access. Most of the models studied in this paper were de- veloped outside academia; recent improvements in state-of-the-art accuracy are possible thanks to in- dustry access to large-scale compute. ", "page_idx": 4, "bbox": [72, 248.2030792236328, 290, 329.0945739746094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 49, "type": "text", "text": "Limiting this style of research to industry labs hurts the NLP research community in many ways. First, it stiﬂes creativity. Researchers with good ideas but without access to large-scale compute will simply not be able to execute their ideas, instead constrained to focus on different prob- lems. Second, it prohibits certain types of re- search on the basis of access to ﬁnancial resources. This even more deeply promotes the already prob- lematic “rich get richer” cycle of research fund- ing, where groups that are already successful and thus well-funded tend to receive more funding due to their existing accomplishments. Third, the prohibitive start-up cost of building in-house re- sources forces resource-poor groups to rely on cloud compute services such as AWS, Google Cloud and Microsoft Azure. ", "page_idx": 4, "bbox": [72, 331.1791076660156, 290, 561.1116943359375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 50, "type": "text", "text": "While these services provide valuable, ﬂexi- ble, and often relatively environmentally friendly compute resources, it is more cost effective for academic researchers, who often work for non- proﬁt educational institutions and whose research is funded by government entities, to pool resources to build shared compute centers at the level of funding agencies, such as the U.S. National Sci- ence Foundation. For example, an off-the-shelf GPU server containing 8 NVIDIA 1080 Ti GPUs and supporting hardware can be purchased for approximately   $\\mathbb{S}20{,}000$   USD. At that cost, the hardware required to develop the model in our case study (approximately 58 GPUs for 172 days) would cost   $\\S145{,}000$   USD plus electricity, about half the estimated cost to use on-demand cloud GPUs. Unlike money spent on cloud compute, however, that invested in centralized resources would continue to pay off as resources are shared across many projects. A government-funded aca- demic compute cloud would provide equitable ac- cess to all researchers. ", "page_idx": 4, "bbox": [72, 563.1972045898438, 290, 766.0316162109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 51, "type": "text", "text": "", "page_idx": 4, "bbox": [307, 63.68720245361328, 525, 158.12771606445312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 52, "type": "text", "text": "Researchers should prioritize computationally efﬁcient hardware and algorithms. ", "text_level": 1, "page_idx": 4, "bbox": [307, 169, 523, 194], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 53, "type": "text", "text": "We recommend a concerted effort by industry and academia to promote research of more computa- tionally efﬁcient algorithms, as well as hardware that requires less energy. An effort can also be made in terms of software. There is already a precedent for NLP software packages prioritizing efﬁcient models. An additional avenue through which NLP and machine learning software de- velopers could aid in reducing the energy asso- ciated with model tuning is by providing easy- to-use APIs implementing more efﬁcient alterna- tives to brute-force grid search for hyperparameter tuning, e.g. random or Bayesian hyperparameter search techniques ( Bergstra et al. ,  2011 ;  Bergstra and Bengio ,  2012 ;  Snoek et al. ,  2012 ). While software packages implementing these techniques do exist,   they are rarely employed in practice for tuning NLP models. This is likely because their interoperability with popular deep learning frameworks such as PyTorch and TensorFlow is not optimized, i.e. there are not simple exam- ples of how to tune TensorFlow Estimators using Bayesian search. Integrating these tools into the workﬂows with which NLP researchers and practi- tioners are already familiar could have notable im- pact on the cost of developing and tuning in NLP. ", "page_idx": 4, "bbox": [307, 199.3952178955078, 525, 551.2708129882812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 54, "type": "text", "text": "Acknowledgements ", "text_level": 1, "page_idx": 4, "bbox": [307, 562, 407, 576], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 55, "type": "text", "text": "We are grateful to Sherief Farouk and the anony- mous reviewers for helpful feedback on earlier drafts. This work was supported in part by the Centers for Data Science and Intelligent Infor- mation Retrieval, the Chan Zuckerberg Initiative under the Scientiﬁc Knowledge Base Construc- tion project, the IBM Cognitive Horizons Network agreement no. W1668553, and National Science Foundation grant no. IIS-1514053. Any opinions, ﬁndings and conclusions or recommendations ex- pressed in this material are those of the authors and do not necessarily reﬂect those of the sponsor. ", "page_idx": 4, "bbox": [307, 583.8953857421875, 525, 746.082763671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 56, "type": "text", "text": "References ", "text_level": 1, "page_idx": 5, "bbox": [71, 64, 128, 75], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 57, "type": "text", "text": "Rhonda Ascierto. 2018.  Uptime Institute Global Data ", "page_idx": 5, "bbox": [71, 81.63458251953125, 290, 93.63951873779297], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 58, "type": "text", "text": "Center Survey . Technical report, Uptime Institute. Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben- gio. 2015. Neural Machine Translation by Jointly Learning to Align and Translate. In  3rd Inter- national Conference for Learning Representations (ICLR) , San Diego, California, USA. James Bergstra and Yoshua Bengio. 2012. Random search for hyper-parameter optimization.  Journal of Machine Learning Research , 13(Feb):281–305. James S Bergstra, R´ emi Bardenet, Yoshua Bengio, and Bal´ azs K´ egl. 2011. Algorithms for hyper-parameter optimization. In  Advances in neural information processing systems , pages 2546–2554. Bruno Burger. 2019.  Net Public Electricity Generation in Germany in 2018 . Technical report, Fraunhofer Institute for Solar Energy Systems ISE. Alfredo Canziani, Adam Paszke, and Eugenio Culur- ciello. 2016. An analysis of deep neural network models for practical applications . Gary Cook, Jude Lee, Tamina Tsai, Ada Kongn, John Deans, Brian Johnson, Elizabeth Jardim, and Brian Johnson. 2017. Clicking Clean: Who is winning the race to build a green internet?  Technical report, Greenpeace. Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. 2019. BERT: Pre-training of Deep Bidirectional Transformers for Language Un- derstanding. In  NAACL . Timothy Dozat and Christopher D. Manning. 2017. Deep biafﬁne attention for neural dependency pars- ing. In  ICLR . EPA. 2018.  Emissions & Generation Resource Inte- grated Database (eGRID) . Technical report, U.S. Environmental Protection Agency. Christopher Forster, Thor Johnsen, Swetha Man- dava, Sharath Turuvekere Sreenivas, Deyu Fu, Julie Bernauer, Allison Gray, Sharan Chetlur, and Raul Puri. 2019.  BERT Meets GPUs . Technical report, NVIDIA AI. Da Li, Xinbo Chen, Michela Becchi, and Ziliang Zong. 2016. Evaluating the energy efﬁciency of deep con- volutional neural networks on cpus and gpus.  2016 IEEE International Conferences on Big Data and Cloud Computing (BDCloud), Social Computing and Networking (SocialCom), Sustainable Comput- ing and Communications (SustainCom) (BDCloud- SocialCom-SustainCom) , pages 477–484. Thang Luong, Hieu Pham, and Christopher D. Man- ning. 2015.  Effective approaches to attention-based neural machine translation . In  Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing , pages 1412–1421. Associa- tion for Computational Linguistics. ", "page_idx": 5, "bbox": [71, 92.59356689453125, 290, 765.7651977539062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 59, "type": "text", "text": "Matthew E. Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke Zettlemoyer. 2018. Deep contextualized word rep- resentations. In  NAACL . Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. 2019.  Language models are unsupervised multitask learners . Jasper Snoek, Hugo Larochelle, and Ryan P Adams. 2012. Practical bayesian optimization of machine learning algorithms. In  Advances in neural informa- tion processing systems , pages 2951–2959. David R. So, Chen Liang, and Quoc V. Le. 2019. The evolved transformer . In  Proceedings of the 36th International Conference on Machine Learning (ICML) . Emma Strubell, Patrick Verga, Daniel Andor, David Weiss, and Andrew McCallum. 2018. Linguistically-Informed Self-Attention for Se- mantic Role Labeling. In  Conference on Empir- ical Methods in Natural Language Processing (EMNLP) , Brussels, Belgium. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Lukasz Kaiser, and Illia Polosukhin. 2017. Attention is all you need. In  31st Conference on Neural Information Processing Systems (NIPS) . ", "page_idx": 5, "bbox": [307, 64.561279296875, 525, 395.370849609375], "page_size": [595.2760009765625, 841.8900146484375]}
