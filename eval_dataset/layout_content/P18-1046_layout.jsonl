{"layout": 0, "type": "text", "text": "DSGAN: Generative Adversarial Training for Distant Supervision Relation Extraction ", "text_level": 1, "page_idx": 0, "bbox": [95, 67, 503, 101], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 1, "type": "text", "text": "Pengda  $\\mathbf{Q}\\mathbf{in}^{\\sharp}$  , Weiran  $\\mathbf{X}\\mathbf{u}^{\\sharp}$  , William Yang Wang ♭ ♯ Beijing University of Posts and Telecommunications, China ♭ University of California, Santa Barbara, USA { qinpengda, xuweiran } @bupt.edu.cn { william } @cs.ucsb.edu ", "page_idx": 0, "bbox": [155.07098388671875, 119, 445.46502685546875, 198.41900634765625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 2, "type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0, "bbox": [158, 222, 205, 236], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 3, "type": "text", "text": "Distant supervision can effectively label data for relation extraction, but suffers from the noise labeling problem. Recent works mainly perform soft bag-level noise reduction strategies to ﬁnd the relatively better samples in a sentence bag, which is suboptimal compared with making a hard decision of false positive samples in sen- tence level. In this paper, we introduce an adversarial learning framework, which we named DSGAN, to learn a sentence- level true-positive generator. Inspired by Generative Adversarial Networks, we re- gard the positive samples generated by the generator as the negative samples to train the discriminator. The optimal generator is obtained until the discrimination ability of the discriminator has the greatest decline. We adopt the generator to ﬁlter distant su- pervision training dataset and redistribute the false positive instances into the nega- tive set, in which way to provide a cleaned dataset for relation classiﬁcation. The ex- perimental results show that the proposed strategy signiﬁcantly improves the perfor- mance of distant supervision relation ex- traction comparing to state-of-the-art sys- tems. ", "page_idx": 0, "bbox": [89, 247.11097717285156, 273, 626.0845336914062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 4, "type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0, "bbox": [72, 636, 155, 650], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 5, "type": "text", "text": "Relation extraction is a crucial task in the ﬁeld of natural language processing (NLP). It has a wide range of applications including information retrieval, question answering, and knowledge base completion. The goal of relation extraction sys- tem is to predict relation between entity pair in a sentence ( Zelenko et al. ,  2003 ;  Bunescu and Mooney ,  2005 ;  GuoDong et al. ,  2005 ). For exam- ", "page_idx": 0, "bbox": [72, 658.0410766601562, 290, 766.0315551757812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 6, "type": "image", "page_idx": 0, "img_path": "layout_images/P18-1046_0.jpg", "bbox": [311, 225, 530, 361], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "DS true positive data\nDS false positive data\nDS negative data\n\nThe decision boundary\nof DS data\n\nThe desired decision\nboundary\n\nDS data space\n\n", "vlm_text": "The image is a diagram depicting a data space, labeled \"DS data space.\" It includes three types of data points represented by different symbols:\n\n1. Purple circles marked as \"DS true positive data.\"\n2. Orange triangles marked as \"DS false positive data.\"\n3. Red crosses marked as \"DS negative data.\"\n\nThere are also two decision boundaries shown:\n\n1. An orange dashed line representing \"The decision boundary of DS data.\"\n2. A black dash-dot line representing \"The desired decision boundary.\"\n\nThe diagram likely illustrates a classification problem where different types of data points are separated by decision boundaries. The desired decision boundary likely represents an ideal separation between the data types, while the actual decision boundary shows the current algorithm's classification."}
{"layout": 7, "type": "text", "text": "Figure 1: Illustration of the distant supervision training data distribution for one relation type. ", "page_idx": 0, "bbox": [307, 387.59600830078125, 525, 414.2904968261719], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 8, "type": "text", "text": "ple, given a sentence “The    $[o w l]_{e1}$   held the mouse in its    $[c l a w]_{e2}.\\footnote{T h i s i s t h e s i s t h e s i g h i s f o r m a i n t h e h i s t i m s i s i s a n d e n s i t i c a s t e n s i n t e r m s e n t e r m(f o r m a n c e.a n c e,t h e$  , a relation classiﬁer should ﬁgure out the relation  Component-Whole  between en- tity  owl  and  claw . ", "page_idx": 0, "bbox": [307, 426, 525, 480.478515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 9, "type": "text", "text": "With the inﬁnite amount of facts in real world, it is extremely expensive, and almost impossible for human annotators to annotate training dataset to meet the needs of all walks of life. This prob- lem has received increasingly attention. Few- shot learning and Zero-shot Learning ( Xian et al. , 2017 ) try to predict the unseen classes with few labeled data or even without labeled data. Dif- ferently, distant supervision ( Mintz et al. ,  2009 ; Hoffmann et al. ,  2011 ;  Surdeanu et al. ,  2012 ) is to efﬁciently generate relational data from plain text for unseen relations with distant supervision (DS). However, it naturally brings with some de- fects: the resulted distantly-supervised training samples are often very noisy (shown in Figure  1 ), which is the main problem of impeding the per- formance ( Roth et al. ,  2013 ). Most of the cur- rent state-of-the-art methods ( Zeng et al. ,  2015 ; Lin et al. ,  2016 ) make the denoising operation in the sentence bag of entity pair, and integrate this process into the distant supervision relation ex- traction. Indeed, these methods can ﬁlter a sub- stantial number of noise samples; However, they overlook the case that all sentences of an entity pair are false positive, which is also the common phenomenon in distant supervision datasets. Un- der this consideration, an independent and accu- rate  sentence-level  noise reduction strategy is the better choice. ", "page_idx": 0, "bbox": [307, 481.90203857421875, 525, 766.031494140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 10, "type": "text", "text": "", "page_idx": 1, "bbox": [72, 63.68701934814453, 290, 171.67752075195312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 11, "type": "text", "text": "In this paper, we design an adversarial learning process ( Goodfellow et al. ,  2014 ;  Radford et al. , 2015 ) to obtain a sentence-level generator that can recognize the true positive samples from the noisy distant supervision dataset without any supervised information. In Figure  1 , the existence of false positive samples makes the DS decision boundary suboptimal, therefore hinders the performance of relation extraction. However, in terms of quan- tity, the true positive samples still occupy most of the proportion; this is the prerequisite of our method. Given the discriminator that possesses the decision boundary of DS dataset (the brown decision boundary in Figure  1 ), the generator tries to generate true positive samples from DS posi- tive dataset; Then, we assign the generated sam- ples with negative label and the rest samples with positive label to challenge the discriminator. Un- der this adversarial setting, if the generated sam- ple set includes more true positive samples and more false positive samples are left in the rest set, the classiﬁcation ability of the discriminator will drop faster. Empirically, we show that our method has brought consistent performance gains in vari- ous deep-neural-network-based models, achieving strong performances on the widely used New York Times dataset ( Riedel et al. ,  2010 ). Our contribu- tions are three-fold: ", "page_idx": 1, "bbox": [72, 172.2560577392578, 290, 551.2296752929688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 12, "type": "text", "text": "•  We are the ﬁrst to consider adversarial learn- ing to denoise the distant supervision relation extraction dataset. ", "page_idx": 1, "bbox": [82, 561.2992553710938, 290, 601.5426635742188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 13, "type": "text", "text": "•  Our method is sentence-level and model- agnostic, so it can be used as a plug-and-play technique for any relation extractors. ", "page_idx": 1, "bbox": [82, 611.6122436523438, 290, 651.8556518554688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 14, "type": "text", "text": "•  We show that our method can generate a cleaned dataset without any supervised infor- mation, in which way to boost the perfor- mance of recently proposed neural relation extractors. ", "page_idx": 1, "bbox": [82, 661.9252319335938, 290, 729.2676391601562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 15, "type": "text", "text": "In Section  2 , we outline some related works on distant supervision relation extraction. Next, we describe our adversarial learning strategy in Sec- tion  3 . In Section  4 , we show the stability analyses of DSGAN and the empirical evaluation results. And ﬁnally, we conclude in Section  5 . ", "page_idx": 1, "bbox": [72, 739.3362426757812, 290, 766.0316772460938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 16, "type": "text", "text": "", "page_idx": 1, "bbox": [307, 63.68726348876953, 525, 117.48074340820312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 17, "type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1, "bbox": [307, 138, 397, 151], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 18, "type": "text", "text": "To address the above-mentioned data sparsity is- sue,  Mintz et al.  ( 2009 ) ﬁrst align unlabeled text corpus with Freebase by distant supervision. However, distant supervision inevitably suffers from the wrong labeling problem. Instead of ex- plicitly removing noisy instances, the early works intend to suppress the noise.  Riedel et al.  ( 2010 ) adopt multi-instance single-label learning in rela- tion extraction;  Hoffmann et al.  ( 2011 ) and  Sur- deanu et al.  ( 2012 ) model distant supervision re- lation extraction as a multi-instance multi-label problem. ", "page_idx": 1, "bbox": [307, 167.20826721191406, 525, 329.3948059082031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 19, "type": "text", "text": "Recently, some deep-learning-based mod- els ( Zeng et al. ,  2014 ;  Shen and Huang ,  2016 ) have been proposed to solve relation extraction. Naturally, some works try to alleviate the wrong labeling problem with deep learning technique, and their denoising process is integrated into rela- tion extraction.  Zeng et al.  ( 2015 ) select one most plausible sentence to represent the relation be- tween entity pairs, which inevitably misses some valuable information. Lin et al.  ( 2016 ) calculate a series of soft attention weights for all sentences of one entity pair and the incorrect sentences can be down-weighted; Base on the same idea,  Ji et al. ( 2017 ) bring the useful entity information into the calculation of the attention weights. However, compared to these soft attention weight assign- ment strategies, recognizing the true positive samples from distant supervision dataset before relation extraction is a better choice.  Takamatsu et al.  ( 2012 ) build a noise-ﬁltering strategy based on the linguistic features extracted from many NLP tools, including NER and dependency tree, which inevitably suffers the error propagation problem; while we just utilize word embedding as the input information. In this work, we learn a true-positive identiﬁer (the generator) which is independent of the relation prediction of entity pairs, so it can be directly applied on top of any existing relation extraction classiﬁers. Then, we redistribute the false positive samples into the negative set, in which way to make full use of the distantly labeled resources. ", "page_idx": 1, "bbox": [307, 332.861328125, 525, 766.0318603515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 20, "type": "text", "text": "3 Adversarial Learning for Distant Supervision ", "text_level": 1, "page_idx": 2, "bbox": [69, 62, 260, 91], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 21, "type": "text", "text": "In this section, we introduce an adversarial learn- ing pipeline to obtain a robust generator which can automatically discover the true positive samples from the noisy distantly-supervised dataset with- out any supervised information. The overview of our adversarial learning process is shown in Fig- ure  2 . Given a set of distantly-labeled sentences, the generator tries to generate true positive sam- ples from it; But, these generated samples are re- garded as negative samples to train the discrimina- tor. Thus, when ﬁnishing scanning the DS positive dataset one time, the more true positive samples that the generator discovers, the sharper drop of performance the discriminator obtains. After ad- versarial training, we hope to obtain a robust gen- erator that is capable of forcing discriminator into maximumly losing its classiﬁcation ability. ", "page_idx": 2, "bbox": [71, 99.87000274658203, 290, 329.8025817871094], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 22, "type": "text", "text": "In the following section, we describe the adver- sarial training pipeline between the generator and the discriminator, including the pre-training strat- egy, objective functions and gradient calculation. Because the generator involves a discrete sampling step, we introduce a policy gradient method to cal- culate gradients for the generator. ", "page_idx": 2, "bbox": [71, 330.7401123046875, 290, 425.1806335449219], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 23, "type": "text", "text": "3.1 Pre-Training Strategy ", "text_level": 1, "page_idx": 2, "bbox": [70, 436, 199, 450], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 24, "type": "text", "text": "Both the generator and the discriminator require the pre-training process, which is the common set- ting for GANs ( Cai and Wang ,  2017 ;  Wang et al. , 2017 ). With the better initial parameters, the ad- versarial learning is prone to convergence. As pre- sented in Figure  2 , the discriminator is pre-trained with DS positive dataset  $P$   (label 1) and DS nega- tive set    $N^{D}$    (label 0). After our adversarial learn- ing process, we desire a strong generator that can, to the maximum extent, collapse the discrimina- tor. Therefore, the more robust generator can be obtained via competing with the more robust dis- criminator. So we pre-train the discriminator un- til the accuracy reaches   $90\\%$   or more. The pre- training of generator is similar to the discrimi- nator; however, for the negative dataset, we use another completely different dataset    $N^{G}$  , which makes sure the robustness of the experiment. Spe- cially, we let the generator overﬁts the DS posi- tive dataset    $P$  . The reason of this setting is that we hope the generator wrongly give high proba- bilities to all of the noisy DS positive samples at the beginning of the training process. Then, along with our adversarial learning, the generator learns to gradually decrease the probabilities of the false positive samples. ", "page_idx": 2, "bbox": [71, 454.80316162109375, 290, 766.0316162109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 25, "type": "text", "text": "", "page_idx": 2, "bbox": [306, 63.68720245361328, 526, 103.93167114257812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 26, "type": "text", "text": "3.2 Generative Adversarial Training for Distant Supervision Relation Extraction ", "text_level": 1, "page_idx": 2, "bbox": [306, 112, 521, 139], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 27, "type": "text", "text": "The generator and the discriminator of DSGAN are both modeled by simple CNN, because CNN performs well in understanding sentence ( Zeng et al. ,  2014 ), and it has less parameters than RNN- based networks. For relation extraction, the input information consists of the sentences and entity pairs; thus, as the common setting ( Zeng et al. , 2014 ;  Nguyen and Grishman ,  2015 ), we use both word embedding and position embedding to con- vert input instances into continuous real-valued vectors. ", "page_idx": 2, "bbox": [306, 143.3372344970703, 526, 291.9747619628906], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 28, "type": "text", "text": "What we desire the generator to do is to ac- curately recognize true positive samples. Unlike the generator applied in computer vision ﬁeld ( Im et al. ,  2016 ) that generates new image from the input noise, our generator just needs to discover true positive samples from the noisy DS posi- tive dataset. Thus, it is to realize the “sampling from a probability distribution” process of the dis- crete GANs (Figure  2 ). For a input sentence    $s_{j}$  , we deﬁne the probability of being true positive sample by generator as    $p_{G}(s_{j})$  . Similarly, for discriminator, the probability of being true pos- itive sample is represented as    $p_{D}(s_{j})$  . We de- ﬁne that one epoch means that one time scan- ning of the entire DS positive dataset. In or- der to obtain more feedbacks and make the train- ing process more efﬁcient, we split the DS posi- tive dataset    $P\\;=\\;\\{s_{1},s_{2},...,s_{j},...\\}$   into    $N$   bags  $B\\,=\\,\\{B^{1},B^{2},...B^{N}\\}$  , and the network parame- ters  $\\theta_{G},\\theta_{D}$   are updated when ﬁnishing processing one bag    $B_{i}{}^{1}$  . Based on the notion of adversarial learning, we deﬁne the objectives of the generator and the discriminator as follow, and they are al- ternatively trained towards their respective objec- tives. ", "page_idx": 2, "bbox": [306, 292.3782958984375, 526, 630.704833984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 29, "type": "text", "text": "Generator Suppose that the generator produces a set of probability distribution    $\\{p_{G}(s_{j})\\}_{j=1\\dots|B_{i}|}$  for a sentence bag    $B_{i}$  . Based on these probabili- ties, a set of sentence are sampled and we denote this set as  $T$  . ", "page_idx": 2, "bbox": [306, 637.2197265625, 526, 704.953857421875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 30, "type": "equation", "text": "\n$$\nT=\\{s_{j}\\},s_{j}\\sim p_{G}(s_{j}),j=1,2,...,|B_{i}|\n$$\n ", "text_format": "latex", "page_idx": 2, "bbox": [318, 723, 501, 739], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 31, "type": "text", "text": "1 The  bag  here has the different deﬁnition from the sen- tence  bag  of an entity pair mentioned in the Section  1 . ", "page_idx": 2, "bbox": [306, 743.6707153320312, 526, 765.4855346679688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 32, "type": "image", "page_idx": 3, "img_path": "layout_images/P18-1046_1.jpg", "bbox": [72, 63, 526, 264], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "DS Positive\nDataset\n\nBagx-1\n\nEpoch i Bag,\n\n| Bagest\n\nao\nSos\nS34\n\nSn\n\nGenerator\n\n———_>\n\nSampling\n\nDiscriminator |\n\nHigh-confidence gy,\nsamples\n\nlabel = 0\n\nPre-training\n\n", "vlm_text": "The image is a flowchart illustrating a machine learning process involving a generator and a discriminator. Here's a breakdown of the components:\n\n1. **DS Positive Dataset**: This is the input section where samples are drawn from.\n\n2. **Generator (G)**: \n   - Takes a set of samples (\\(s_1, s_2, \\ldots, s_n\\)) and produces probabilities (\\(p_1, p_2, \\ldots, p_n\\)).\n   - These probabilities determine the confidence of each sample.\n\n3. **Sampling**:\n   - Samples are categorized based on confidence: low-confidence samples (label = 1) and high-confidence samples (label = 0).\n\n4. **Discriminator (D)**:\n   - Receives the sampled sets to discriminate the samples.\n   - Has a pre-training phase where it is loaded with parameters from a positive and negative dataset.\n\n5. **Reward**:\n   - There is feedback (reward) loop influencing the generator, likely for improving predictions or decisions in subsequent iterations.\n\nThe image represents a typical Generative Adversarial Network (GAN) setup or a semi-supervised learning system, where data is classified and confidence assessed iteratively through epochs."}
{"layout": 33, "type": "text", "text": "Figure 2: An overview of the DSGAN training pipeline. The generator (denoted by  G ) calculates the probability distribution over a bag of DS positive samples, and then samples according to this probability distribution. The high-conﬁdence samples generated by G are regarded as true positive samples. The dis- criminator (denoted by  $\\mathbf{D}$  ) receives these high-conﬁdence samples but regards them as negative samples; conversely, the low-conﬁdence samples are still treated as positive samples. For the generated samples, G maximizes  the probability of being true positive; on the contrary,  D minimizes  this probability. ", "page_idx": 3, "bbox": [72, 295.0492858886719, 525, 376.9880676269531], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 34, "type": "text", "text": "This generated dataset    $T$   consists of the high- conﬁdence sentences, and is regard as true posi- tive samples by the current generator; however, it will be treated as the negative samples to train the discriminator. In order to challenge the discrimi- nator, the objective of the generator can be formu- lated as  maximizing  the following probabilities of the generated dataset    $T$  : ", "page_idx": 3, "bbox": [71, 401.4150390625, 290, 509.4055480957031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 35, "type": "equation", "text": "\n$$\nL_{G}=\\sum_{s_{j}\\in T}\\log p_{D}(s_{j})\n$$\n ", "text_format": "latex", "page_idx": 3, "bbox": [130, 519, 231, 551], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 36, "type": "text", "text": "Because    $L_{G}$   involves a discrete sampling step, so it cannot be directly optimized by gradient- based algorithm. We adopt a common approach: the policy-gradient-based reinforcement learning. The following section will give the detailed intro- duction of the setting of reinforcement learning. The parameters of the generator are continually updated until reaching the convergence condition. ", "page_idx": 3, "bbox": [71, 555.5760498046875, 290, 663.5654907226562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 37, "type": "text", "text": "Discriminator After the generator has gener- ated the sample subset    $T$   , the discriminator treats them as the negative samples; conversely, the rest part  $F=B_{i}\\!-\\!T$  is treated as positive samples. So, the objective of the discriminator can be formu- lated as  minimizing  the following cross-entropy loss function: ", "page_idx": 3, "bbox": [71, 671.1983642578125, 290, 766.031494140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 38, "type": "equation", "text": "\n$$\n\\begin{array}{r l}{\\lefteqn{L_{D}=-\\big(\\sum_{s_{j}\\in(B_{i}-T)}\\log p_{D}(s_{j})}}\\\\ &{\\quad\\quad\\quad+\\sum_{s_{j}\\in T}\\log(1-p_{D}(s_{j}))\\big)}\\end{array}\n$$\n ", "text_format": "latex", "page_idx": 3, "bbox": [344, 416, 505, 483], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 39, "type": "text", "text": "The update of discriminator is identical to the common binary classiﬁcation problem. Naturally, it can be simply optimized by any gradient-based algorithm. ", "page_idx": 3, "bbox": [307, 494.5980224609375, 525, 548.3905029296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 40, "type": "text", "text": "What needs to be explained is that, unlike the common setting of discriminator in previ- ous works, our discriminator  loads the same pre- trained parameter set at the beginning of each epoch  as shown in Figure  2 . There are two rea- sons. First, at the end of our adversarial training, what we need is a robust generator rather than a discriminator. Second, our generator is to sample data rather than generate new data from scratch; Therefore, the discriminator is relatively easy to be collapsed. So we design this new adversarial strat- egy: the robustest generator is yielded when the discriminator has the largest drop of performance in one epoch. In order to create the equal con- dition, the bag set    $B$   for each epoch is identical, including the sequence and the sentences in each Data:  DS positive set    $P$  , DS negative set    $N^{G}$    for generator G, DS negative set    $N^{D}$    for discriminator D Input:  Pre-trained   $\\mathbf{G}$   with parameters    $\\theta_{G}$   on dataset   $(P,\\,N^{G})$  ; Pre-trained   $\\mathrm{D}$   with parameters    $\\theta_{D}$   on dataset  $(P,N^{D})$  ", "page_idx": 3, "bbox": [307, 549.6480712890625, 525, 766.031494140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 41, "type": "text", "text": "", "page_idx": 4, "bbox": [71, 75.22602081298828, 528, 119.42849731445312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 42, "type": "text", "text": "Output:  Adversarially trained generator G ", "page_idx": 4, "bbox": [71, 119.43931579589844, 261.7961120605469, 133.63204956054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 43, "type": "text", "text": "1:  Load parameters    $\\theta_{G}$   for  $\\mathbf{G}$  2:  Split    $P$   into the bag sequence    $P=\\{B^{1},B^{2},...,B^{i},...,B^{N}\\}$  ", "page_idx": 4, "bbox": [78, 133.3810577392578, 355, 160.07650756835938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 44, "type": "text", "text": "3:  repeat ", "text_level": 1, "page_idx": 4, "bbox": [77, 162, 122, 171.75], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 45, "type": "text", "text": "4: Load parameters  $\\theta_{D}$   for D 5:  $G_{G}\\gets0,G_{D}\\gets0$  6: for    $B_{i}\\in P,i=1$   to  $N$   do 7: Compute the probability  $p_{G}(s_{j})$   for each sentence  $s_{j}$   in    $B_{i}$  8: Obtain the generated part    $T$   by sampling according to    $\\{p_{G}(s_{j})\\}_{j=1\\dots|B|}$   and the rest set  $F=$  B i  −  $\\begin{array}{r l}&{T}\\\\ &{\\quad G_{D}\\gets-\\frac{1}{|P|}\\{\\bigtriangledown\\theta_{D}\\sum^{T}\\log(1-p_{D}(s_{j}))+\\bigtriangledown\\theta_{D}\\sum^{F}\\log p_{D}(s_{j})\\}}\\\\ &{\\quad\\theta_{D}\\gets\\theta_{D}-\\alpha_{D}G_{D}}\\\\ &{\\quad\\mathrm{CalcLife\\,the\\,reward}\\,r}\\\\ &{\\quad G_{G}\\gets\\frac{1}{|T|}\\sum^{T}r\\bigtriangledown\\theta_{G}\\log p_{G}(s_{j})}\\\\ &{\\quad\\theta_{G}\\gets\\theta_{G}+\\alpha_{G}G_{G}}\\end{array}$  9: 12: 13: 14: end for ", "page_idx": 4, "bbox": [71, 174, 528, 336.8700256347656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 46, "type": "text", "text": "15: Compute the accuracy    $A C C_{D}$   on    $N^{D}$    with the current    $\\theta_{D}$  ", "page_idx": 4, "bbox": [71, 332.6610107421875, 361, 351.4534912109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 47, "type": "text", "text": "16:  until    $A C C_{D}$   no longer drops ", "page_idx": 4, "bbox": [71, 349.7762756347656, 221, 365.0024719238281], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 48, "type": "text", "text": "17:  Save    $\\theta_{G}$  ", "page_idx": 4, "bbox": [71, 363.718017578125, 127, 376.8634948730469], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 49, "type": "text", "text": "bag  $B_{i}$  . ", "page_idx": 4, "bbox": [71, 400.8630065917969, 104, 414.00848388671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 50, "type": "text", "text": "Optimizing Generator The objective of the generator is similar to the objective of the one-step reinforcement learning problem: Maximizing the expectation of a given function of samples from a parametrized probability distribution. Therefore, we use a policy gradient strategy to update the generator. Corresponding to the terminology of reinforcement learning,    $s_{j}$   is the  state  and    $P_{G}(s_{j})$  is the  policy . In order to better reﬂect the quality of the generator, we deﬁne the reward  $r$   from two angles: ", "page_idx": 4, "bbox": [71, 421.9042663574219, 290, 570.9345092773438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 51, "type": "text", "text": "•  As the common setting in adversarial learn- ing, for the generated sample set, we hope the conﬁdence of being positive samples by the discriminator becomes higher. Therefore, the ﬁrst component of our reward is formu- lated as below: ", "page_idx": 4, "bbox": [83, 581.97705078125, 290, 662.8685302734375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 52, "type": "equation", "text": "\n$$\nr_{1}=\\frac{1}{|T|}\\sum_{s_{j}\\in T}p_{D}(s_{j})-b_{1}\n$$\n ", "text_format": "latex", "page_idx": 4, "bbox": [131, 676, 252, 711], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 53, "type": "text", "text": "the function of  $b_{1}$   is to reduce variance during reinforcement learning. ", "page_idx": 4, "bbox": [93, 716, 290, 742.9144287109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 54, "type": "text", "text": "•  The second component is from the average ", "page_idx": 4, "bbox": [83, 752.885986328125, 290, 773.438720703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 55, "type": "text", "text": "prediction probability of    $N^{D}$  , ", "page_idx": 4, "bbox": [328, 400, 458.8402404785156, 414.0084533691406], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 56, "type": "equation", "text": "\n$$\n\\tilde{p}=\\frac{1}{|N^{D}|}\\sum_{s_{j}\\in N^{D}}p_{D}(s_{j})\n$$\n ", "text_format": "latex", "page_idx": 4, "bbox": [370, 417, 483, 453], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 57, "type": "text", "text": " $N^{D}$    participates the pre-training process of the discriminator, but not the adversarial training process. When the classiﬁcation ca- pacity of discriminator declines, the accuracy of being predicted as negative sample on    $N^{D}$  gradually drops; thus,  $\\tilde{p}$   increases. In other words, the generator becomes better. There- fore, for epoch    $k$  , after processing the bag    $B_{i}$  , reward    $r_{2}$   is calculated as below, ", "page_idx": 4, "bbox": [328, 456.19696044921875, 526, 583.3314208984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 58, "type": "equation", "text": "\n$$\n\\begin{array}{r}{r_{2}=\\eta(\\tilde{p}_{i}^{k}-b_{2})\\qquad\\qquad\\qquad}\\\\ {b_{2}\\!=\\!\\operatorname*{max}\\{\\tilde{p}_{i}^{m}\\},m\\!=\\!1...,k\\!-\\!1}\\end{array}\n$$\n ", "text_format": "latex", "page_idx": 4, "bbox": [371, 600, 506, 635], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 59, "type": "text", "text": " $b_{2}$   has the same function as    $b_{1}$  . The gradient of    $L_{G}$   can be formulated as below: ", "page_idx": 4, "bbox": [328, 639.5719604492188, 462.75030517578125, 654.3533935546875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 60, "type": "text", "text": "", "page_idx": 4, "bbox": [318.18505859375, 659.2169799804688, 526, 674.0513916015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 61, "type": "equation", "text": "\n$$\n\\begin{array}{l}{\\displaystyle\\bigtriangledown\\theta_{D}L_{G}=\\sum_{s_{j}\\in B_{i}}\\mathbb{E}_{s_{j}\\sim p_{G}(s_{j})}r\\bigtriangledown_{\\theta_{G}}\\log p_{G}\\big(s_{j}\\big)}\\\\ {\\displaystyle}\\\\ {\\displaystyle=\\frac{1}{|T|}\\sum_{s_{j}\\in T}r\\bigtriangledown_{\\theta_{G}}\\log p_{G}\\big(s_{j}\\big)}\\end{array}\n$$\n ", "text_format": "latex", "page_idx": 4, "bbox": [316, 687, 516, 754], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 62, "type": "text", "text": "3.3 Cleaning Noisy Dataset with Generator ", "text_level": 1, "page_idx": 5, "bbox": [71, 64, 280, 76], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 63, "type": "text", "text": "After our adversarial learning process, we obtain one generator for one relation type; These genera- tors possess the capability of generating true pos- itive samples for the corresponding relation type. Thus, we can adopt the generator to ﬁlter the noise samples from distant supervision dataset. Simply and clearly, we utilize the generator as a binary classiﬁer. In order to reach the maximum utiliza- tion of data, we develop a strategy: for an en- tity pair with a set of annotated sentences, if all of these sentences are determined as false nega- tive by our generator, this entity pair will be redis- tributed into the negative set. Under this strategy, the scale of distant supervision training set keeps unchanged. ", "page_idx": 5, "bbox": [72, 81.16400909423828, 290, 283.9985656738281], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 64, "type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5, "bbox": [71, 294, 155, 307], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 65, "type": "text", "text": "This paper proposes an adversarial learning strat- egy to detect true positive samples from the noisy distant supervision dataset. Due to the absence of supervised information, we deﬁne a genera- tor to heuristically learn to recognize true posi- tive samples through competing with a discrim- inator. Therefore, our experiments are intended to demonstrate that our DSGAN method possess this capability. To this end, we ﬁrst brieﬂy intro- duce the dataset and the evaluation metrics. Em- pirically, the adversarial learning process, to some extent, has instability; Therefore, we next illus- trate the convergence of our adversarial training process. Finally, we demonstrate the efﬁciency of our generator from two angles: the quality of the generated samples and the performance on the widely-used distant supervision relation extraction task. ", "page_idx": 5, "bbox": [72, 315.09405517578125, 290, 558.5765991210938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 66, "type": "text", "text": "4.1 Evaluation and Implementation Details ", "text_level": 1, "page_idx": 5, "bbox": [71, 568, 281, 580], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 67, "type": "text", "text": "The Reidel dataset 2   ( Riedel et al. ,  2010 ) is a commonly-used distant supervision relation ex- traction dataset. Freebase is a huge knowledge base including billions of triples: the entity pair and the speciﬁc relationship between them. Given these triples, the sentences of each entity pair are selected from the New York Times corpus(NYT). Entity mentions of NYT corpus are recognized by the Stanford named entity recognizer ( Finkel et al. , 2005 ). There are 52 actual relationships and a spe- cial relation    $N A$   which indicates there is no rela- tion between head and tail entities. Entity pairs of ", "page_idx": 5, "bbox": [72, 581.1151733398438, 290, 747.2605590820312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 68, "type": "table", "page_idx": 5, "img_path": "layout_images/P18-1046_2.jpg", "table_footnote": "Table 1: Hyperparameter settings of the generator and the discriminator. ", "bbox": [306, 62, 526, 176], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Hyperparameter Value\n\nCNN Window c,,, kernel size cy, 3, 100\nWord embedding de, |V| 50, 114042\nPosition embedding d, 5\nLearning rate of G, D le-5, le-4\n\n", "vlm_text": "The table lists various hyperparameters and their values:\n\n1. **CNN Window \\(c_w\\), kernel size \\(c_k\\)**: 3, 100\n2. **Word embedding \\(d_e\\), \\(|V|\\)**: 50, 114042\n3. **Position embedding \\(d_p\\)**: 5\n4. **Learning rate of G, D**: 1e-5, 1e-4"}
{"layout": 69, "type": "text", "text": " $N A$   are deﬁned as the entity pairs that appear in the same sentence but are not related according to Freebase. ", "page_idx": 5, "bbox": [306, 193, 525, 233.68753051757812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 70, "type": "text", "text": "Due to the absence of the corresponding labeled dataset, there is not a ground-truth test dataset to evaluate the performance of distant supervision re- lation extraction system. Under this circumstance, the previous work adopt the held-out evaluation to evaluate their systems, which can provide an approximate measure of precision without requir- ing costly human evaluation. It builds a test set where entity pairs are also extracted from Free- base. Similarly, relation facts that discovered from test articles are automatically compared with those in Freebase. CNN is widely used in relation clas- siﬁcation ( Santos et al. ,  2015 ;  Qin et al. ,  2017 ), thus the generator and the discriminator are both modeled as a simple CNN with the window size  $c_{w}$   and the kernel size    $c_{k}$  . Word embedding is di- rectly from the released word embedding matrix by  Lin et al.    $(2016)^{3}$  . Position embedding has the same setting with the previous works: the maxi- mum distance of  $-30$   and 30. Some detailed hy- perparameter settings are displayed in Table  1 . ", "page_idx": 5, "bbox": [306, 234.09107971191406, 525, 518.2206420898438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 71, "type": "text", "text": "4.2 Training Process of DSGAN ", "text_level": 1, "page_idx": 5, "bbox": [307, 527, 463, 540], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 72, "type": "text", "text": "Because adversarial learning is widely regarded as an effective but unstable technique, here we illustrate some property changes during the training process, in which way to indicate the learning trend of our proposed approach. We use 3 relation types as the examples: /busi- ness/person/company ,  /people/person/place lived and /location/neighborhood/neighborhood of . Because they are from three major classes ( bussi- ness ,  people ,  location ) of Reidel dataset and they all have enough distant-supervised instances. The ﬁrst row in Figure  3  shows the classiﬁcation ability change of the discriminator during training. The accuracy is calculated from the negative set  $N^{D}$  . At the beginning of adversarial learning, the ", "page_idx": 5, "bbox": [306, 544.6221923828125, 525, 747.4564208984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 73, "type": "image", "page_idx": 6, "img_path": "layout_images/P18-1046_3.jpg", "bbox": [75, 62, 515, 290], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "ot\n\n098\n\nAccuracy\n\nows\n\nos\n\nos7\nos\nost\nVoss\n8\nBoss\nTos\n079\n076\non\n\no7\n\n/business/person/company\n\n/people/person/place_lived\n\nNocation/neighborhood/neighborhood_of\n\n101\n1\nos\nos os\naot ose\nBo z\n3 $ os\n8 ass g\n< % o96\nom\noss\n07\n076 Ls\non os\nreaes e739 OHRRM BS eT wo 2B Mas a6 a7 pases 67 8 9 DURE ME 7\nBag Sequence Bag Sequence Bag Sequence\nIbusiness/personicompany ey /people/person/place_lived 103 /location/neighborhood/neighborhood_of\n096 1\n093 are cael SSSSSSTs sees\n0s ose\n087 oo\nBoa Sess\nBost Boss\npov o\nose\n07s\n+ Random on Random ” “= Random\na 076\n-* Pre-training - Pre-training * Pre-training\n“= DSGAN 086 DSGAN 073 “= DSGAN\n062 07\n6 8 1 2 mw 1 20 2 2m 2% 2 226 28 6 8 © 2 Mw me 2 2 Mm 2% 28\n\nEpoch\n\nEpoch\n\n", "vlm_text": "This image consists of six line graphs organized into two rows and three columns. \n\nThe top row of graphs shows \"Accuracy\" on the y-axis, plotted against \"Bag Sequence\" on the x-axis. The categories for each graph are labeled above each chart as \"/business/person/company,\" \"/people/person/place_lived,\" and \"/location/neighborhood/neighborhood_of.\" In each of these graphs, accuracy trends are plotted for different methods, represented by lines of varied shades of blue and a black line. Generally, the graphs show a downward trend in accuracy as the bag sequence increases.\n\nThe bottom row of graphs shows the \"F1 Score\" on the y-axis, plotted against \"Epoch\" on the x-axis, for the same categories as the top row. In these graphs, the methods are indicated by different symbols and colors: black triangles for \"Random,\" blue circles for \"Pre-training,\" and red squares for \"DSGAN.\" These graphs generally show an upward trend in F1 Score as epochs increase, with DSGAN consistently achieving the highest F1 scores.\n\nOverall, these graphs appear to represent the performance of different learning strategies across various categories, evaluating them in terms of accuracy and F1 score over increasing bag sequences and epochs, respectively."}
{"layout": 74, "type": "text", "text": "Figure 3: The convergence of the DSGAN training process for 3 relation types and the performance of their corresponding generators. The ﬁgures in the ﬁrst row present the performance change on    $N^{D}$    in some speciﬁc epochs during processing the    $B\\,=\\,\\{B^{1},B^{2},\\bar{...}B^{N}\\}$  . Each curve stands for one epoch; The color of curves become darker as long as the epoch goes on. Because the discriminator reloads the pre-trained parameters at the beginning of each epoch, all curves start from the same point for each relation type; Along with the adversarial training, the generator gradually collapses the discriminator. The ﬁgures in the second row reﬂect the performance of generators from the view of the difﬁculty level of training with the positive datasets that are generated by different strategies. Based on the noisy DS positive dataset    $P$  ,  DSGAN  represents that the cleaned positive dataset is generated by our DSGAN generator;  Random  means that the positive set is randomly selected from    $P$  ;  Pre-training  denotes that the dataset is selected according to the prediction probability of the pre-trained generator. These three new positive datasets are in the same size. ", "page_idx": 6, "bbox": [71, 317.2080078125, 525, 479.3945617675781], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 75, "type": "text", "text": "discriminator performs well on    $N^{D}$  ; moreover,  $N^{D}$    is not used during adversarial training. Therefore, the accuracy on    $N^{D}$    is the criterion to reﬂect the performance of the discriminator. In the early epochs, the generated samples from the generator increases the accuracy, because it has not possessed the ability of challenging the discriminator; however, as the training epoch increases, this accuracy gradually decreases, which means the discriminator becomes weaker. It is because the generator gradually learn to generate more accurate true positive samples in each bag. After the proposed adversarial learning process, the generator is strong enough to collapse the discriminator. Figure  4  gives more intuitive display of the trend of accuracy. Note that there is a critical point of the decline of accuracy for each presented relation types. It is because that the chance we give the generator to challenge the discriminator is just one time scanning of the noisy dataset; this critical point is yielded when the generator has already been robust enough. Thus, we stop the training process when the model reaches this critical point. To sum up, the capability of our generator can steadily increases, which indicates that DSGAN is a robust adversarial learning strategy. ", "page_idx": 6, "bbox": [71, 488, 290, 760.3295288085938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 76, "type": "text", "text": "", "page_idx": 6, "bbox": [307, 489.74908447265625, 525, 584.1895751953125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 77, "type": "text", "text": "4.3 Quality of Generator ", "text_level": 1, "page_idx": 6, "bbox": [306, 598, 430, 610], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 78, "type": "text", "text": "Due to the absence of supervised information, we validate the quality of the generator from another angle. Combining with Figure  1 , for one rela- tion type, the true positive samples must have ev- idently higher relevance (the cluster of purple cir- cles). Therefore, a positive set with more true positive samples is easier to be trained; In other words, the convergence speed is faster and the ﬁt- ting degree on training set is higher. Based on this , we present the comparison tests in the sec- ond row of Figure  3 . We build three positive ", "page_idx": 6, "bbox": [307, 617.3941040039062, 525, 766.0315551757812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 79, "type": "image", "page_idx": 7, "img_path": "layout_images/P18-1046_4.jpg", "img_caption": "Figure 4: The performance change of the discrim- inator on    $N^{D}$    during the training process. Each point in the curves records the prediction accuracy on    $N^{D}$    when ﬁnishing each epoch. We stop the training process when this accuracy no longer de- creases. ", "bbox": [70, 65, 291, 286], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "1.05\n\n095\n\n09\n\noss\n\nAccuracy\n\n06s,\n\n06\n\noss\n\nos\n\n“1 /business/person/company\n~#-/people/person/place_lived\n\n-* /location/neighborhood/neighborhood_of\n\nso eas\nEpoch\n\nss\n\n6s\n\n7s\n\nas\n", "vlm_text": "The image is a line graph displaying the performance change of a discriminator on $N^{D}$ during the training process over multiple epochs. The x-axis represents the number of epochs (ranging from 5 to 85), while the y-axis indicates the accuracy (ranging from 0.5 to 1.05). There are three curves on the graph, each representing a different category:\n\n1. **Blue curve with triangular markers**: Represents the category \"/business/person/company.\" The accuracy starts near 1, decreases over time, and seems to stabilize around 0.85.\n\n2. **Red curve with square markers**: Represents the category \"/people/person/place_lived.\" The accuracy also starts near 1, decreases more steeply compared to the blue curve, and appears to stabilize slightly below 0.75.\n\n3. **Black curve with circular markers**: Represents the category \"/location/neighborhood/neighborhood_of.\" This curve starts at accuracy 1 and remains consistently high, slightly decreasing over time, but largely maintaining an accuracy above 0.95.\n\nThe training process was stopped when the discriminator's accuracy on $N^{D}$ no longer decreased significantly. Each point on the curves marks the prediction accuracy for each epoch.\n\n"}
{"layout": 80, "type": "text", "text": "datasets from the noisy distant supervision dataset  $P$  : the randomly-selected positive set, the positive set base on the pre-trained generator and the pos- itive set base on the DSGAN generator. For the pre-trained generator, the positive set is selected according to the probability of being positive from high to low. These three sets have the same size and are accompanied by the same negative set. Obviously, the positive set from the DSGAN gen- erator yields the best performance, which indicates that our adversarial learning process is able to pro- duce a robust true-positive generator. In addition, the pre-trained generator also has a good perfor- mance; however, compared with the DSGAN gen- erator, it cannot provide the boundary between the false positives and the true positives. ", "page_idx": 7, "bbox": [70, 297.6500244140625, 290, 514.0335693359375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 81, "type": "text", "text": "4.4 Performance on Distant Supervision Relation Extraction ", "text_level": 1, "page_idx": 7, "bbox": [71, 528, 267, 555], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 82, "type": "text", "text": "Based on the proposed adversarial learning pro- cess, we obtain a generator that can recognize the true positive samples from the noisy distant super- vision dataset. Naturally, the improvement of dis- tant supervision relation extraction can provide a intuitive evaluation of our generator. We adopt the strategy mentioned in Section  3.3  to relocate the dataset. After obtaining this redistributed dataset, we apply it to train the recent state-of-the-art mod- els and observe whether it brings further improve- ment for these systems.  Zeng et al.  ( 2015 ) and  Lin et al.  ( 2016 ) are both the robust models to solve wrong labeling problem of distant supervision re- lation extraction. According to the comparison displayed in Figure  5  and Figure  6 , all four mod- ", "page_idx": 7, "bbox": [70, 563.1970825195312, 290, 766.031494140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 83, "type": "image", "page_idx": 7, "img_path": "layout_images/P18-1046_5.jpg", "img_caption": "Figure 5: Aggregate PR curves of CNN˙based model. ", "bbox": [306, 65, 527, 270], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "noon\n\n9\n\n—4— CNN+ONE\n—2— CNN+ONE+DSGAN\n—2—CNN+ATT\n—*—CNN+ATT+DSGAN\n\n° 0.05 a4 018 02\nRecall\n\n028 03 0.38\n\n", "vlm_text": "The image is a Precision-Recall (PR) curve graph that represents the performance of different models, labeled as CNN-based models, in terms of precision and recall. The graph compares four different configurations of a CNN-based model:\n\n1. **CNN+ONE** - Represented with blue triangles.\n2. **CNN+ONE+DSGAN** - Represented with red circles.\n3. **CNN+ATT** - Represented with black squares.\n4. **CNN+ATT+DSGAN** - Represented with magenta diamonds.\n\nThe x-axis shows the recall values ranging from 0 to 0.4, while the y-axis shows the precision values ranging from 0.3 to 1.0. Each curve illustrates the trade-off between precision and recall for the respective model configuration. The legend at the top right corner indicates which symbol corresponds to each model. The curves visually depict how well each model configuration balances precision and recall, which are crucial metrics in classification problems, especially in contexts where false positives and false negatives have different impacts."}
{"layout": 84, "type": "image", "page_idx": 7, "img_path": "layout_images/P18-1046_6.jpg", "img_caption": "Figure 6: Aggregate PR curves of PCNN˙based model. ", "bbox": [306, 291, 527, 492], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "—4— PCNN+ONE\n—°~ PCNN+ONE+DSGAN:\n—s—PCNN+ATT\n\n~*~ PCNN+ATT+DSGAN\n\n09\n\n° 08 04 018 02 025 03 0.5 04\nRecall\n", "vlm_text": "The image is a graph displaying aggregate Precision-Recall (PR) curves for models based on PCNN (Piecewise Convolutional Neural Network). The curves compare four different approaches:\n\n1. PCNN + ONE (blue line with triangles)\n2. PCNN + ONE + DSGAN (red line with circles)\n3. PCNN + ATT (black line with squares)\n4. PCNN + ATT + DSGAN (magenta line with stars)\n\nThe x-axis represents Recall, while the y-axis represents Precision. The graph shows how each model's performance varies as recall changes. The PCNN + ATT + DSGAN configuration generally appears to maintain higher precision at various recall levels compared to the others."}
{"layout": 85, "type": "text", "text": "els   $(C N N+O N E$  ,    $C N N{+}A T T$  ,    $P C N N+O N E$   and  $P C N N{+}A T T)$  ) achieve further improvement. ", "page_idx": 7, "bbox": [306, 520, 525, 546.8614501953125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 86, "type": "text", "text": "Even though  Zeng et al.  ( 2015 ) and  Lin et al. ( 2016 ) are designed to alleviate the inﬂuence of false positive samples, both of them merely focus on the noise ﬁltering in the sentence bag of en- tity pairs.  Zeng et al.  ( 2015 ) combine at-least-one multi-instance learning with deep neural network to extract only one active sentence to represent the target entity pair;  Lin et al.  ( 2016 ) assign soft at- tention weights to the representations of all sen- tences of one entity pair, then employ the weighted sum of these representations to predict the rela- tion between the target entity pair. However, from our manual inspection of Riedel dataset ( Riedel et al. ,  2010 ), we found another false positive case that all the sentences of a speciﬁc entity pair are wrong; but the aforementioned methods overlook ", "page_idx": 7, "bbox": [306, 549.6480102539062, 525, 766.0314331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 87, "type": "table", "page_idx": 8, "img_path": "layout_images/P18-1046_7.jpg", "table_footnote": "Table 2: Comparison of AUC values between previous studies and our DSGAN method. The  $p$  - value  stands for the result of t-test evaluation. ", "bbox": [71, 61, 291, 183], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Model - +DSGAN p-value\nCNN+ONE 0.177 0.189 4.37e-04\nCNN+ATT 0.219 0.226 8.36e-03\nPCNN+ONE 0.206 0.221 2.89e-06\nPCNN+ATT 0.253 0.264 2.34e-03\n\n", "vlm_text": "The table presents a comparison of model performance with and without the addition of DSGAN across different models. Specifically, it includes:\n\n1. **Model Column:**\n   - CNN+ONE\n   - CNN+ATT\n   - PCNN+ONE\n   - PCNN+ATT\n\n2. **Performance without DSGAN (- Column):**\n   - CNN+ONE: 0.177\n   - CNN+ATT: 0.219\n   - PCNN+ONE: 0.206\n   - PCNN+ATT: 0.253\n\n3. **Performance with DSGAN (+DSGAN Column):**\n   - CNN+ONE: 0.189\n   - CNN+ATT: 0.226\n   - PCNN+ONE: 0.221\n   - PCNN+ATT: 0.264\n\n4. **P-value Column:**\n   - CNN+ONE: 4.37e-04\n   - CNN+ATT: 8.36e-03\n   - PCNN+ONE: 2.89e-06\n   - PCNN+ATT: 2.34e-03\n\nThe +DSGAN column values are bolded, indicating the enhancement in performance metrics when DSGAN is applied. The p-values suggest the statistical significance of the changes in performance between the methods without DSGAN and those with DSGAN for each model configuration."}
{"layout": 88, "type": "text", "text": "this case, while the proposed method can solve this problem. Our DSGAN pipeline is independent of the relation prediction of entity pairs, so we can adopt our generator as the true-positive indicator to ﬁlter the noisy distant supervision dataset be- fore relation extraction, which explains the origin of these further improvements in Figure  5  and Fig- ure  6 . In order to give more intuitive compari- son, in Table  2 , we present the AUC value of each PR curve, which reﬂects the area size under these curves. The larger value of AUC reﬂects the better performance. Also, as can be seen from the result of t-test evaluation, all the p-values are less than 5e-02, so the improvements are obvious. ", "page_idx": 8, "bbox": [72, 202.32203674316406, 290, 391.6075744628906], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 89, "type": "text", "text": "5 Conclusion ", "text_level": 1, "page_idx": 8, "bbox": [71, 402, 147, 415], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 90, "type": "text", "text": "Distant supervision has become a standard method in relation extraction. However, while it brings the convenience, it also introduces noise in dis- tantly labeled sentences. In this work, we propose the ﬁrst generative adversarial training method for robust distant supervision relation extraction. More speciﬁcally, our framework has two com- ponents: a generator that generates true positives, and a discriminator that tries to classify positive and negative data samples. With adversarial train- ing, our goal is to gradually decrease the perfor- mance of the discriminator, while the generator improves the performance for predicting true pos- itives when reaching equilibrium. Our approach is model-agnostic, and thus can be applied to any distant supervision model. Empirically, we show that our method can signiﬁcantly improve the per- formances of many competitive baselines on the widely used New York Time dataset. ", "page_idx": 8, "bbox": [72, 423.4070739746094, 290, 680.4385986328125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 91, "type": "text", "text": "Acknowledge ", "text_level": 1, "page_idx": 8, "bbox": [72, 691, 140, 704], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 92, "type": "text", "text": "This work was supported by National Natural Sci- ence Foundation of China (61702047), Beijing Natural Science Foundation (4174098), the Fun- damental Research Funds for the Central Univer- sities (2017RC02) and National Natural Science Foundation of China (61703234) ", "page_idx": 8, "bbox": [72, 712.2381591796875, 290, 766.0316162109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 93, "type": "text", "text": "", "page_idx": 8, "bbox": [307, 63.68720245361328, 525, 90.38168334960938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 94, "type": "text", "text": "References ", "text_level": 1, "page_idx": 8, "bbox": [307, 113, 363, 126], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 95, "type": "text", "text": "Razvan Bunescu and Raymond J Mooney. 2005. Sub- sequence kernels for relation extraction. In  NIPS , pages 171–178. ", "page_idx": 8, "bbox": [307, 131.6087646484375, 525, 165.5316619873047], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 96, "type": "text", "text": "Liwei Cai and William Yang Wang. 2017. Kbgan: Ad- versarial learning for knowledge graph embeddings. arXiv preprint arXiv:1711.04071 . ", "page_idx": 8, "bbox": [307, 172.730712890625, 525, 206.6536102294922], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 97, "type": "text", "text": "Jenny Rose Finkel, Trond Grenager, and Christopher Manning. 2005. Incorporating non-local informa- tion into information extraction systems by gibbs sampling. In  Proceedings of the 43rd annual meet- ing on association for computational linguistics , pages 363–370. Association for Computational Lin- guistics. ", "page_idx": 8, "bbox": [307, 213.8526611328125, 525, 291.61053466796875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 98, "type": "text", "text": "Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and Yoshua Bengio. 2014. Generative ad- versarial nets. In  Advances in neural information processing systems , pages 2672–2680. ", "page_idx": 8, "bbox": [307, 298.8095703125, 525, 354.65045166015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 99, "type": "text", "text": "Zhou GuoDong, Su Jian, Zhang Jie, and Zhang Min. 2005. Exploring various knowledge in relation ex- traction. In  Proceedings of the 43rd annual meeting on association for computational linguistics , pages 427–434. Association for Computational Linguis- tics. ", "page_idx": 8, "bbox": [307, 361.8495178222656, 525, 428.6494140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 100, "type": "text", "text": "Raphael Hoffmann, Congle Zhang, Xiao Ling, Luke Zettlemoyer, and Daniel S Weld. 2011. Knowledge- based weak supervision for information extraction of overlapping relations. In  Proceedings of the 49th Annual Meeting of the Association for Computa- tional Linguistics: Human Language Technologies- Volume 1 , pages 541–550. Association for Compu- tational Linguistics. ", "page_idx": 8, "bbox": [307, 435.8484802246094, 525, 524.5653686523438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 101, "type": "text", "text": "Daniel Jiwoong Im, Chris Dongjoo Kim, Hui Jiang, and Roland Memisevic. 2016. Generating images with recurrent adversarial networks.  arXiv preprint arXiv:1602.05110 . ", "page_idx": 8, "bbox": [307, 531.764404296875, 525, 576.6463623046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 102, "type": "text", "text": "Guoliang Ji, Kang Liu, Shizhu He, Jun Zhao, et al. 2017. Distant supervision for relation extraction with sentence-level attention and entity descriptions. In  AAAI , pages 3060–3066. ", "page_idx": 8, "bbox": [307, 583.8453979492188, 525, 628.7263793945312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 103, "type": "text", "text": "Yankai Lin, Shiqi Shen, Zhiyuan Liu, Huanbo Luan, and Maosong Sun. 2016. Neural relation extraction with selective attention over instances. In  ACL (1) . ", "page_idx": 8, "bbox": [307, 635.9263916015625, 525, 669.8483276367188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 104, "type": "text", "text": "Mike Mintz, Steven Bills, Rion Snow, and Dan Juraf-sky. 2009. Distant supervision for relation extrac- tion without labeled data. In  Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP: Vol- ume 2-Volume 2 , pages 1003–1011. Association for Computational Linguistics. ", "page_idx": 8, "bbox": [307, 677.04736328125, 525, 765.7653198242188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 105, "type": "text", "text": "Thien Huu Nguyen and Ralph Grishman. 2015. Event detection and domain adaptation with convolutional neural networks. In  ACL (2) , pages 365–371. Pengda Qin, Weiran Xu, and Jun Guo. 2017. De- signing an adaptive attention mechanism for relation classiﬁcation. In  Neural Networks (IJCNN), 2017 International Joint Conference on , pages 4356– 4362. IEEE. Alec Radford, Luke Metz, and Soumith Chintala. 2015. Unsupervised representation learning with deep convolutional generative adversarial networks. arXiv preprint arXiv:1511.06434 . Sebastian Riedel, Limin Yao, and Andrew McCal- lum. 2010. Modeling relations and their mentions without labeled text. In  Machine Learning and Knowledge Discovery in Databases , pages 148–163. Springer. Benjamin Roth, Tassilo Barth, Michael Wiegand, and Dietrich Klakow. 2013. A survey of noise reduction methods for distant supervision. In  Proceedings of the 2013 workshop on Automated knowledge base construction , pages 73–78. ACM. Cicero Nogueira dos Santos, Bing Xiang, and Bowen Zhou. 2015. Classifying relations by ranking with convolutional neural networks. arXiv preprint arXiv:1504.06580 . Yatian Shen and Xuanjing Huang. 2016. Attention- based convolutional neural network for semantic re- lation extraction. In  Proceedings of COLING 2016, the 26th International Conference on Computational Linguistics: Technical Papers . Mihai Surdeanu, Julie Tibshirani, Ramesh Nallapati, and Christopher D Manning. 2012. Multi-instance multi-label learning for relation extraction. In  Pro- ceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Com- putational Natural Language Learning , pages 455– 465. Association for Computational Linguistics. Shingo Takamatsu, Issei Sato, and Hiroshi Nakagawa. 2012. Reducing wrong labels in distant supervi- sion for relation extraction. In  Proceedings of the 50th Annual Meeting of the Association for Compu- tational Linguistics: Long Papers-Volume 1 , pages 721–729. Association for Computational Linguis- tics. Jun Wang, Lantao Yu, Weinan Zhang, Yu Gong, Yinghui Xu, Benyou Wang, Peng Zhang, and Dell Zhang. 2017. Irgan: A minimax game for uni- fying generative and discriminative information re- trieval models. In  Proceedings of the 40th Interna- tional ACM SIGIR conference on Research and De- velopment in Information Retrieval , pages 515–524. ACM. Yongqin Xian, Bernt Schiele, and Zeynep Akata. 2017. Zero-shot learning-the good, the bad and the ugly. arXiv preprint arXiv:1703.04394 . ", "page_idx": 9, "bbox": [71, 64.56158447265625, 290, 765.7651977539062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 106, "type": "text", "text": "Dmitry Zelenko, Chinatsu Aone, and Anthony Richardella. 2003. Kernel methods for relation ex- traction. Journal of machine learning research , 3(Feb):1083–1106. Daojian Zeng, Kang Liu, Yubo Chen, and Jun Zhao. 2015. Distant supervision for relation extraction via piecewise convolutional neural networks. In  Pro- ceedings of the 2015 Conference on Empirical Meth- ods in Natural Language Processing (EMNLP), Lis- bon, Portugal , pages 17–21. Daojian Zeng, Kang Liu, Siwei Lai, Guangyou Zhou, Jun Zhao, et al. 2014. Relation classiﬁcation via convolutional deep neural network. In  COLING , pages 2335–2344. ", "page_idx": 9, "bbox": [307, 64.561279296875, 525, 236.9650115966797], "page_size": [595.2760009765625, 841.8900146484375]}
