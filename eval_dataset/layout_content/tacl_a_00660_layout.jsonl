{"layout": 0, "type": "text", "text": "Automatically Correcting Large Language Models: Surveying the Landscape of Diverse Automated Correction Strategies ", "text_level": 1, "page_idx": 0, "bbox": [90, 60, 506, 98], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 1, "type": "text", "text": "Liangming Pan, Michael Saxon, Wenda Xu, Deepak Nathani, Xinyi Wang, William Yang Wang ", "page_idx": 0, "bbox": [165.2585906982422, 121.21914672851562, 444.25946044921875, 150.72311401367188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 2, "type": "text", "text": "University of California, Santa Barbara, USA ", "page_idx": 0, "bbox": [198.41400146484375, 152.0250244140625, 399.1376647949219, 165.280029296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 3, "type": "text", "text": "{ liang ming pan, saxon, wendaxu, dnathani, xinyi wang } @ucsb.edu william@cs.ucsb.edu ", "page_idx": 0, "bbox": [99.89029693603516, 166.71400451660156, 497.6200866699219, 192.2912139892578], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 4, "type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0, "bbox": [159, 219, 204, 231], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 5, "type": "text", "text": "While large language models (LLMs) have shown remarkable effectiveness in various NLP tasks, they are still prone to issues such as hallucination, unfaithful reasoning, and toxi- city. A promising approach to rectify these flaws is  correcting LLMs with feedback , where the LLM itself is prompted or guided with feed- back to fix problems in its own output. Tech- niques leveraging  automated feedback —either produced by the LLM itself (self-correction) or some external system—are of particular in- terest as they make LLM-based solutions more practical and deployable with minimal human intervention. This paper provides an exhaus- tive review of the recent advances in correcting LLMs with automated feedback, categorizing them into training-time, generation-time, and post-hoc approaches. We also identify poten- tial challenges and future directions in this emerging field. ", "page_idx": 0, "bbox": [89, 246.18003845214844, 273, 485.381103515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 6, "type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0, "bbox": [72, 502, 155, 516], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 7, "type": "text", "text": "Recent years have seen striking empirical suc- cesses of large language models (LLMs), as they consistently obtain impressive results across a di- verse range of NLP benchmarks (Guo et al., 2023; Suzgun et al., 2023; Qin et al., 2023), while also showcasing surprising abilities of language under- standing (Wei et al., 2022a; Begus et al., 2023), generation (Pu and Demberg, 2023; Lin and Chen, 2023; Lyu et al., 2023a), and reasoning (Wei et al., 2022b; Kojima et al., 2022; Dasgupta et al., 2022). However, these models are not without their flaws. LLMs are observed to intermittently display un- desired and inconsistent behaviors such as pro- ducing seemingly convincing but inaccurate ‘‘hallucinations’’ (Lin et al., 2022; Zhang et al., 2023c; Min et al., 2023), conducting unfaithful reasoning (Golovneva et al., 2023; Lyu et al., 2023b; Wu et al., 2023b), generating inappropri- ate or harmful content (Gehman et al., 2020; Levy et al., 2021, 2022; Shaikh et al., 2023), and failing to trustfully follow rules and constraints (Zhuo et al., 2023; Wang et al., 2023a). Such flawed be- haviors hamper the trust in LLMs and pose hurdles to their real-world applications (OpenAI, 2023). ", "page_idx": 0, "bbox": [72, 530.3489990234375, 290, 760.4008178710938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 8, "type": "text", "text": "", "page_idx": 0, "bbox": [307, 218.63763427734375, 525, 313.19146728515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 9, "type": "text", "text": "A prevailing strategy to rectify these undesired behaviors of LLMs is  learning from feedback , mirroring a typical human learning strategy where individuals actively refine their behaviors through a cycle of trial, error, and correction. Humans, when making mistakes, often gather feedback ei- ther from others or through self-reflection (Boyd and Fales, 1983; Metcalfe, 2017; Ferretti et al., 2019; London et al., 2023; Bellh¨ auser et al., 2023). Such feedback offers valuable insights for humans to correct mistakes and modify their behavior ac- cordingly. Inspired by this natural learning mech- anism, extensive research (Huang et al., 2022; Madaan et al., 2023; Gero et al., 2023; Jiang et al., 2023) has been undertaken to improve LLMs through the paradigm of learning from both in- ternal and external feedback. ", "page_idx": 0, "bbox": [307, 313.51708984375, 525, 543.5601806640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 10, "type": "text", "text": "One popular line of research involves the use of  human feedback  to evaluate and refine models, as encapsulated in the survey by Fernandes et al. (2023). These methods typically involve direct optimization of LLMs against human feedback on their outputs (Kreutzer et al., 2018; Glaese et al., 2022; Ouyang et al., 2022; Scheurer et al., 2023), where human evaluations of output quality serve as a reward signal to improve model perfor- mance. However, this approach has two primary drawbacks: It can be costly due to the manual labor involved, and it lacks real-time capabilities as humans cannot provide instant feedback. ", "page_idx": 0, "bbox": [307, 543.8858032226562, 525, 719.7295532226562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 11, "type": "text", "text": "To minimize the need for human intervention, another strategy is  correcting LLMs with auto- mated feedback . As illustrated by the conceptual ", "page_idx": 0, "bbox": [307, 720.05517578125, 525, 760.4097290039062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 12, "type": "image", "page_idx": 1, "img_path": "layout_images/tacl_a_00660_0.jpg", "img_caption": "Figure 1: A conceptual framework for correcting LLMs with automated feedback. We identify three parties involved in the prototypical correction pipeline that are analogous to a patient, doctor, and treatment in medicine, respectively: A  Language Model  produces initial output, a  Critic Model  analyzes the output and provides feedback, and a  Refine Model  provides treatment to either the output or the language model. We taxonomize existing works using this conceptualization along five key aspects: the  problem  to be corrected, the  source  and  format  of the feedback, and the  strategy  and  learning  method of the refine model. ", "bbox": [70, 55, 528, 337], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Self-training | 4\n\nFeedback-guided\nGeneration\n\nGenerate-then-Rank\n\nPost-hoc Revision\n\nSupervised Learning\n\nReinforcement\nLearning\n\nontext Learning\n\nHearing J\n\nLanguage\nModel\n\nDiagnosis\n\nQlo\nam\n\nPatient\n\nNatural Language\n\nHallucination\nUnfaithful Reasoning\n\nHuman\n\nLanguage Model\n\nTrained Model _}\n\nExternal Tools\n\n}\n\nProgram Executor }\n\n|\n\nExternal Metrics\n\nOther Tools\n\nScalar Value\n\nExternal Knowledge\n", "vlm_text": "The image depicts a conceptual framework for correcting language models (LLMs) with automated feedback, paralleling a medical analogy. Here's a breakdown:\n\n1. **Language Model (Patient)**: Produces initial output.\n   - Problems to correct: \n     - Hallucination\n     - Unfaithful Reasoning\n     - Flawed Codes\n     - Toxic Contents\n\n2. **Critic Model (Doctor)**: Analyzes the output and provides feedback.\n   - Sources of feedback:\n     - Human\n     - Language Model\n     - External Tools\n       - Trained Model\n       - Program Executor\n       - Other Tools\n     - External Metrics\n     - External Knowledge\n   - Format of feedback:\n     - Scalar Value\n     - Natural Language\n\n3. **Refine Model (Treatment)**: Improves the output or the language model.\n   - Strategies:\n     - Self-Training\n     - Feedback-guided Generation\n     - Generate-then-Rank\n     - Post-hoc Revision\n   - Learning methods:\n     - Supervised Learning\n     - Reinforcement Learning\n     - In-Context Learning\n\nThe process involves diagnosing problems with the critic model, providing feedback, and refining the language model for improved outputs."}
{"layout": 13, "type": "text", "text": "framework in Figure 1, the language model (itera- tively) learns from automatically generated feed- back signals to understand the consequences of its actions and adapts its behaviors. The source of automated feedback can be multifaceted, spanning from the LLM itself acting as the feedback model (Madaan et al., 2023; Schick et al., 2023), a sepa- rately trained feedback model (Yang et al., 2022b; Paul et al., 2023), readily available external tools (Gou et al., 2023; Chen et al., 2023e), to external knowledge sources such as Wikipedia or the in- ternet (Yu et al., 2023; Li et al., 2023b). Various strategies of correction have been proposed, in- cluding self-training (Huang et al., 2022; Bai et al., 2022b), generate-then-rank (He et al., 2023; Weng et al., 2023), feedback-guided decoding (Yang et al., 2022a; Xie et al., 2023), iterative post-hoc revision (Zhang et al., 2023a; Jiang et al., 2023), etc. Recently, the incorporation of such strate- gies has demonstrated their effectiveness across a myriad of tasks, from question answering (Peng et al., 2023) and reasoning (Pan et al., 2023) to code generation (Zhang et al., 2023b) and toxicity detection (Lu et al., 2022). ", "page_idx": 1, "bbox": [72, 367.4490051269531, 290, 692.3450317382812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 14, "type": "text", "text": "In light of these advancements, our paper aims to provide a comprehensive survey. We start by establishing the concept of  correcting LLMs with automated feedback  and creating a taxonomy of the different methods (  2). We then discuss the major techniques   $(\\S~3)$  , categorized as training- time, generation-time, and post-hoc correction. Finally, we discuss the connection to earlier works (  4) and five potential future directions   $(\\S\\,5)$  . ", "page_idx": 1, "bbox": [72, 692.9500732421875, 290, 760.4042358398438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 15, "type": "text", "text": "", "page_idx": 1, "bbox": [307, 367.4567565917969, 525, 421.3655700683594], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 16, "type": "text", "text": "2 Conceptual Framework ", "text_level": 1, "page_idx": 1, "bbox": [307, 438, 447, 451], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 17, "type": "text", "text": "For clean exposition, we first present a concep- tual framework outlining the overall process of correcting LLMs with feedback in Figure 1, using an analogy of medical treatment in our daily life. Three parties are involved in this process: ", "page_idx": 1, "bbox": [307, 464.8110046386719, 525, 532.2651977539062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 18, "type": "text", "text": "•  Langu atient) . A language model  M  ${\\mathcal{M}}\\,:\\,\\mathcal{X}\\,\\rightarrow\\,\\mathcal{Y}$   X →Y  p s a specific task by mapping an input  $x\\in\\mathcal X$   ∈X  to an output text    ∈Y . This formulation encompasses a wide range of NLP tasks, for example, in sum mari z ation,  $x$   is a passage,  $\\hat{y}$   is the gener- ated summary; for question-answering,    $x$   is a question and  $\\hat{y}$   is the predicted answer. The initial generation    $\\hat{y}$   may have problems such as hallucination and incorrect reasoning. ", "page_idx": 1, "bbox": [318, 548.0986328125, 525, 683.689208984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 19, "type": "text", "text": "•  Critic Model  (Doctor & Diagnosis) . A critic model    ${\\mathcal{C}}:{\\mathcal{X}}\\times{\\mathcal{Y}}\\rightarrow{\\mathcal{F}}$   learns to generate feedback    $x,\\hat{y}\\ \\rightarrow\\ c$   →  where    $\\hat{y}\\;\\sim\\;{\\mathcal{M}}(x)$   ∼M  is the output or partial output of the language model, and  $c$   is the feedback of some format, ", "page_idx": 1, "bbox": [318, 692.5475463867188, 525, 760.3966064453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 20, "type": "text", "text": "e.g. , scalar value, or natural language. A sim- ple example is binary feedback of whether the output is good or bad given the input  $(\\mathcal{C}:\\mathcal{X}\\times\\mathcal{Y}\\rightarrow\\{0,1\\})$  . ", "page_idx": 2, "bbox": [93, 57.93902587890625, 290, 112], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 21, "type": "text", "text": "•   ment) . A refine model R  X × Y × F →Y  learns to repair an out- put    $x,{\\hat{y}},c\\rightarrow y_{n e w}$   →  based on the feedback    $c$  , where    $y_{n e w}$   is the revised output. Some re- fine models directly repair the language model    $\\mathcal{M}$   through fine-tuning or reinforce- ment learning. ", "page_idx": 2, "bbox": [82, 121.34442138671875, 290, 216.29302978515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 22, "type": "text", "text": "Based on the above formulation, the specific model design in existing works varies along five crucial axes, elaborated in the following sections. ", "page_idx": 2, "bbox": [72, 227.18524169921875, 290, 267.53985595703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 23, "type": "text", "text": "2.1 What Gets Corrected? ", "text_level": 1, "page_idx": 2, "bbox": [72, 286, 204, 297], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 24, "type": "text", "text": "We summarize the three major error types of LLMs that are targeted for correction in existing works through automated feedback. ", "page_idx": 2, "bbox": [72, 306.91656494140625, 290, 347.27117919921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 25, "type": "text", "text": "•  Hallucination.  An open challenge for LLMs is that they often hallucinate by making up facts or citing sources that do not exist (Li et al., 2023a; Zhang et al., 2023c). This hal- lucinated content is often quite plausible- sounding, making it difficult even for humans to detect (Clark et al., 2021). To address this, several studies have proposed the collection of automated feedback on potential factual inaccuracies by cross-referencing the gener- ated output with credible knowledge sources. The gathered feedback can then be utilized by a subsequent refinement model to correct hallucinations (Gao et al., 2023b; Peng et al., 2023). ", "page_idx": 2, "bbox": [82, 357.7673645019531, 290, 561.1068725585938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 26, "type": "text", "text": "•  Unfaithful Reasoning.  A number of recent studies (Ribeiro et al., 2023; Lyu et al., 2023b; Golovneva et al., 2023) found that LLMs occasionally make  unfaithful  reason- ing,  i.e. , the derived conclusion does not follow the previously generated reasoning chain. To address this, existing works have used automated feedback from external tools or models for guiding the reasoning process (Xie et al., 2023; Yao et al., 2023a), verifying the reasoning process and rectifying errors (He et al., 2023; Pan et al., 2023), or fine- tuning LLMs with process-based feedback (Huang et al., 2022; Lightman et al., 2023). ", "page_idx": 2, "bbox": [82, 570.613037109375, 290, 760.4070434570312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 27, "type": "text", "text": "•  Toxic, Biased, and Harmful Content. LLMs have been observed to occasionally generate content that is toxic, biased, or harmful due to biases present in the training data (Shaikh et al., 2023). To rectify this, re- in for cement learning from human feedback (RLHF) (Ouyang et al., 2022; Bai et al., 2022a) has been extensively employed to train LLMs to align more closely with human values, such as being helpful, honest, and harmless. However, RLHF is heavily depen- dent on high-quality human feedback, the collection of which can be resource-intensive. To alleviate this, recent work (Lu et al., 2022; Gou et al., 2023) has also explored collecting automated feedback to identify and correct potentially harmful outputs. ", "page_idx": 2, "bbox": [318, 57.55206298828125, 525, 287.99993896484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 28, "type": "text", "text": "2.2 What Is the  Source  of the Feedback? ", "text_level": 1, "page_idx": 2, "bbox": [307, 302, 506, 314], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 29, "type": "text", "text": "Feedback can be broadly divided into  human feed- back  and  automated feedback . Fernandes et al. (2023) provided a survey on integrating human feedback for language generation. In our survey, we focus on the emerging research area of auto- mated feedback, which typically originates from two sources:  self-feedback  ( i.e. , the feedback orig- inates from the LLM itself) and  external feed- back  ( i.e. , the feedback is derived from external models, tools, or knowledge sources). ", "page_idx": 2, "bbox": [307, 321.6533203125, 525, 456.8609619140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 30, "type": "text", "text": "•  Self-Feedback.  The LLM can act as its own feedback provider by iterative ly assess- ing and refining its generated outputs until it meets a certain standard (Madaan et al., 2023; Shinn et al., 2023). This continuous self-improvement strategy has proven effec- tive in multiple studies, especially when ex- ternal feedback is unavailable or limited (Ye et al., 2023; Yan et al., 2023). ", "page_idx": 2, "bbox": [318, 468.2569580078125, 525, 590.306396484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 31, "type": "text", "text": "•  External Feedback for LLMs comes from other models (Yang et al., 2022b; Lightman et al., 2023), tools (Gou et al., 2023; Chara lamb o us et al., 2023), knowledge sources (Gao et al., 2023b; Yu et al., 2023), and evaluation metrics (Jung et al., 2022; Welleck et al., 2023). External feedback pro- vides a valuable outside perspective for iden- tifying errors that the LLM cannot recognize on its own. For example, code interpreters are widely used in programming tasks to pro- vide real-time error messages; while external ", "page_idx": 2, "bbox": [318, 597.7247924804688, 525, 760.3992919921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 32, "type": "text", "text": "knowledge sources are used to verify the factual accuracy. ", "page_idx": 3, "bbox": [93, 57.93902587890625, 290, 84.74822998046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 33, "type": "text", "text": "2.3 What Is the  Format  of the Feedback? ", "text_level": 1, "page_idx": 3, "bbox": [71, 99, 273, 111], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 34, "type": "text", "text": "The selection of the feedback format requires considering its expressivity, ease of collection, and its potential to improve systems (Fernandes et al., 2023). Automated feedback is commonly either a  scalar value  or in  natural language . ", "page_idx": 3, "bbox": [71, 117.1058349609375, 290, 184.56005859375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 35, "type": "text", "text": "•  Scalar Value Feedback.  In this scenario, the critic model maps the input and output to a single score   $(\\mathcal{C}:\\mathcal{X}\\times\\mathcal{Y}\\rightarrow\\mathcal{N}\\subseteq\\mathbb{R})$  . Scalar value feedback can be easily integrated into the training/decoding process of LLMs. For example, Xie et al. (2023) use real-value feedback for each intermediate reasoning step to guide the model in performing a sto- chastic beam search for the optimal solution. Despite its flexibility, scalar feedback is less descriptive for detailed corrections. ", "page_idx": 3, "bbox": [83, 195.749267578125, 290, 344.8983154296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 36, "type": "text", "text": "•  Natural Language Feedback provides richer information that can highlight specific errors and provide nuanced suggestions for improvement. This is important for certain applications such as text editing and code generation. For example, Self-Debug (Chen et al., 2023e) uses LLMs to generate explana- tions for the produced code and utilize both the explanation and the execution results as feedback to enhance coding solutions. ", "page_idx": 3, "bbox": [83, 351.1100158691406, 290, 486.7048645019531], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 37, "type": "text", "text": "2.4 When  to Correct the Model? ", "text_level": 1, "page_idx": 3, "bbox": [71, 499, 232, 511], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 38, "type": "text", "text": "Depending on the timing of using automated feed- back to correct the model, existing work can be divided into three major categories. ", "page_idx": 3, "bbox": [71, 517.0736694335938, 290, 557.4282836914062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 39, "type": "text", "text": "•  Training-time Correction.  The ideal sce- nario is to rectify a flawed model during training, prior to its deployment for use. Once feedback has been collected, it is directly used to optimize the model parameters. Hu- man feedback is typically used for training- time correction, as exemplified by the widely adopted RLHF approach (Ouyang et al., 2022). For leveraging automated feedback, a common strategy is  self-training  (Huang et al., 2022), where the model is trained with its own generated high-quality output filtered out by the critic model. However, the practical application of training-time correc- ", "page_idx": 3, "bbox": [83, 570.6150512695312, 290, 760.4089965820312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 40, "type": "text", "text": "tion may be hindered by the in feasibility of fine-tuning giant closed-source LLMs, such as GPT-4 (OpenAI, 2023) and the poten- tial un availability of feedback during model training. ", "page_idx": 3, "bbox": [329, 57.95013427734375, 525, 125.40435791015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 41, "type": "text", "text": "•  Generation-time Correction.  It utilizes au- tomated feedback to guide the LLM to cor- rect errors  during  generation. For example, for proof generation, several studies utilize the automated feedback of the intermediate reasoning steps to guide the model to recover from incorrect generation and search for the optimal solution in a more efficient way (Yang et al., 2022a; Lightman et al., 2023). ", "page_idx": 3, "bbox": [318, 130.653564453125, 525, 252.7030029296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 42, "type": "text", "text": "•  Post-hoc Correction.  It refines the model output  after it has been generated , without updating the model parameters. This typi- cally involves an iterative process of generat- ing output, receiving feedback, and refining output. Post-hoc correction is more flexi- ble as it does not require training the LLM or accessing its parameters. Furthermore, it facilitates the incorporation of more infor- mative natural language feedback, offering a more transparent and explain able self- correction process. ", "page_idx": 3, "bbox": [318, 257.95220947265625, 525, 420.64666748046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 43, "type": "text", "text": "2.5 How  to Correct the Model with Feedback? ", "text_level": 1, "page_idx": 3, "bbox": [306, 430, 456, 457], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 44, "type": "text", "text": "Various concrete strategies have been proposed to correct LLMs with automated feedback, which are tailored to the different dimensions we men- tioned in previous sections. For example,  self- training  is often used for training-time correction. Generate-then-rank  often comes with scalar value feedback. We will cover the comprehensive land- scape of self-correction strategies in Section 3. ", "page_idx": 3, "bbox": [307, 461.90411376953125, 525, 570.0033569335938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 45, "type": "text", "text": "2.6 Summary of Existing Work ", "text_level": 1, "page_idx": 3, "bbox": [306, 580, 463, 593], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 46, "type": "text", "text": "Building upon the taxonomy established in the preceding sections, we collate existing work in Table 1 and Table 2. We have three major selection criteria for a work to be included in this survey: ", "page_idx": 3, "bbox": [307, 597.734375, 525, 651.6343383789062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 47, "type": "text", "text": "1.  Automated Feedback : Explicit feedback is involved to assess the quality of the model output. We focus on automated feedback that orig- inates from external models, metrics, knowledge, etc. However, we will cover some representative works of human feedback for completeness. ", "page_idx": 3, "bbox": [307, 651.7179565429688, 525, 733.113525390625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 48, "type": "text", "text": "2.  Model Refinement : The feedback should act as a directive to enhance the LLM, either by: ", "page_idx": 3, "bbox": [307, 733.196044921875, 525, 760.4012451171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 49, "type": "table", "page_idx": 4, "img_path": "layout_images/tacl_a_00660_1.jpg", "table_footnote": "Table 1: Representative works on  Training-time Correction  and  Generation-Time Correction . ", "bbox": [71, 54, 530, 507], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Method Feedback Model Refinement Application\n\nSource Format Strategy Learning\n\nTraining-Time Correction\n\nRLHF (Ouyang et al., 2022) Reward Model Scalar RLHF RL Multiple Tasks\n\nFine-Grained RLHF (Wu et al., 2023a) Reward Model Scalar RLHF RL Detoxification, Long-form QA.\nHH-RLHF (Bai et al., 2022a) Reward Model Scalar RLHF SL &RL Helpfulness, Harmlessness\nMoral RLHF (Ganguli et al., 2023) Reward Model Scalar RLHF RL Moral Correction\n\nSparrow (Glaese et al., 2022) Reward Model NL RLHF SL&RL_ Dialogue\n\nILF (Scheurer et al., 2023) Human Feedback NL Fine-tuning SL Summarization\n\nILF-Code (Chen et al., 2023a) Human Feedback NL Fine-tuning SL Code Generation\n\nSLT (Yuan et al., 2023) Human Feedback NL Fine-tuning SL Response Generation\nChain-of-Hindsight (Liu et al., 2023a) Human Feedback NL Fine-tuning SL Multiple Tasks\n\nCrystal (Liu et al., 2023b) Language Model Scalar Fine-Tuning SL & RL Commonsense Reasoning\nSTaR (Zelikman et al., 2022) Language Model NL Self-Training SL QA, Reasoning\n\nRLAIF (Bai et al., 2022b) Language Model NL Self-Training SL&RL Dialogue\n\nSIRLC (Pang et al., 2023) Language Model NL Self-Training RL Reasoning, Translation, Summary\nSelf-Improve (Huang et al., 2022) Language Model NL Self-Training SL QA, Reasoning, NLI\nAlpacaFarm (Dubois et al., 2023) Language Model NL Self-Training SL & RL None (Intrinsic Evaluation)\nReST (Gulcehre et al., 2023) Language Model NL Self-Training RL Machine Translation\n\nGeneration-Time Correction\n\nSelf-Verification (Weng et al., 2023) | Language Model Scalar Re-Ranking ICL Arithmetic Reasoning\n\nCodeT (Chen et al., 2023b) Program Executor — Scalar Re-Ranking ICL Code Generation\n\nLEVER (Ni et al., 2023) Program Executor Scalar Re-Ranking SL Table QA, Math QA, Program\nRR (He et al., 2023) External Knowledge Scalar Re-Ranking — Reasoning\n\nInstructScore (Xu et al., 2023) Language Model NL Re-Ranking SL Generation Evaluation\n\nMBR Decoding (Freitag et al.. 2022) External Metrics Scalar Re-Ranking SL Machine Translation\nDIVERSE (Li et al., 2023d) Trained Model Scalar Re-Ranking SL Arithmetic Reasoning\n\nPRM (Lightman et al., 2023) Reward Model Scalar Feedback-guided SL Arithmetic Reasoning\nDiffusionLM (Li et al., 2022) Trained Model Scalar Feedback-guided SL Controlled Text Generation\nFudge (Yang and Klein, 2021) Trained Model Scalar Feedback-guided SL Controlled Text Generation\nEntailer (Tafjord et al., 2022) Trained Model Scalar Feedback-guided SL Proof Generation\n\nNLProofS (Yang et al., 2022a) Trained Model Scalar Feedback-guided SL Proof Generation\n\nGRACE (Khalifa et al., 2023) Trained Model Scalar Feedback-guided SL Arithmetic Reasoning\n\nCoRe (Zhu et al., 2023) Trained Model Scalar Feedback-guided SL Arithmetic Reasoning\nVarshney et al. (2023) External Knowledge NL Feedback-guided ICL Hallucination Detection\nMemPrompt (Madaan et al., 2022) External Knowledge NL Feedback-guided ICL Lexical and Ethical Reasoning\nMaieutic Prompting (Jung et al., 2022) External Metrics Scalar Feedback-guided ICL Commonsense Reasoning\n\nSI (Creswell and Shanahan, 2022) Language Model Scalar Feedback-guided ICL Proof Generation\n\nRAP (Hao et al., 2023) Language Model Scalar Feedback-guided ICL Planning, Reasoning\nSelfEval-Decoding (Xie et al., 2023) | Language Model Scalar Feedback-guided ICL Arithmetic / Symbolic Reasoning\nSelfCheck (Miao et al., 2023) Language Model NL Feedback-guided ICL Arithmetic Reasoning\n\nTree of Thoughts (Yao et al., 2023a) Language Model NL/ Scalar Feedback-guided ICL Games, Writing\n", "vlm_text": "The table is divided into two main sections: \"Training-Time Correction\" and \"Generation-Time Correction.\" Each section lists methods used in different approaches for refining models, based on feedback and their applications.\n\n### Columns:\n1. **Method**: Names of different research methods or models with corresponding author names and dates.\n2. **Feedback Source**: Indicates whether the feedback is from reward models, human feedback, language models, program executors, or external knowledge.\n3. **Feedback Format**: Specifies the format of feedback, such as Scalar or NL (Natural Language).\n4. **Model Refinement Strategy**: Describes the approach used for model refinement, like RLHF (Reinforcement Learning with Human Feedback), Fine-tuning, Self-Training, Re-Ranking, or Feedback-guided.\n5. **Learning**: Indicates the type of learning applied, such as RL (Reinforcement Learning), SL (Supervised Learning), or ICL (In-Context Learning).\n6. **Application**: Lists the specific applications or tasks these methods are applied to, such as multiple tasks, detoxification, dialogue, summarization, code generation, reasoning, arithmetic reasoning, etc.\n\n### Sections:\n- **Training-Time Correction**: Focuses on methods applied during the training phase, utilizing feedback for various tasks.\n- **Generation-Time Correction**: Addresses methods used during the generation phase, often involving re-ranking and feedback-guided adjustments for specific applications. \n\nThis structured approach helps in understanding the different methodologies and their practical uses in refining AI models."}
{"layout": 50, "type": "text", "text": "1) updating model parameters, or 2) altering the model’s output during or post the generation. ", "page_idx": 4, "bbox": [72, 527.8020629882812, 290, 554.6024780273438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 51, "type": "text", "text": "3.  Large Language Model : We primarily focus on automated correction strategies in the era of modern large language models. Given this focus, we mainly emphasize very recent work from 2022 and 2023. However, it is important to acknowledge that the concept of automated correction is not new and has roots in early NLP research. To provide a complete historical perspective, we provide a succinct overview of these initial approaches to automated correction in Section 4.1. ", "page_idx": 4, "bbox": [72, 555.7739868164062, 290, 691.3775024414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 52, "type": "text", "text": "These studies are categorized based on the three strategies introduced in Section 2.4. We also sum- marize key features of each study, including: 1) the source of feedback, 2) the format of feedback, 3) the strategy and learning method employed for the refinement, 4) whether the refinement process is iterative, and 5) the application of the method. ", "page_idx": 4, "bbox": [72, 692.9450073242188, 290, 760.3992309570312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 53, "type": "text", "text": "", "page_idx": 4, "bbox": [307, 527.8053588867188, 525, 554.6057739257812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 54, "type": "text", "text": "3 Methodologies ", "text_level": 1, "page_idx": 4, "bbox": [306, 566, 400, 579], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 55, "type": "text", "text": "In this section, we delve into a detailed review of various correction methodologies. Depending on the time that the correction happens, we categorize them as  Training-Time Correction ,  Generation- Time Correction , and  Post-hoc Correction . ", "page_idx": 4, "bbox": [307, 586.2029418945312, 525, 653.6571044921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 56, "type": "text", "text": "3.1 Training-Time Correction ", "text_level": 1, "page_idx": 4, "bbox": [306, 663, 456, 674], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 57, "type": "text", "text": "Training-time correction rectifies model behavior during the training phase. We identify three typi- cal strategies shown in Figure 2. Each strategy uti- lizes different forms of feedback to optimize the model during training: human feedback (a), a re- ward model (b), and automated feedback (c). ", "page_idx": 4, "bbox": [307, 679.3905029296875, 525, 760.39892578125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 58, "type": "table", "page_idx": 5, "img_path": "layout_images/tacl_a_00660_2.jpg", "bbox": [70, 53, 528, 366], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Feedback\n\nModel Refinement\n\nMethod Application\n\nSource Format Strategy Learning Iter.\n\nPost-hoc Correction\n\nSelf-Refine (Madaan et al., 2023) Language Model Self-Refine ICL v Multiple Tasks\nClinical SV (Gero et al., 2023) Language Model Self-Refine ICL x Information Extraction\nReflexion (Shinn et al., 2023) Language Model Self-Refine RL PZ QA, Code Generation\nIterRefinement (Chen et al., 2023) Language Model Self-Refine ICL v Machine Transla\nAuto-Post-Editing (Raunak et al., 2023) Language Model Self-Refine ICL x Machine Tran\nRCI (Kim et al., 2023) Language Model Self-Refine ICL v Computer Tasks\nSelFee (Ye et al., 2023) Language Model Self-Refine SL v Dialogue\nSelfCheckGPT (Manakul et al., 2023) Language Model Self-Refine ICL x Hallucination Detection\nLLM Self Defense (Helbling et al., 2023) Language Model Self-Refine ICL x Harmful Text Correction\nRe® (Yang et al., 2022b) Trained Model External Feedback SL & ICL v Story Generation\nCodeRL (Le et al., 2022) Trained Model External Feedback RL x Code Generation\nFLIRT (Mehrabi et al., 2023) Trained Model External Feedback ICL v Adversarial Prompt Generation\nREFINER (Paul et al., 2023) Trained Model External Feedback SL& ICL v Reasoning, Moral Story\nRLAF (Akyiirek et al., 2023) Trained Model External Feedback SL& RL PZ Planning, Summarization\nYan et al. (2023) Trained Model External Feedback SL v Semantic Parsing\nBaldur (First et al., 2023) Trained Model External Feedback ICL v Proof Generation\nCRITIC (Gou et al., 2023) External Tools External Feedback ICL v QA, Program, Toxicity\nFacTool (Cher et al., 2023) External Tools External Feedback ICL v QA, Reasoning, Generation\nMAF (Nathani et al., 2023) External Tools External Feedback ICL v QA, Reasoning\nRARR (Gao et al., 2023b) External Knowledge NL External Feedback ICL x Open-Domain QA\nLLM-Augmenter (Peng et al., 2023) External Knowledge NL External Feedback RL v Open-Domain QA\nSelf-Checker (Li et al., 2023b) External Knowledge NL External Feedback ICL x Fact-Checking\nREFEED (Yuet al., 2023) External Knowledge NL External Feedback ICL x QA, Dialogue\nOlausson et al. (2023) Program Executor NL External Feedback ICL v Code Generation\nSelf-Edit (Zhang et al., 2023a) Program Executor NL External Feedback ICL v Code Generation\nSelf-Debug (Chen et al., 2023e) Program Executor NL External Feedback ICL v Code Generation\nSelf-Evolve (Jiang et al., 2023) Program Executor NL External Feedback ICL PZ Code Generation\nLogic-LM (Pan et al., 2023) Symbolic Solver NL External Feedback ICL v Logical Reasoning\nSelf-Critique (Saunders et al., 2022) LLMs + Human NL External Feedback SL x Summarization\nALGO (Zhang et al., 2023b) Oracle Verifier Scalar External Feedback ICL v Code Generation\nCharalambous et al. (2023) BMC Tool NL External Feedback ICL x Software Verification\nSelf-Correction (Welleck et al., 2023) External Metrics NL/ Scalar External Feedback SL v Reasoning, Generation, Toxicity\nMultiagent Debate (Du et al., 2023) Language Model NL Model Debate ICL v Reasoning, Factuality\nLM vs LM (Cohen et al., 2023) Language Model NL Model Debate ICL v Factual Error Detection\nICL-AIF (Fu et al., 2023) Language Model NL Model Debate ICL v Bargaining Game\nPRD (Lit al., 2023c) Language Model NL Model Debate ICL v Open-ended QA\nMADRA (Wang et al., 2023b) Language Model NL Model Debate ICL v QA, Fact-Checking\nReConcile (Chen et al., 2023c) Language Model NL Model Debate ICL v Reasoning\n", "vlm_text": "The table lists various methods for model refinement under the category of \"Post-hoc Correction.\" It includes columns for the method name, feedback source, feedback format, refinement strategy, learning technique, iteration, and application. Here's a breakdown:\n\n- **Method**: Names of different techniques or approaches.\n- **Feedback Source**: Origin of the feedback (Language Model, Trained Model, etc.).\n- **Format**: Type of feedback (NL - Natural Language, Scalar, etc.).\n- **Strategy**: Approach used for refinement (Self-Refine, External Feedback, Model Debate, etc.).\n- **Learning**: Type of learning involved (ICL - In-context Learning, SL - Supervised Learning, RL - Reinforcement Learning, etc.).\n- **Iter.**: Indicates whether the process involves iteration (✓ for yes, ✗ for no).\n- **Application**: The specific use case or task the method is applied to (e.g., Multiple Tasks, Information Extraction, QA, etc.)."}
{"layout": 59, "type": "image", "page_idx": 5, "img_path": "layout_images/tacl_a_00660_3.jpg", "img_caption": "Figure 2: Three typical strategies of  training-time correction : direct optimization with human feedback (a), training a reward model that approximates human feedback (b), and self-training with automated feedback (c). ", "bbox": [70, 402, 527, 589], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "(a) Direct Optimizing Human Feedback\n\nLanguage\nModel\n\n(c) Self-Training\nLanguage\nModel\n\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\nI Outputs\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n&:\n\n(b) Reward Modeling and RLHF\nLanguage Language\nModel Model\n&:\nTraining\n\nOutputs 8\nOutputs with RL\n\nHuman\n\nOutputs\n\nHuman\n\nDY annotators\ni i\na Feedback Feedback 1@/1@ Critic ie)\ni Reward Model High-quality\ni eae) rs 1 Outputs\n\nFeedback Data\n\nReward Model Training\n", "vlm_text": "The image illustrates three strategies for training-time correction in language models:\n\n1. **(a) Direct Optimizing Human Feedback:**\n   - Outputs are generated by the language model.\n   - Human annotators provide feedback.\n   - Feedback data is used to train the language model.\n\n2. **(b) Reward Modeling and Reinforcement Learning from Human Feedback (RLHF):**\n   - Outputs are produced by the language model and evaluated by human annotators.\n   - A reward model is trained based on this feedback.\n   - The language model is then trained with reinforcement learning using the reward model.\n\n3. **(c) Self-Training:**\n   - The language model generates outputs.\n   - A critic model evaluates these outputs to identify high-quality ones.\n   - The language model is further trained using high-quality outputs.\n\nEach strategy incorporates feedback mechanisms to enhance model training and performance."}
{"layout": 60, "type": "text", "text": "Direct Optimization with Human Feedback. In an ideal scenario, we would directly leverage human feedback to optimize the model parame- ters, following the framework in Figure 2(a): 1) Candidate outputs are generated by LLMs, 2) Hu- mans provide feedback or refinements on these outputs, and 3) LLMs are then directly optimized on the collected (outputs, feedback) to better align with human preferences. A simple strategy is to fine-tune the model on the outputs that receive pos- itive feedback from human raters (Glaese et al., 2022; Scheurer et al., 2023; Chen et al., 2023a). However, only utilizing positive-rated data may constrain the model’s ability to identify and cor- rect negative attributes or errors. To address this, Chain-of-Hindsight  (Liu et al., 2023a) fine-tunes the LLM on model outputs paired with both pos- itive and negative feedback. Beyond fine-tuning, other optimization methods are explored as well. For example, Gao et al. (2023a) utilize human feedback as the reward signal and optimize the model with contextual bandit learning. ", "page_idx": 5, "bbox": [72, 611.23193359375, 290, 760.3721313476562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 61, "type": "text", "text": "", "page_idx": 5, "bbox": [307, 611.6311645507812, 525, 760.3753662109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 62, "type": "text", "text": "Reward Modeling and RLHF. Direct opti- mization with human feedback may not always be practical, since collecting human feedback can be both labor-intensive and time-consuming. An efficient alternative is to train a  reward model that emulates human feedback. Once trained, this reward model can provide consistent, real-time feedback for every model output, thereby circum- venting the need for constant human involvement. A prominent example of this approach is RLHF (Ouyang et al., 2022), as illustrated in Figure 2(b). It first asks human annotators to label the prefer- ence for different LLM outputs and then train the reward model to predict the human preference. Af- terward, reinforcement learning (RL) algorithms ( e.g. , Proximal Policy Optimization [Schulman et al., 2017]) are employed to optimize the model. RLHF and its variants have proven effective in correcting LLMs to become more beneficial and less harmful (Bai et al., 2022a), as well as instill- ing moral correctness (Ganguli et al., 2023). ", "page_idx": 6, "bbox": [71, 57.54302978515625, 290, 342.19012451171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 63, "type": "text", "text": "Self-Training with Automated Feedback. Re- ward modeling still requires the collection of human feedback. To build a fully autonomous self-improving agent, recent work has adopted the  self-training  strategy that self-improves LLM by boots trapping its original outputs, as depicted in Figure 2(c). The language model itself is used to provide feedback for its own output.  STaR (Zelikman et al., 2022) leverages the idea of chain- of-thought to prompt LLM to generate answers with rationales. They found that the performance of LLM can be improved by iterative ly selecting rationales leading to the correct answer to further finetune LLM. Self-training has also been used to reduce the harmful responses of LLMs. For example, in  RLAIF  (Bai et al., 2022b), the ini- tial toxic responses are critic i que d and revised by the LLM itself following a set of human-defined principles. Afterward, the LLM is fine-tuned on the revised responses.  AlpacaFarm  (Dubois et al., 2023) further shows that LLMs can self-improve with RL. It designs LLM prompts to simulate hu- man feedback in RLHF and shows that the feed- back is effective and greatly reduces the cost. ", "page_idx": 6, "bbox": [71, 352.0560302734375, 290, 677.3480834960938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 64, "type": "text", "text": "3.2 Generation-Time Correction ", "text_level": 1, "page_idx": 6, "bbox": [71, 688, 234, 701], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 65, "type": "text", "text": "Correcting LLMs at training time is ideal but not always feasible because it can be resource- intensive or even impractical for many LLMs, e.g. , closed-source LLMs where weights are ", "page_idx": 6, "bbox": [71, 706.5014038085938, 290, 760.4102172851562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 66, "type": "image", "page_idx": 6, "img_path": "layout_images/tacl_a_00660_4.jpg", "bbox": [306, 56, 528, 293], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "Output 1\n\n1\n1\n1\n;\nOutput 2 | | Critic\n! Model\nwt\nI\nI\n1\nI\n\nLanguage\nModel\n\nOutput N\n\n(a) Generate-then-Rank\n\nCritic [feedback | 4 feedback\n\nfeedback\n\nLanguage’ Y\nModel\n\nTh) Candhack.\n\n", "vlm_text": "The image showcases two different models for language generation using AI, represented in two diagrams labeled (a) and (b). \n\nDiagram (a), \"Generate-then-Rank\", illustrates a process wherein a language model generates multiple outputs (Output 1 to Output N), which are then evaluated by a \"Critic Model\". The Critic Model selects the \"Best Output\" from these options.\n\nDiagram (b), \"Feedback-Guided Decoding\", depicts a more interactive process with continuous feedback. The language model generates multiple outputs (o_1^(1), o_1^(2), o_1^(3), etc.), which are evaluated with the aid of feedback loops from the Critic Model. The green check marks indicate acceptable outputs, while the red 'X' marks denote rejected outputs. The process iterates across several layers, refining the outputs with feedback until reaching an optimal output selection.\n\nBoth diagrams are designed to enhance the efficacy and accuracy of language models by using an external model for evaluation and feedback to refine generated outputs continuously."}
{"layout": 67, "type": "text", "text": "Figure 3: The illustrations of the two typical strategies of  generation-time correction : (a) Generate-then-Rank, and (b) Feedback-Guided Decoding. ", "page_idx": 6, "bbox": [306, 309.8280029296875, 525, 345.781982421875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 68, "type": "text", "text": "inaccessible, and colossal LLMs with billions of parameters. This necessitates generation-time correction methods that correct LLMs  dur- ing  the generation time. Two main strategies are  Generate-then-Rank  and  Feedback-Guided Decoding . ", "page_idx": 6, "bbox": [306, 368.3489990234375, 525, 449.3486328125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 69, "type": "text", "text": "Generate-then-Rank. This involves sampling a large number of candidate generations and sub- sequently picking up the best generation based on the feedback provided by the critic model, as illustrated in Figure 3(a). This approach is of- ten integrated with chain-of-thought prompting (Wei et al., 2022b) to tackle complex reasoning tasks, such as solving math word problems. Given an input problem    $x$  , the LLM initially generates multiple candidate solutions  $y_{1},\\cdot\\cdot\\cdot\\ ,y_{n}$  . Each so- lution    $y_{i}\\,=\\,[z_{i},a_{i}]$   comprises a reasoning path (explanation)    $z_{i}$   leading to the predicted answer  $a_{i}$  . Subsequently, the critic model    $\\mathcal{C}$   assigns a plausibility score    $s_{i}$   to each candidate reason- ing path    $z_{i}$  . The best solution is selected from the scored set    $(z_{i},a_{i},s_{i})_{i=1}^{n}$    via either ranking or voting. ", "page_idx": 6, "bbox": [306, 460.97894287109375, 525, 691.4113159179688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 70, "type": "text", "text": "Various critic models have been used for LLM output verification. DIVERSE (Li et al., 2023d) trains a binary verifier based on DeBERTa (He et al., 2021) to rate each reasoning path. Weng et al. (2023) introduced a training-free critic model based on the consistency between forward and backward reasoning. In a different vein, RR (He et al., 2023) used a critic model to assess rea- soning path  faithfulness  by retrieving supporting information from a knowledge base. In code gen- eration, LEVER (Ni et al., 2023) uses a veri- fier trained on program execution results. CodeT (Chen et al., 2023b) similarly employs dual exe- cution agreement to select the best code solution. ", "page_idx": 6, "bbox": [306, 692.943603515625, 525, 760.3978271484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 71, "type": "text", "text": "", "page_idx": 7, "bbox": [71, 57.93902587890625, 290, 179.59246826171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 72, "type": "text", "text": "Feedback-Guided Decoding. Despite its effi- ciency, the generate-then-rank strategy has several limitations: 1) The critic model provides only coarse-grained, output-level feedback, 2) The long length of the output can complicate its quality as- sessment, and 3) It requires the LLM to wait until the entire output is generated for any corrections. ", "page_idx": 7, "bbox": [71, 188.891845703125, 290, 283.8416748046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 73, "type": "text", "text": "The  feedback-guided decoding  strategy shown in Figure 3(b) overcomes the above limitations by using  step-level feedback  for fine-grained con- trol during generation. Each output    $y$   is split into multiple reasoning steps    $y\\,=\\,\\left[o_{1},o_{2},\\cdot\\cdot\\cdot\\,,o_{n}\\right]$  . A critic model evaluates each step    $o_{t}$  , guiding al- gorithms like beam search to explore the output space systematically and correct early mistakes. This strategy also helps alleviate the  reason- ing inconsistency  problem (Zelikman et al., 2022; Creswell and Shanahan, 2022),  i.e. , incorrect rea- soning leads to correct final answer. This strategy has been adopted in recent works like  Tree-of- Thought  (Yao et al., 2023a),  GRACE  (Khalifa et al., 2023), and  RAP  (Hao et al., 2023), which vary mainly in the critic model they employ, categorized into methods involving human feed- back, trained verifiers, external metrics, external knowledge, and self-evaluation. ", "page_idx": 7, "bbox": [71, 284.132080078125, 290, 541.2769165039062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 74, "type": "text", "text": "•  Reward Model from Human Feedback : Stud- ies like Uesato et al. (2022) and Lightman et al. (2023) collect human-annotated step- level feedback to train a more robust re- ward model, which improves reasoning faithfulness. ", "page_idx": 7, "bbox": [82, 552.5111694335938, 290, 633.5108032226562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 75, "type": "text", "text": "•  Trained Verifier : To reduce the cost of hu- man annotations, some work (Yang et al., 2022a; Tafjord et al., 2022; Li et al., 2023d; Khalifa et al., 2023) uses automated meth- ods to generate training data for obtaining a step-wise verifier. Positive examples are derived from ground-truth reasoning paths, while negative examples are synthesized by proposing an alignment algorithm (Khalifa ", "page_idx": 7, "bbox": [82, 638.7511596679688, 290, 760.404541015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 76, "type": "text", "text": "et al., 2023) or by making text perturbations on positive samples (Yang et al., 2022a). ", "page_idx": 7, "bbox": [329, 57.94561767578125, 525, 84.75482177734375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 77, "type": "text", "text": "•  External Metric : Several studies also lever- age external metrics to re-rank or guide text generation without additional model training, such as using minimum Bayes risk decod- ing (Freitag et al., 2022), attribute class if i ers (Dathathri et al., 2020; Yang and Klein, 2021), and Gaussian denoising (Li et al., 2022). ", "page_idx": 7, "bbox": [318, 92.19964599609375, 525, 200.29888916015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 78, "type": "text", "text": "•  External Knowledge:  External knowledge sources have also been used to provide feed- back. Varshney et al. (2023) use Wikipedia to validate and correct each generated sen- tence, which is then reinserted for further gen- eration. Alternatively, MemPrompt (Madaan et al., 2022) utilizes a pool of prior user feed- back to guide the text generation based on the current query’s intent. ", "page_idx": 7, "bbox": [318, 207.74371337890625, 525, 329.38836669921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 79, "type": "text", "text": "•  Self-Evaluation:  For better flexibility, meth- ods such as Tree-of-Thought (Yao et al., 2023a) and Guided-decoding (Xie et al., 2023) use the LLM itself as the critic model by prompting it to evaluate each individ- ual reasoning step, avoiding the need for fine-tuning task-specific verifier. ", "page_idx": 7, "bbox": [318, 336.8331604003906, 525, 431.3869934082031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 80, "type": "text", "text": "Different strategies are adopted to control the decoding process with the help of the step-level critic model. Tree-of-Thought uses breadth-first and depth-first searches, while GRACE (Khalifa et al., 2023) and Xie et al. (2023) employ beam search. CoRe (Zhu et al., 2023) and RAP (Hao et al., 2023) use Monte Carlo Tree Search for a balance between exploration and exploitation. ", "page_idx": 7, "bbox": [307, 443.8092956542969, 525, 551.9172973632812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 81, "type": "text", "text": "3.3 Post-hoc Correction ", "text_level": 1, "page_idx": 7, "bbox": [306, 565, 427, 577], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 82, "type": "text", "text": "The effectiveness of generation-time correction hinges on the critic model’s ability to give precise feedback for intermediate outputs, a challenging task in holistic NLP evaluations like summariza- tion. This motivates the  post-hoc correction  meth- ods, where both critic and refinement models act only  after  generating the complete output. Post- hoc correction allows for more diverse natural lan- guage feedback, ranging from specific diagnostic reports to broader writing suggestions. As shown in Figure 4, we categorize the key post-hoc cor- rection strategies into  Self-Correction ,  Correction with External Feedback , and  Multi-Agent Debate . ", "page_idx": 7, "bbox": [307, 584.5620727539062, 525, 760.4146118164062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 83, "type": "image", "page_idx": 8, "img_path": "layout_images/tacl_a_00660_5.jpg", "img_caption": "Figure 4: Three  post-hoc correction  strategies: self-correction (a), external feedback (b), multi-agent debate (c). ", "bbox": [71, 53, 527, 204], "page_size": [595.2760009765625, 841.8900146484375], "ocr_text": "(a) Self-Correction\n\nOutputs\n\nGenerate | @\n\nCritic Refine\n\nFeedback\n\n(b) Post-hoc Correction with External Feedback\n\nRefine\nModel\n\nFeedback\n\nLanguage\nModel\n\nOutputs\n\nCritic\nModel\n\nos\n\\\ncd Trained Model\n\n| * Code Interpreter\n\ni> Other Tools\n\nExternal Models/Tools\n\n(c) Multi-Agent Debate\n\nLanguage\nModel 1\n\nLanguage\nModel 2\n", "vlm_text": "The image illustrates three post-hoc correction strategies:\n\n1. **Self-Correction (a):** \n   - The language model generates outputs.\n   - A critic provides feedback.\n   - The language model refines the outputs based on this feedback.\n\n2. **Post-hoc Correction with External Feedback (b):** \n   - The language model generates outputs.\n   - A critic model reviews outputs and provides feedback.\n   - External models/tools such as knowledge bases, trained models, code interpreters, and search engines assist in refining the outputs.\n\n3. **Multi-Agent Debate (c):** \n   - Two language models generate and review each other's outputs.\n   - This iterative process aims to enhance the quality and accuracy of the outputs through debate.\n\nThe strategies involve cycles of generation, review, feedback, and refinement to improve model outputs."}
{"layout": 84, "type": "text", "text": "Self-Correction. In ‘‘Self-Correction’’, a sin- gle LLM both generates and refines its output. As shown in Figure 4(a), the LLM first pro- duces an output and then acts as its critic for iterative refinements. This process continues un- til the output obtains an acceptable quality or a pre-specified number of iterations is reached. Self-Refine  (Madaan et al., 2023) introduced an effective framework using one LLM guided by varied prompts for the roles of generation, critic, and refinement, respectively.  Clinical Self- Verification  (Gero et al., 2023) applies this to extract clinical data, refining by spotting missing elements and verifying data accuracy.  Reflexion (Shinn et al., 2023) extends the method, adding a ‘‘long-term memory’’ to recall past errors and integrating diverse feedback forms. ", "page_idx": 8, "bbox": [71, 232.60198974609375, 290, 463.04107666015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 85, "type": "text", "text": "Though beneficial in many text-generation tasks, self-correction usually demands powerful, large-scale LLMs for effectiveness, which sacri- fices efficiency. As observed by Madaan et al. (2023), smaller models often falter in refining, even with correct feedback. A possible solution involves explicitly training models for this self- correction process.  SelFee  (Ye et al., 2023) pro- poses training a model to emulate the self-correction process by generating output, feedback, and a re- fined solution in an auto-regressive manner. They use more powerful LLMs to provide feedback and refinement data, with data collection facili- tated through ChatGPT. ", "page_idx": 8, "bbox": [71, 464.5458679199219, 290, 653.9439086914062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 86, "type": "text", "text": "Models/Tools as Feedback. In self-correction, the quality of the feedback is constrained by the inherent limitations of LLMs, such as the inability to access up-to-date information, take actions, or perform precise mathematical reasoning. To en- hance feedback quality, recent research leverages external tools, as shown in Figure 4(b). These tools, including trained models, code interpreters, and search engines, offer specialized feedback to address LLM constraints. ", "page_idx": 8, "bbox": [71, 665.4564819335938, 290, 760.4063110351562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 87, "type": "text", "text": "", "page_idx": 8, "bbox": [307, 233.00689697265625, 525, 273.36151123046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 88, "type": "text", "text": "•  Code Interpreter.  In code generation, mod- els like  Self-Edit  (Zhang et al., 2023a) and Self-Evolve  employ program executors to provide feedback from executed test cases. Others, like  Self-Debug  (Chen et al., 2023e) and  ALGO  (Zhang et al., 2023b), explore de- tailed feedback mechanisms using unit tests, program explanations, or comparison with reference oracle programs. Chara lamb o us et al. (2023) use Bounded Model Checking for software verification. ", "page_idx": 8, "bbox": [318, 288.11468505859375, 525, 436.86773681640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 89, "type": "text", "text": "•  Logic Reasoner.  Logic-LM (Pan et al., 2023) and Baldur (First et al., 2023) harness ex- ternal logic reasoners and proof assistants to refine LLM outputs, using error messages as feedback for logical reasoning and theorem- proof generation. ", "page_idx": 8, "bbox": [318, 445.6446228027344, 525, 526.6530151367188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 90, "type": "text", "text": "•  External Knowledge  is used to ensure factual accuracy of the output. Models like  RARR (Gao et al., 2023b),  REFEED  (Yu et al., 2023), and  LLM-Augmenter  (Peng et al., 2023) prompt LLMs to question their outputs. An external retriever then searches for rele- vant evidence, which is used to refine out- puts.  FACTOOL  (Chern et al., 2023) extends this approach to a wider range of tasks, in- cluding code generation, mathematical rea- soning, and scientific literature review. ", "page_idx": 8, "bbox": [318, 535.429931640625, 525, 684.1829223632812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 91, "type": "text", "text": "•  Trained Model.  Research has fine-tuned spe- cialized critic models to provide feedback for iterative refinement alongside more power- ful language models. For example,  CodeRL (Le et al., 2022) treats program synthesis ", "page_idx": 8, "bbox": [318, 692.9597778320312, 525, 760.396240234375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 92, "type": "text", "text": "as a reinforcement learning task and trains a critic model whose output optimizes the main model.  REFINER  (Paul et al., 2023) uses a critique model to provide feedback on an intermediate representation, suitable for refining larger models like ChatGPT. Simi- larly,    $R L4F$   (Aky¨ urek et al., 2023) trains a critic via reinforcement learning, fine-tuning it with policy optimization. The effectiveness is gauged by comparing the refined output’s accuracy to ground truth. In adversarial con- texts, feedback from content filters can guide the generation of better adversarial exam- ples, like how FLIRT (Mehrabi et al., 2023) leverages image classifier signals to guide LLMs in creating adversarial prompts for audit purposes. ", "page_idx": 9, "bbox": [93, 57.93902587890625, 290, 287.99090576171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 93, "type": "text", "text": "•  Integrating Multiple Tools.  Broadening the idea of tool-assisted feedback,  CRITIC  (Gou et al., 2023) unifies various tools, such as code interpreters, search engines, and LLM feedback, offering a multifaceted feedback approach. ", "page_idx": 9, "bbox": [82, 297.5872802734375, 290, 378.5869140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 94, "type": "text", "text": "3.4 Multi-Agent Debate ", "text_level": 1, "page_idx": 9, "bbox": [71, 400, 191, 411], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 95, "type": "text", "text": "Besides integrating tools, recent research has also explored the  debate approach among multiple LLMs , inspired by the idea that multiple per- spectives can converge to an improved solution. Multiple LLM instances debate their individ- ual answers over several rounds, aiming for a consensus. ", "page_idx": 9, "bbox": [71, 421.1316223144531, 290, 515.6854858398438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 96, "type": "text", "text": "Du et al. (2023) trialed this in arithmetic reason- ing. Agents, or LLM duplicates, present individual solutions and justifications. In the debate phase, these responses are aggregated and used as context for each agent to revise its original answer. After several iterations, they typically reach a consen- sus, showing superior performance compared to self-correction.  PRD  (Li et al., 2023c) furthered this by introducing the peer rank algorithm to optimize the consensus process. It considers pair- wise preferences between all possible answer pairs from individual LLMs and uses these preferences to generate a final ranking of models. ", "page_idx": 9, "bbox": [71, 516.1463623046875, 290, 691.9901733398438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 97, "type": "text", "text": "In addition to reasoning tasks,  LM vs LM (Cohen et al., 2023) employed this debate ap- proach for factual error detection, where a gener- ating LLM makes a claim and an examining LLM checks for inaccuracies. Extending its applicabil- ity, Fu et al. (2023) mimicked real-world human interactions, like a buyer-seller scenario, show- casing the versatility of multi-agent debates. ", "page_idx": 9, "bbox": [71, 692.954833984375, 290, 760.4090576171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 98, "type": "text", "text": "", "page_idx": 9, "bbox": [307, 57.95013427734375, 525, 98.30474853515625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 99, "type": "text", "text": "4 Discussion ", "text_level": 1, "page_idx": 9, "bbox": [307, 117, 380, 129], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 100, "type": "text", "text": "4.1 Prior Research on Automated Correction ", "text_level": 1, "page_idx": 9, "bbox": [307, 144, 526, 155], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 101, "type": "text", "text": "In our survey, we primarily examine the auto- mated correction strategies in the era of modern large language models. However, the idea of ‘‘correcting the model with automated feedback’’ has been a longstanding practice in diverse NLP tasks. Recognizing these early works provides a deeper historical insight into the evolution of self- correction methods within NLP. Next, we briefly discuss the NLP applications where automated correction has been effectively implemented, and we discuss how these early works link to the automated correction strategies defined in this survey. ", "page_idx": 9, "bbox": [307, 163.98638916015625, 525, 339.83905029296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 102, "type": "text", "text": "Machine Translation. The concept of post-hoc self-correction has deep roots in the field of ma- chine translation (MT), where it is often called Automatic Post-Editing  (APE) (do Carmo et al., 2021). A long line of prior work trains models to fix translation errors by either learning from human correction data (Alabau et al., 2014) or from synthetic training data (Lee et al., 2021). To minimize the cost of data collection, recent work (Chen et al., 2023d; Raunak et al., 2023) has leveraged the in-context learning ability of LLMs for post-editing translations. As well as post-hoc methods, training-time correction (Unanue et al., 2021) and decoding-time correction (Freitag et al., 2022) are also adopted by prior works. ", "page_idx": 9, "bbox": [307, 353.54833984375, 525, 556.8966064453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 103, "type": "text", "text": "Sum mari z ation. The idea of automated model correction has been commonly used in summa- rization to ensure the  factuality  of the generated summary. There are two mainstream methods: 1) training-time correction that imposes factuality constraints during training (Liu and Liu, 2021; Wan and Bansal, 2022; Scheurer et al., 2023), and 2) post-hoc correction that post-edits generated summaries to correct factual errors (Falke et al., 2019; Cao et al., 2020; Saunders et al., 2022). Re- cent work has investigated using RL to refine the model guided by automated feedback from either reward models (Aky¨ urek et al., 2023) or language models (Pang et al., 2023). ", "page_idx": 9, "bbox": [307, 570.6146850585938, 525, 760.40869140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 104, "type": "text", "text": "Semantic Parsing. The use of external feed- back in semantic parsing, particularly for Text-to- SQL tasks, has shown significant effectiveness. Execution-guided  semantic parsing is a notable approach where the feedback from executing par- tial SQL queries guides the search for plausible complete SQL programs. Additionally, earlier works also explored training separate discrimi- native models either to rerank the generated SQL queries (Bogin et al., 2019; Kelkar et al., 2020) or to predict specific SQL components (Xu et al., 2017; Yu et al., 2018; Lee, 2019). The effective- ness of these generation-time correction tech- niques is largely attributable to the ease of defining intermediate feedback in semantic parsing. ", "page_idx": 10, "bbox": [71, 57.54302978515625, 290, 260.89129638671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 105, "type": "text", "text": "Proof Generation. Automated correction has been well studied and implemented for proof gen- eration (Saha et al., 2020; Tafjord et al., 2021). External feedback from natural language infer- ence (NLI) are commonly used to spot errors as a heuristic for correction, and as a means to score the quality (Yang et al., 2022a; Golovneva et al., 2023). However, there are some open questions regarding the quality of NLI-based feedback (Srikanth and Rudinger, 2022; Saxon et al., 2023). ", "page_idx": 10, "bbox": [71, 271.32476806640625, 290, 406.91961669921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 106, "type": "text", "text": "Open-Ended Generation. Post-hoc correction is often adopted to improve the quality of open- ended text generation (Wang et al., 2017; Holtzman et al., 2018; Sagarkar et al., 2018), such as correcting toxic outputs, enhancing the narrative quality in story generation, and refining response generation in dialogues. For example, Holtzman et al. (2018) proposed a framework to refine the generic, repetitive, and inconsistent texts by composing a committee of disc rim in at or s to provide multi-aspect feedback. Given the sub- jectivity involved in assessing the outputs, recent works started to use detailed, natural language feedback and utilize LLMs for iterative post-hoc refinement. ", "page_idx": 10, "bbox": [71, 417.3531188964844, 290, 620.7013549804688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 107, "type": "text", "text": "4.2 When Does Automated Correction Work? ", "text_level": 1, "page_idx": 10, "bbox": [71, 633, 207, 659], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 108, "type": "text", "text": "Despite the relative infancy of this emerging field, recent studies have explored the efficacy of automated correction in LLMs. Notably,  in- trinsic self-correction —where the model cor- rects its initial output based solely on its inherent capabilities—has generally shown disappointing results (Huang et al., 2023; Stechly et al., 2023; ", "page_idx": 10, "bbox": [71, 665.8574829101562, 290, 760.4112548828125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 109, "type": "text", "text": "Hong et al., 2023; Tyen et al., 2023; Valmeekam et al., 2023; Ke et al., 2023). Most findings in- dicate that LLMs struggle to rectify their initial mistakes, and their performance even worsens af- ter self-correction. This issue arises because the quality of the model’s self-generated feedback is bounded by its existing knowledge and abilities. Therefore, internal feedback may not offer any extra advantage for improving the results; it might even steer the model away from the correct an- swer. Preventing such mis-guidance is crucial for successful self-correction (Huang et al., 2023). ", "page_idx": 10, "bbox": [306, 57.95233154296875, 525, 220.25079345703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 110, "type": "text", "text": "In contrast, the use of  external feedback  for automated correction has shown more promise. Numerous studies (Pan et al., 2023; Chen et al.,  $2023\\mathrm{a}$  ; Gou et al., 2023; Huang et al., 2023) report positive outcomes when LLMs leverage high- quality feedback from external sources. However, high-quality external feedback is unavailable in many real-world applications. This constraint nar- rows down the scope of automated correction to only those tasks where precise and readily obtain- able external feedback exists, such as arithmetic reasoning, semantic parsing, and code generation. ", "page_idx": 10, "bbox": [306, 220.54998779296875, 525, 382.84844970703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 111, "type": "text", "text": "The empirical study by Huang et al. (2023) highlighted  multi-agent debate  as an effective method for automated correction in LLMs. How- ever, the observed improvement primarily stems from the model-driven voting process among dif- ferent LLMs, rather than from self-correction. This approach represents another successful in- stance of learning through external feedback, as each LLM benefits from the input provided by other LLMs in the debate. ", "page_idx": 10, "bbox": [306, 383.13885498046875, 525, 518.3464965820312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 112, "type": "text", "text": "5 Research Gaps and Future Directions ", "text_level": 1, "page_idx": 10, "bbox": [306, 533, 519, 546], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 113, "type": "text", "text": "5.1 Theoretical Justifications ", "text_level": 1, "page_idx": 10, "bbox": [305, 555, 453, 566], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 114, "type": "text", "text": "First of all, whether LLMs can self-correct with- out any external feedback is still an ongoing de- bate, with both positive and negative outcomes reported. Numerous studies have discovered that self-correction often brings negative effects (Huang et al., 2023; Tyen et al., 2023), while some research indicates that the effectiveness of self- repair is only seen in GPT-4 (Olausson et al., 2023). Although these empirical studies provide valuable insights, more fundamental theoretical research is needed to gain a mechanistic under- standing of self-correction. Key research ques- tions include: Can LLMs truly recognize their own errors without external feedback? What is the upper bound of intrinsic self-correction? An- swers to those questions might closely associated with LLMs’ capacity to exhibit meta cognitive awareness,  i.e. , their understanding of their own knowledge and uncertainties (Kadavath et al., 2022). The concept of  calibration —how well a model’s predictions match observed outcomes— is also crucial (Lin et al., 2023). ", "page_idx": 10, "bbox": [306, 571.002197265625, 525, 760.4002075195312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 115, "type": "text", "text": "", "page_idx": 11, "bbox": [72, 57.93902587890625, 290, 166.03826904296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 116, "type": "text", "text": "While language models demonstrate some capacity for self-feedback, achieving superior per- formance often necessitates incorporating external feedback. This ties into the alignment of lan- guage models, an area still not fully understood. For example, in RLHF, the choice of the metric to minimize between the reward model output and the final model output significantly impacts downstream task performance (Go et al., 2023), yet this aspect remains under explored in many applications. Determining the best approach to auto-generate instructive prompts for tasks like output evaluation is also an open challenge. ", "page_idx": 11, "bbox": [72, 166.33746337890625, 290, 342.19012451171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 117, "type": "text", "text": "5.2 Benchmarking Automated Correction ", "text_level": 1, "page_idx": 11, "bbox": [71, 352, 277, 364], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 118, "type": "text", "text": "While LLM automated correction has seen  empir- ical  advancements across applications, there is a lack of solid quantitative metrics to evaluate this capability. Comprehensive evaluations comparing various strategies on criteria like effectiveness, complexity, and potential limits are still needed. Future studies could develop evaluation frame- works considering variables such as task com- plexity, degree of initial error, improvement in quality after automated correction, etc. ", "page_idx": 11, "bbox": [72, 368.67041015625, 290, 503.8780517578125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 119, "type": "text", "text": "Setting benchmarks to diagnose automated correction is another potential research avenue. Diagnostic datasets would offer standardized eval- uations of LLMs and their correction strategies, fostering the development of more precise models. ", "page_idx": 11, "bbox": [72, 504.16845703125, 290, 571.6226806640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 120, "type": "text", "text": "5.3 Continual Self-Improvement ", "text_level": 1, "page_idx": 11, "bbox": [71, 581, 233, 593], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 121, "type": "text", "text": "Another promising yet under-explored area of LLM self-correction is the idea of continual, life-long self-improvement. As LLMs are inte- grated into varied and evolving scenarios, their capacity for sustained adaptability becomes cru- cial. This mirrors the notion of continual (life- long) learning (Wang et al., 2023c), suggesting LLMs should consistently assess outputs, rectify mistakes, update knowledge, and adjust decision- making. ", "page_idx": 11, "bbox": [72, 598.1117553710938, 290, 733.310546875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 122, "type": "text", "text": "While recent studies like Huang et al. (2022) and Zelikman et al. (2022) indicate that LLMs can enhance themselves through self-training on positively evaluated outputs, they often focus on a single, one-time correction process. The resilience of this self-training in continuous settings is not well-understood. Continual learning poses chal- lenges like catastrophic forgetting (Kirkpatrick et al., 2016), where new skills impair old ones. It’s uncertain if such issues could plague con- tinually self-improving LLMs,  e.g. , correcting one behavior may unintentionally alter a previ- ously corrected behavior. Combining various self- correction techniques for continual improvement also warrants exploration. Integrating immediate post-hoc corrections with long-cycle training-time corrections—using the former to gather data and the latter to periodically address recurrent problems—could be a promising approach. ", "page_idx": 11, "bbox": [72, 733.6009521484375, 290, 760.41015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 123, "type": "text", "text": "", "page_idx": 11, "bbox": [307, 57.95123291015625, 525, 288.00311279296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 124, "type": "text", "text": "5.4 Self-Correction with Model Editing ", "text_level": 1, "page_idx": 11, "bbox": [307, 297, 500, 310], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 125, "type": "text", "text": "Recent advancements in  model editing  (Sinitsin et al., 2020; Cao et al., 2021; Yao et al., 2023b) aim to adjust the model’s behavior for examples within the editing scope while leaving its perfor- mance for out-of-scope examples unaltered. It has been applied to update LLMs’ outdated knowl- edge (Lee et al., 2022; Onoe et al., 2023) and address false associations (Murty et al., 2022; Tanno et al., 2022). Though effective in adjusting LLMs’ factual knowledge, challenges like limited generalization (Yao et al., 2023b) and unintended side effects persist (Hoelscher-Obermaier et al., 2023). ", "page_idx": 11, "bbox": [307, 314.4833984375, 525, 490.3360595703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 126, "type": "text", "text": "We believe model editing offers great poten- tial for LLM self-correction. It enables accurate, fine-grained corrections without full-scale re- training. Analyzing the impact of these model edits could yield insights into self-correction. Techniques mitigating model editing’s side ef- fects (Hoelscher-Obermaier et al., 2023) may also enhance self-correction. We anticipate fu- ture research to increasingly merge model editing with LLM self-correction, a relatively untouched domain. ", "page_idx": 11, "bbox": [307, 490.63525390625, 525, 639.3794555664062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 127, "type": "text", "text": "5.5 Multi-modal Self-Correction ", "text_level": 1, "page_idx": 11, "bbox": [306, 648, 468, 661], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 128, "type": "text", "text": "Self-correction strategies have been well-tested on the textual modality, where both the model outputs and the feedback are in textual form. The recent surge in multi-modal data usage, including image, audio, and video modalities, presents entic- ing opportunities for expansion. These include the exploration of self-correction capabilities within multi-modal LLMs, the incorporation of visual feedback, and improving vision-language tasks through self-correction. ", "page_idx": 11, "bbox": [307, 665.8685913085938, 525, 760.3971557617188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 129, "type": "text", "text": "", "page_idx": 12, "bbox": [71, 57.93902587890625, 290, 98.29364013671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 130, "type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 12, "bbox": [71, 112, 147, 125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 131, "type": "text", "text": "In this paper, we present a comprehensive sur- vey of self-correcting large language models with automated feedback. We categorize and ana- lyze various self-correction strategies, including training-time, generation-time, and post-hoc cor- rections. We also connect recent work with prior research and discuss the applicable scenarios for automated correction. Finally, we outline five po- tential future directions and associated challenges in this field. Our goal with this paper is to provide a comprehensive and useful resource for readers interested in the development of this rapidly evolving domain. To aid in this effort, we create a continually updated reading list in a GitHub repository as follows:  https://github.com\n\n /teacher peter pan/self-correction-llm\n\n -papers . ", "page_idx": 12, "bbox": [71, 135.96002197265625, 290, 366.00311279296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 132, "type": "text", "text": "Acknowledgments ", "text_level": 1, "page_idx": 12, "bbox": [72, 386, 166, 398], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 133, "type": "text", "text": "This work was supported by the National Sci- ence Foundation (award #2048122). The views expressed are those of the authors and do not reflect the official policy or position of the US government. Thanks to Xinyuan Lu for assisting with the Github reading list repo. ", "page_idx": 12, "bbox": [71, 408.6510009765625, 290, 489.650634765625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 134, "type": "text", "text": "References ", "text_level": 1, "page_idx": 12, "bbox": [72, 513, 128, 525], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 135, "type": "text", "text": "Afra Feyza Aky¨ urek, Ekin Aky¨ urek, Ashwin Kalyan, Peter Clark, Derry Tanti Wijaya, and Niket Tandon. 2023. RL4F: Generating natural language feedback with reinforcement learning for repairing model outputs. In  Proceedings of the 61st Annual Meeting of the Associ- ation for Computational Linguistics (ACL) , pages 7716–7733.  https://doi.org/10 .18653/v1/2023.acl-long.427 ", "page_idx": 12, "bbox": [71, 536.7839965820312, 290, 658.4396362304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 136, "type": "text", "text": "Vicent Alabau, Christian Buck, Michael Carl, Francisco Casa cube rta, Mercedes Garc´ ıa- Mart´ ınez, Ulrich Germann, Jes´ us Gonz´ alez- Rubio, Robin L. Hill, Philipp Koehn, Luis A. Leiva, Bartolom´ e Mesa-Lao, Daniel Ortiz- Mart´ ınez, Herve Saint-Amand, Germ´ an Sanchis-Trilles, and Chara Tsoukala. 2014. ", "page_idx": 12, "bbox": [71, 665.8470458984375, 290, 760.4008178710938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 137, "type": "text", "text": "CASMACAT: A computer-assisted translation workbench. In  Proceedings of the 14th Con- ference of the European Chapter of the Asso- ciation for Computational Linguistics (EACL) , pages 25–28. The Association for Computer Linguistics.  https://doi.org/10.3115 /v1/E14-2007 ", "page_idx": 12, "bbox": [318, 57.94189453125, 525, 152.40773010253906], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 138, "type": "text", "text": "Yuntao Bai, Andy Jones, Kamal Ndousse, Amanda Askell, Anna Chen, Nova DasSarma, Dawn Drain, Stanislav Fort, Deep Ganguli, Tom Henighan, Nicholas Joseph, Saurav Kadavath, Jackson Kernion, Tom Conerly, Sheer El Showk, Nelson Elhage, Zac Hatfield- Dodds, Danny Hernandez, Tristan Hume, Scott Johnston, Shauna Kravec, Liane Lovitt, Neel Nanda, Catherine Olsson, Dario Amodei, Tom B. Brown, Jack Clark, Sam McCandlish, Chris Olah, Benjamin Mann, and Jared Kaplan. 2022a. Training a helpful and harmless assis- tant with reinforcement learning from human feedback.  CoRR , abs/2204.05862. ", "page_idx": 12, "bbox": [307, 159.11224365234375, 525, 348.51031494140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 139, "type": "text", "text": "Yuntao Bai, Saurav Kadavath, Sandipan Kundu, Amanda Askell, Jackson Kernion, Andy Jones, Anna Chen, Anna Goldie, Azalia Mirhoseini, Cameron McKinnon, Carol Chen, Catherine Olsson, Christopher Olah, Danny Hernandez, Dawn Drain, Deep Ganguli, Dustin Li, Eli Tran-Johnson, Ethan Perez, Jamie Kerr, Jared Mueller, Jeffrey Ladish, Joshua Landau, Kamal Ndousse, Kamile Lukosiute, Liane Lovitt, Michael Sellitto, Nelson Elhage, Nicholas Schiefer, Noem´ ı Mercado, Nova DasSarma, Robert Lasenby, Robin Larson, Sam Ringer, Scott Johnston, Shauna Kravec, Sheer El Showk, Stanislav Fort, Tamera Lanham, Timothy Telleen-Lawton, Tom Conerly, Tom Henighan, Tristan Hume, Samuel R. Bowman, Zac Hatfield-Dodds, Ben Mann, Dario Amodei, Nicholas Joseph, Sam McCandlish, Tom Brown, and Jared Kaplan. 2022b. Constitu- tional AI: harmlessness from AI feedback. CoRR , abs/2212.08073. ", "page_idx": 12, "bbox": [307, 355.1268005371094, 525, 639.3690795898438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 140, "type": "text", "text": "Gasper Begus, Maks y milian Dabkowski, and Ryan Rhodes. 2023. Large linguistic mod- els: Analyzing theoretical linguistic abilities of LLMs.  CoRR , abs/2305.00948. ", "page_idx": 12, "bbox": [307, 645.985595703125, 525, 699.8943481445312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 141, "type": "text", "text": "Henrik Bellh¨ auser, Charlotte Dignath, and Maria Theobald. 2023. Daily automated feedback enhances self-regulated learning: A longitudi- nal randomized field experiment.  Frontiers in ", "page_idx": 12, "bbox": [307, 706.403076171875, 525, 760.410888671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 142, "type": "text", "text": "Psychology , 14:1125873.  https://doi.org /10.3389/fpsyg.2023.1125873 , PubMed: 37275690 ", "page_idx": 13, "bbox": [82, 57.93902587890625, 290, 98.29364013671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 143, "type": "text", "text": "Ben Bogin, Matt Gardner, and Jonathan Berant. 2019. Global reasoning over database struc- tures for text-to-SQL parsing. In  Proceedings of the 2019 Conference on Empirical Meth- ods in Natural Language Processing and the 9th International Joint Conference on Natu- ral Language Processing (EMNLP-IJCNLP) , pages 3659–3664.  https://doi.org/10 .18653/v1/D19-1378 ", "page_idx": 13, "bbox": [72, 104.1368408203125, 290, 225.70228576660156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 144, "type": "text", "text": "Evelyn M. Boyd and Ann W. Fales. 1983. Reflective learning: Key to learning from experience.  Journal of Humanistic Psychol- ogy , 23(2):99–117.  https://doi.org/10 .1177/0022167883232011 ", "page_idx": 13, "bbox": [72, 231.63348388671875, 290, 298.99969482421875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 145, "type": "text", "text": "Meng Cao, Yue Dong, Jiapeng Wu, and Jackie Chi Kit Cheung. 2020. Factual error correction for abstract ive sum mari z ation models. In  Proceed- ings of the 2020 Conference on Empirical Meth- ods in Natural Language Processing (EMNLP) , pages 6251–6258.  https://doi.org/10 .18653/v1/2020.emnlp-main.506 ", "page_idx": 13, "bbox": [72, 304.930908203125, 290, 399.387939453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 146, "type": "text", "text": "Nicola De Cao, Wilker Aziz, and Ivan Titov. 2021. Editing factual knowledge in language models. In  Proceedings of the 2021 Confer- ence on Empirical Methods in Natural Lan- guage Processing (EMNLP) , pages 6491–6506. https://doi.org/10.18653/v1/2021 .emnlp-main.522 ", "page_idx": 13, "bbox": [72, 405.31915283203125, 290, 499.78497314453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 147, "type": "text", "text": "Yiannis Chara lamb o us, Norbert Tihanyi, Ridhi Jain, Youcheng Sun, Mohamed Amine Ferrag, and Lucas C. Cordeiro. 2023. A new era in soft- ware security: Towards self-healing software via large language models and formal verifica- tion.  CoRR , abs/2305.14752. ", "page_idx": 13, "bbox": [72, 505.7161865234375, 290, 586.7158203125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 148, "type": "text", "text": "Angelica Chen, J´ er´ emy Scheurer, Tomasz Korbak, Jon Ander Campos, Jun Shern Chan, Samuel R. Bowman, Kyunghyun Cho, and Ethan Perez. 2023a. Improving code generation by training with natural language feedback.  CoRR , abs/ 2303.16749. ", "page_idx": 13, "bbox": [72, 592.4600219726562, 290, 673.5674438476562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 149, "type": "text", "text": "Bei Chen, Fengji Zhang, Anh Nguyen, Daoguang Zan, Zeqi Lin, Jian-Guang Lou, and Weizhu Chen. 2023b. Codet: Code generation with gen- erated tests. In  Proceedings of the 11th Interna- tional Conference on Learning Representations (ICLR) . ", "page_idx": 13, "bbox": [72, 679.4017944335938, 290, 760.4102172851562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 150, "type": "text", "text": "Justin Chih-Yao Chen, Swarnadeep Saha, and Mohit Bansal. 2023c. Reconcile: Round-table conference improves reasoning via consensus among diverse LLMs.  CoRR , abs/2309.13007. ", "page_idx": 13, "bbox": [307, 57.9512939453125, 525, 111.860107421875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 151, "type": "text", "text": "Pinzhen Chen, Zhicheng Guo, Barry Haddow, and Kenneth Heafield. 2023d. Iterative translation refinement with large language models.  CoRR , abs/2306.03856. ", "page_idx": 13, "bbox": [307, 118.70208740234375, 525, 172.60211181640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 152, "type": "text", "text": "Xinyun Chen, Maxwell Lin, Nathanael Sch¨ arli, and Denny Zhou. 2023e. Teaching large lan- guage models to self-debug.  CoRR , abs/2304 .05128. ", "page_idx": 13, "bbox": [307, 179.3450927734375, 525, 233.3529052734375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 153, "type": "text", "text": "I-Chun Chern, Steffi Chern, Shiqi Chen, Weizhe Yuan, Kehua Feng, Chunting Zhou, Junxian He, Graham Neubig, and Pengfei Liu. 2023. Factool: Factuality detection in generative AI – a tool augmented framework for multi-task and multi-domain scenarios.  CoRR , abs/2307 .13528. ", "page_idx": 13, "bbox": [307, 240.19488525390625, 525, 334.73992919921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 154, "type": "text", "text": "Elizabeth Clark, Tal August, Sofia Serrano, Nikita Haduong, Suchin Gururangan, and Noah A. Smith. 2021. All that’s ‘human’ is not gold: Evaluating human evaluation of generated text. In  Processing s of the 59th Annual Meeting of the Association for Computational Linguistics (ACL) , pages 7282–7296.  https://doi.org /10.18653/v1/2021.acl-long.565 ", "page_idx": 13, "bbox": [307, 341.5819091796875, 525, 449.5848388671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 155, "type": "text", "text": "Roi Cohen, May Hamri, Mor Geva, and Amir Globerson. 2023. LM vs LM: Detecting factual errors via cross examination.  CoRR , abs/2305 .13281.  https://doi.org/10.18653/v1 /2023.emnlp-main.778 ", "page_idx": 13, "bbox": [307, 456.51483154296875, 525, 523.8810424804688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 156, "type": "text", "text": "Antonia Creswell and Murray Shanahan. 2022. Faithful reasoning using large language mod- els.  CoRR , abs/2208.14271. ", "page_idx": 13, "bbox": [307, 530.81103515625, 525, 571.1656494140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 157, "type": "text", "text": "Ishita Dasgupta, Andrew K. Lampinen, Stephanie C. Y. Chan, Antonia Creswell, Dharshan Kumaran, James L. McClelland, and Felix Hill. 2022. Language models show human-like con- tent effects on reasoning.  CoRR , abs/2207 .07051. ", "page_idx": 13, "bbox": [307, 578.0076293945312, 525, 659.0072631835938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 158, "type": "text", "text": "Sumanth Dathathri, Andrea Madotto, Janice Lan, Jane Hung, Eric Frank, Piero Molino, Jason Yosinski, and Rosanne Liu. 2020. Plug and play language models: A simple approach to controlled text generation. In  Proceedings of the 8th International Conference on Learning Representations (ICLR) . ", "page_idx": 13, "bbox": [307, 665.8492431640625, 525, 760.4030151367188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 159, "type": "text", "text": "F´ elix do Carmo, Dimitar Shterionov, Joss Moorkens, Joachim Wagner, Murhaf Hossari, Eric Paquin, Dag Schmidtke, Declan Groves, and Andy Way. 2021. A review of the state- of-the-art in automatic post-editing.  Machine Translation , 35(2):101–143.  https://doi .org/10.1007/s10590-020-09252-y , PubMed: 34720417 ", "page_idx": 14, "bbox": [71, 57.84002685546875, 290, 166.03826904296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 160, "type": "text", "text": "Yilun Du, Shuang Li, Antonio Torralba, Joshua B. Tenenbaum, and Igor Mordatch. 2023. Im- proving factuality and reasoning in language models through multiagent debate.  CoRR , abs/2305.14325. ", "page_idx": 14, "bbox": [71, 172.80877685546875, 290, 240.26300048828125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 161, "type": "text", "text": "Yann Dubois, Xuechen Li, Rohan Taori, Tianyi Zhang, Ishaan Gulrajani, Jimmy Ba, Carlos Guestrin, Percy Liang, and Tatsunori B. Hashimoto. 2023. Alpacafarm: A simulation framework for methods that learn from human feedback.  CoRR , abs/2305.14387. ", "page_idx": 14, "bbox": [71, 247.03350830078125, 290, 328.03314208984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 162, "type": "text", "text": "Tobias Falke, Leonardo F. R. Ribeiro, Prasetya Ajie Utama, Ido Dagan, and Iryna Gurevych. 2019. Ranking generated summaries by correct- ness: An interesting but challenging application for natural language inference. In  Proceedings of the 57st Annual Meeting of the Associ- ation for Computational Linguistics (ACL) , pages 2214–2220.  https://doi.org/10 .18653/v1/P19-1213 ", "page_idx": 14, "bbox": [71, 334.80364990234375, 290, 456.36029052734375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 163, "type": "text", "text": "Patrick Fernandes, Aman Madaan, Emmy Liu, Ant´ onio Farinhas, Pedro Henrique Martins, Amanda Bertsch, Jos´ e G. C. de Souza, Shuyan Zhou, Tongshuang Wu, Graham Neubig, and Andr´ e F. T. Martins. 2023. Bridging the gap: A survey on integrating (human) feedback for natural language generation.  CoRR , abs/2305 .00955.  https://doi.org/10.1162/tacl a 00626 ", "page_idx": 14, "bbox": [71, 463.21881103515625, 290, 584.7720336914062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 164, "type": "text", "text": "Emanuela Ferretti, Kristina Rohde, Gregory P. Moore, and Thierry Daboval. 2019. Catch the moment: The power of turning mistakes into ‘precious’ learning opportunities.  Pae di at ric s & Child Health , 24(3):156–159.  https:// doi.org/10.1093/pch/pxy102 , PubMed: 31111832 ", "page_idx": 14, "bbox": [71, 591.62060546875, 290, 686.1743774414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 165, "type": "text", "text": "Emily First, Markus N. Rabe, Talia Ringer, and Yuriy Brun. 2023. Baldur: Whole-proof gen- eration and repair with large language models. CoRR , abs/2303.04910.  https://doi.org /10.1145/3611643.3616243 ", "page_idx": 14, "bbox": [71, 692.9448852539062, 290, 760.3110961914062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 166, "type": "text", "text": "Markus Freitag, David Grangier, Qijun Tan, and Bowen Liang. 2022. High quality rather than high model probability: Minimum bayes risk decoding with neural metrics.  Transactions of the Association for Computational Linguistics (TACL) , pages 811–825.  https://doi.org /10.1162/tacl_a_00491", "page_idx": 14, "bbox": [307, 57.940185546875, 525, 152.40602111816406], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 167, "type": "text", "text": "Yao Fu, Hao Peng, Tushar Khot, and Mirella Lapata. 2023. Improving language model ne- gotiation with self-play and in-context learning from AI feedback.  CoRR , abs/2305.10142. ", "page_idx": 14, "bbox": [307, 160.560302734375, 525, 214.4603271484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 168, "type": "text", "text": "Deep Ganguli, Amanda Askell, Nicholas Schiefer, Thomas I. Liao, Kamile Lukosiute, Anna Chen, Anna Goldie, Azalia Mirhoseini, Catherine Olsson, Danny Hernandez, Dawn Drain, Dustin Li, Eli Tran-Johnson, Ethan Perez, Jackson Kernion, Jamie Kerr, Jared Mueller, Joshua Landau, Kamal Ndousse, Karina Nguyen, Liane Lovitt, Michael Sellitto, Nelson Elhage, Noem´ Mercado, Nova DasSarma, Oliver Rausch, Robert Lasenby, Robin Larson, Sam Ringer, Sandipan Kundu, Saurav Kadavath, Scott Johnston, Shauna Kravec, Sheer El Showk, Tamera Lanham, Timothy Telleen-Lawton, Tom Henighan, Tristan Hume, Yuntao Bai, Zac Hatfield-Dodds, Ben Mann, Dario Amodei, Nicholas Joseph, Sam McCandlish, Tom Brown, Christopher Olah, Jack Clark, Samuel R. Bowman, and Jared Kaplan. 2023. The ca- pacity for moral self-correction in large lan- guage models.  CoRR , abs/2302.07459. ", "page_idx": 14, "bbox": [307, 222.517822265625, 525, 493.2147216796875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 169, "type": "text", "text": "Ge Gao, Hung-Ting Chen, Yoav Artzi, and Eunsol Choi. 2023a. Continually improving extrac- tive QA via human feedback.  CoRR , abs/ 2305.12473.  https://doi.org/10.18653 /v1/2023.emnlp-main.27 ", "page_idx": 14, "bbox": [307, 501.281005859375, 525, 568.647216796875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 170, "type": "text", "text": "Luyu Gao, Zhuyun Dai, Panupong Pasupat, Anthony Chen, Arun Tejasvi Chaganty, Yicheng Fan, Vincent Y. Zhao, Ni Lao, Hongrae Lee, Da-Cheng Juan, and Kelvin Guu. 2023b. Rarr: Researching and revising what language models say, using language models. In  Proceedings of the 61th Annual Meeting of the Association for Computational Linguistics (ACL) .  https://doi.org/10.18653/v1 /2023.acl-long.910 ", "page_idx": 14, "bbox": [307, 576.792724609375, 525, 711.9035034179688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 171, "type": "text", "text": "Samuel Gehman, Suchin Gururangan, Maarten Sap, Yejin Choi, and Noah A. Smith. 2020. Real Toxicity Prompts: Evaluating neural toxic ", "page_idx": 14, "bbox": [307, 720.0578002929688, 525, 760.4124145507812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 172, "type": "text", "text": "degeneration in language models. In  Find- ings of the Association for Computational Linguistics: EMNLP 2020 , pages 3356–3369. https://doi.org/10.18653/v1/2020 .findings-emnlp.301 ", "page_idx": 15, "bbox": [82, 57.93902587890625, 290, 125.30524444580078], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 173, "type": "text", "text": "Zelalem Gero, Chandan Singh, Hao Cheng, Tristan Naumann, Michel Galley, Jianfeng Gao, and Hoifung Poon. 2023. Self-verification improves few-shot clinical information extrac- tion.  CoRR , abs/2306.00024. ", "page_idx": 15, "bbox": [72, 134.42205810546875, 290, 201.87628173828125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 174, "type": "text", "text": "Amelia Glaese, Nat McAleese, Maja Trebacz, John Aslanides, Vlad Firoiu, Timo Ewalds, Maribeth Rauh, Laura Weidinger, Martin J. Chadwick, Phoebe Thacker, Lucy Campbell- Gillingham, Jonathan Uesato, Po-Sen Huang, Ramona Comanescu, Fan Yang, Abigail See, Sumanth Dathathri, Rory Greig, Charlie Chen, Doug Fritz, Jaume Sanchez Elias, Richard Green, Sona Mokr´ a, Nicholas Fernando, Boxi Wu, Rachel Foley, Susannah Young, Iason Gabriel, William Isaac, John Mellor, Demis Hassabis, Koray Ka vuk cuo g lu, Lisa Anne Hendricks, and Geoffrey Irving. 2022. Improv- ing alignment of dialogue agents via targeted human judgements.  CoRR , abs/2209.14375. ", "page_idx": 15, "bbox": [72, 210.89630126953125, 290, 413.84857177734375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 175, "type": "text", "text": "Dongyoung Go, Tomasz Korbak, Germ´ an Kruszewski, Jos Rozen, Nahyeon Ryu, and Marc Dymetman. 2023. Aligning language models with preferences through f-divergence minimization.  CoRR , abs/2302.08215. ", "page_idx": 15, "bbox": [72, 422.7695617675781, 290, 490.3227844238281], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 176, "type": "text", "text": "Olga Golovneva, Moya Chen, Spencer Poff, Martin Corredor, Luke Z ett le moyer, Maryam Fazel-Zarandi, and Asli Cel i kyi l maz. 2023. ROSCOE: A suite of metrics for scoring step- by-step reasoning. In  Proceedings of the 11th International Conference on Learning Repre- sentations (ICLR) . ", "page_idx": 15, "bbox": [72, 499.3515930175781, 290, 593.8966064453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 177, "type": "text", "text": "Zhibin Gou, Zhihong Shao, Yeyun Gong, Yelong Shen, Yujiu Yang, Nan Duan, and Weizhu Chen. 2023. CRITIC: Large language models can self-correct with tool-interactive critiquing. CoRR , abs/2305.11738. ", "page_idx": 15, "bbox": [72, 602.9254150390625, 290, 670.3795776367188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 178, "type": "text", "text": "Caglar Gulcehre, Tom Le Paine, Srivatsan Srinivasan, Ksenia Kon yu sh kova, Lotte Weerts, Abhishek Sharma, Aditya Siddhant, Alex Ahern, Miaosen Wang, Chenjie Gu, Wolfgang Macherey, Arnaud Doucet, Orhan Firat, and Nando de Freitas. 2023. Reinforced self- ", "page_idx": 15, "bbox": [72, 679.3995971679688, 290, 760.4080200195312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 179, "type": "text", "text": "training (rest) for language modeling.  CoRR , abs/2308.08998. ", "page_idx": 15, "bbox": [318, 57.9490966796875, 526, 84.75830078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 180, "type": "text", "text": "Biyang Guo, Xin Zhang, Ziyuan Wang, Minqi Jiang, Jinran Nie, Yuxuan Ding, Jianwei Yue, and Yupeng Wu. 2023. How close is chatgpt to human experts? Comparison corpus, evalua- tion, and detection.  CoRR , abs/2301.07597. ", "page_idx": 15, "bbox": [307, 93.2921142578125, 526, 160.746337890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 181, "type": "text", "text": "Shibo Hao, Yi Gu, Haodi Ma, Joshua Jiahua Hong, Zhen Wang, Daisy Zhe Wang, and Zhiting Hu. 2023. Reasoning with language model is planning with world model.  CoRR , abs/2305.14992. https://doi.org/10 .18653/v1/2023.emnlp-main.507 ", "page_idx": 15, "bbox": [307, 169.2801513671875, 526, 250.19178771972656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 182, "type": "text", "text": "Hangfeng He, Hongming Zhang, and Dan Roth. 2023. Rethinking with retrieval: Faithful large language model inference.  CoRR , abs/2301 .00303. ", "page_idx": 15, "bbox": [307, 258.8223876953125, 526, 312.722412109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 183, "type": "text", "text": "Pengcheng He, Xiaodong Liu, Jianfeng Gao, and Weizhu Chen. 2021. Deberta: Decoding- enhanced bert with disentangled attention. In Proceedings of The 9th International Confer- ence on Learning Representations (ICLR) . ", "page_idx": 15, "bbox": [307, 321.2561950683594, 526, 388.7104187011719], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 184, "type": "text", "text": "Alec Helbling, Mansi Phute, Matthew Hull, and Duen Horng Chau. 2023. LLM self defense: By self examination, LLMs know they are being tricked.  CoRR , abs/2308.07308. ", "page_idx": 15, "bbox": [307, 397.24420166015625, 526, 451.15301513671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 185, "type": "text", "text": "Jason Hoelscher-Obermaier, Julia Persson, Esben Kran, Ioannis Konstas, and Fazl Barez. 2023. Detecting edit failures in large language mod- els: An improved specificity benchmark. In Findings of the Association for Computational Linguistics: ACL 2023 , pages 11548–11559. https://doi.org/10.18653/v1/2023 .findings-acl.733 ", "page_idx": 15, "bbox": [307, 459.6867980957031, 526, 567.6821899414062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 186, "type": "text", "text": "Ari Holtzman, Jan Buys, Maxwell Forbes, Antoine Bosselut, David Golub, and Yejin Choi. 2018. Learning to write with coopera- tive disc rim in at or s. In  Proceedings of the 56th Annual Meeting of the Association for Compu- tational Linguistics (ACL) , pages 1638–1649. https://doi.org/10.18653/v1/P18 -1152 ", "page_idx": 15, "bbox": [307, 576.3040161132812, 526, 684.3240356445312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 187, "type": "text", "text": "Ruixin Hong, Hongming Zhang, Xinyu Pang, Dong Yu, and Changshui Zhang. 2023. A closer look at the self-verification abilities of large language models in logical reasoning. CoRR , abs/2311.07954. ", "page_idx": 15, "bbox": [307, 692.94580078125, 526, 760.4000244140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 188, "type": "text", "text": "Jie Huang, Xinyun Chen, Swaroop Mishra, Huaixiu Steven Zheng, Adams Wei Yu, Xinying Song, and Denny Zhou. 2023. Large language models cannot self-correct reasoning yet.  CoRR , abs/2310.01798. ", "page_idx": 16, "bbox": [71, 57.93902587890625, 290, 125.39324951171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 189, "type": "text", "text": "Jiaxin Huang, Shixiang Shane Gu, Le Hou, Yuexin Wu, Xuezhi Wang, Hongkun Yu, and Jiawei Han. 2022. Large language mod- els can self-improve.  CoRR , abs/2210.11610. https://doi.org/10.18653/v1/2023 .emnlp-main.67 ", "page_idx": 16, "bbox": [71, 134.42205810546875, 290, 215.3336944580078], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 190, "type": "text", "text": "Shuyang Jiang, Yuhao Wang, and Yu Wang. 2023. Selfevolve: A code evolution framework via large language models.  CoRR , abs/2306.02907. ", "page_idx": 16, "bbox": [71, 224.45050048828125, 290, 264.80511474609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 191, "type": "text", "text": "Jaehun Jung, Lianhui Qin, Sean Welleck, Faeze Brahman, Chandra Bhaga va tula, Ronan Le Bras, and Yejin Choi. 2022. Maieu- tic prompting: Logically consistent reasoning with recursive explanations. In  Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing (EMNLP) , pages 1266–1279.  https://doi.org/10 .18653/v1/2022.emnlp-main.82 ", "page_idx": 16, "bbox": [71, 273.82513427734375, 290, 395.39056396484375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 192, "type": "text", "text": "Saurav Kadavath, Tom Conerly, Amanda Askell, Tom Henighan, Dawn Drain, Ethan Perez, Nicholas Schiefer, Zac Hatfield-Dodds, Nova DasSarma, Eli Tran-Johnson, Scott Johnston, Sheer El Showk, Andy Jones, Nelson Elhage, Tristan Hume, Anna Chen, Yuntao Bai, Sam Bowman, Stanislav Fort, Deep Ganguli, Danny Hernandez, Josh Jacobson, Jackson Kernion, Shauna Kravec, Liane Lovitt, Kamal Ndousse, Catherine Olsson, Sam Ringer, Dario Amodei, Tom Brown, Jack Clark, Nicholas Joseph, Ben Mann, Sam McCandlish, Chris Olah, and Jared Kaplan. 2022. Language models (mostly) know what they know.  CoRR , abs/2207.05221. ", "page_idx": 16, "bbox": [71, 404.4985656738281, 290, 593.8966064453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 193, "type": "text", "text": "Pei Ke, Bosi Wen, Zhuoer Feng, Xiao Liu, Xuanyu Lei, Jiale Cheng, Shengyuan Wang, Aohan Zeng, Yuxiao Dong, Hongning Wang, Jie Tang, and Minlie Huang. 2023. Critique LL M: Scal- ing LLM-as-critic for effective and explain able evaluation of large language model generation. CoRR , abs/2311.18702. ", "page_idx": 16, "bbox": [71, 602.9254150390625, 290, 697.4791870117188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 194, "type": "text", "text": "Amol Kelkar, Rohan Relan, Vaishali Bhardwaj, Saurabh Vaichal, and Peter Relan. 2020. Bertrand-dr: Improving text-to-sql using a dis- cri mi native re-ranker.  CoRR , abs/2002.00557. ", "page_idx": 16, "bbox": [71, 706.4992065429688, 290, 760.4080200195312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 195, "type": "text", "text": "Muhammad Khalifa, Lajanugen Logeswaran, Moontae Lee, Honglak Lee, and Lu Wang. 2023. Disc rim in at or-guided multi-step reason- ing with language models.  CoRR , abs/2305 .14934. ", "page_idx": 16, "bbox": [307, 57.9490966796875, 525, 125.4033203125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 196, "type": "text", "text": "Geunwoo Kim, Pierre Baldi, and Stephen McAleer. 2023. Language models can solve computer tasks.  CoRR , abs/2303.17491. ", "page_idx": 16, "bbox": [307, 131.24652099609375, 525, 171.60113525390625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 197, "type": "text", "text": "James Kirkpatrick, Razvan Pascanu, Neil C. Rabinowitz, Joel Veness, Guillaume Desjardins, Andrei A. Rusu, Kieran Milan, John Quan, Tiago Ramalho, Agnieszka Grabska-Barwinska, Demis Hassabis, Claudia Clopath, Dharshan Kumaran, and Raia Hadsell. 2016. Overcoming catastrophic forgetting in neural networks.  CoRR , abs/1612.00796. ", "page_idx": 16, "bbox": [307, 177.4443359375, 525, 285.5435791015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 198, "type": "text", "text": "Takeshi Kojima, Shixiang Shane Gu, Machel Reid, Yutaka Matsuo, and Yusuke Iwasawa. 2022. Large language models are zero-shot reasoners. In  Proceedings of the 2022 Annual Conference on Neural Information Processing Systems (NeurIPS) . ", "page_idx": 16, "bbox": [307, 291.38677978515625, 525, 372.38641357421875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 199, "type": "text", "text": "Julia Kreutzer, Shahram Khadivi, Evgeny Matusov, and Stefan Riezler. 2018. Can neural machine translation be improved with user feed- back? In  Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Lan- guage Technologies (NAACL-HIT) .  https:// doi.org/10.18653/v1/N18-3012 ", "page_idx": 16, "bbox": [307, 378.2296142578125, 525, 486.2496337890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 200, "type": "text", "text": "Hung Le, Yue Wang, Akhilesh Deepak Gotmare, Silvio Savarese, and Steven Chu-Hong Hoi. 2022. Coderl: Mastering code generation through pretrained models and deep reinforce- ment learning. In  Proceedings of the Annual Conference on Neural Information Processing Systems (NeurIPS) . ", "page_idx": 16, "bbox": [307, 492.1620178222656, 525, 586.7070922851562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 201, "type": "text", "text": "Dongjun Lee. 2019. Clause-wise and recursive de- coding for complex and cross-domain text-to- SQL generation. In  Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Pro- cessing (EMNLP-IJCNLP) , pages 6045–6051. https://doi.org/10.18653/v1/D19 -1624 ", "page_idx": 16, "bbox": [307, 592.5502319335938, 525, 714.1156616210938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 202, "type": "text", "text": "Kyungjae Lee, Wookje Han, Seung-won Hwang, Hwaran Lee, Joonsuk Park, and Sang-Woo Lee. 2022. Plug-and-play adaptation ", "page_idx": 16, "bbox": [307, 720.0468139648438, 525, 760.4014282226562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 203, "type": "text", "text": "for continuously-updated QA. In  Findings of the Association for Computational Linguistics: ACL 2022 , pages 438–447.  https://doi.org /10.18653/v1/2022.findings-acl.37 ", "page_idx": 17, "bbox": [82, 57.93902587890625, 290, 111.75983428955078], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 204, "type": "text", "text": "WonKee Lee, Baikjin Jung, Jaehun Shin, and Jong-Hyeok Lee. 2021. Adaptation of back- translation to automatic post-editing for syn- thetic data generation. In  Proceedings of the 16th Conference of the European Chapter of the Association for Computational Linguistics (EACL) , pages 3685–3691.  https://doi .org/10.18653/v1/2021.eacl-main .322 ", "page_idx": 17, "bbox": [72, 117.6910400390625, 290, 239.24769592285156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 205, "type": "text", "text": "Sharon Levy, Emily Allaway, Melanie Subbiah, Lydia Chilton, Desmond Patton, Kathleen McKeown, and William Yang Wang. 2022. SafeText: A benchmark for exploring physical safety in language models. In  Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing (EMNLP) , pages 2407–2421.  https://doi.org/10 .18653/v1/2022.emnlp-main.154 ", "page_idx": 17, "bbox": [72, 245.17889404296875, 290, 366.74432373046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 206, "type": "text", "text": "Sharon Levy, Michael Saxon, and William Yang Wang. 2021. Investigating memorization of conspiracy theories in text generation. In  Find- ings of the Association for Computational Lin- guistics: ACL-IJCNLP 2021 , pages 4718–4729, Online. Association for Computational Linguis- tics. https://doi.org/10.18653/v1 /2021.findings-acl.416 ", "page_idx": 17, "bbox": [72, 372.675537109375, 290, 480.686767578125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 207, "type": "text", "text": "Junyi Li, Xiaoxue Cheng, Wayne Xin Zhao, Jian-Yun Nie, and Ji-Rong Wen. 2023a. Hal- ueval: A large-scale hallucination evaluation benchmark for large language models.  CoRR , abs/2305.11747. ", "page_idx": 17, "bbox": [72, 486.61798095703125, 290, 554.0722045898438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 208, "type": "text", "text": "Miaoran Li, Baolin Peng, and Zhu Zhang. 2023b. Self-checker: Plug-and-play modules for fact-checking with large language models. CoRR , abs/2305.14623. ", "page_idx": 17, "bbox": [72, 559.9154052734375, 290, 613.8154296875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 209, "type": "text", "text": "Ruosen Li, Teerth Patel, and Xinya Du. 2023c. PRD: Peer rank and discussion improve large language model based evaluations.  CoRR , abs/ 2307.02762. ", "page_idx": 17, "bbox": [72, 619.6586303710938, 290, 673.5674438476562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 210, "type": "text", "text": "Xiang Li, John Thickstun, Ishaan Gulrajani, Percy Liang, and Tatsunori B. Hashimoto. 2022. Diffusion-lm improves controllable text gener- ation. In  Proceedings of the Annual Conference on Neural Information Processing Systems (NeurIPS) . ", "page_idx": 17, "bbox": [72, 679.4017944335938, 290, 760.4102172851562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 211, "type": "text", "text": "Yifei Li, Zeqi Lin, Shizhuo Zhang, Qiang Fu, Bei Chen, Jian-Guang Lou, and Weizhu Chen. 2023d. Making language models better reason- ers with step-aware verifier. In  Proceedings of the 61st Annual Meeting of the Associ- ation for Computational Linguistics (ACL) , pages 5315–5333.  https://doi.org/10 .18653/v1/2023.acl-long.291 ", "page_idx": 17, "bbox": [307, 57.9512939453125, 525, 165.96253967285156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 212, "type": "text", "text": "Hunter Lightman, Vineet Kosaraju, Yura Burda, Harrison Edwards, Bowen Baker, Teddy Lee, Jan Leike, John Schulman, Ilya Sutskever, and Karl Cobbe. 2023. Let’s verify step by step. CoRR , abs/2305.20050. ", "page_idx": 17, "bbox": [307, 173.82861328125, 525, 241.2828369140625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 213, "type": "text", "text": "Stephanie Lin, Jacob Hilton, and Owain Evans. 2022. TruthfulQA: Measuring how models mimic human falsehoods. In  Proceedings of the 60th Annual Meeting of the Associa- tion for Computational Linguistics (ACL) , pages 3214–3252.  https://doi.org/10 .18653/v1/2022.acl-long.229 ", "page_idx": 17, "bbox": [307, 249.0609130859375, 525, 343.5267333984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 214, "type": "text", "text": "Yen-Ting Lin and Yun-Nung Chen. 2023. LLM-eval: Unified multi-dimensional automatic evaluation for open-domain conversations with large language models.  CoRR , abs/2305.13711. ", "page_idx": 17, "bbox": [307, 351.3928527832031, 525, 405.3016662597656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 215, "type": "text", "text": "Zhen Lin, Shubhendu Trivedi, and Jimeng Sun. 2023. Generating with confidence: Uncertainty quant if i cation for black-box large language models.  CoRR , abs/2305.19187. ", "page_idx": 17, "bbox": [307, 413.07977294921875, 525, 466.960205078125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 216, "type": "text", "text": "Hao Liu, Carmelo Sferrazza, and Pieter Abbeel. 2023a. Chain of hindsight aligns language models with feedback.  CoRR , abs/2302.02676. ", "page_idx": 17, "bbox": [307, 474.7383117675781, 525, 515.0929565429688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 217, "type": "text", "text": "Jiacheng Liu, Ramakanth Pasunuru, Hannaneh Hajishirzi, Yejin Choi, and Asli Cel i kyi l maz. 2023b. Crystal: Introspective reasoners rein- forced with self-feedback. In  Proceedings of the 2023 Conference on Empirical Methods in Natural Language Processing (EMNLP) , pages 11557–11572.  https://doi.org/10 .18653/v1/2023.emnlp-main.708 ", "page_idx": 17, "bbox": [307, 522.8710327148438, 525, 630.8822631835938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 218, "type": "text", "text": "Yixin Liu and Pengfei Liu. 2021. Simcls: A simple framework for contrastive learning of abstract ive sum mari z ation. In  Proceedings of the 59th Annual Meeting of the Asso- ciation for Computational Linguistics and the 11th International Joint Conference on Natural Language Processing (ACL/IJCNLP) , pages 1065–1072.  https://doi.org/10 .18653/v1/2021.acl-short.135 ", "page_idx": 17, "bbox": [307, 638.7483520507812, 525, 760.313720703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 219, "type": "text", "text": "Manuel London, Valerie I. Sessa, and Loren A. Shelley. 2023. Developing self-awareness: Learning processes for self-and interpersonal growth.  Annual Review of Organizational Psychology and Organizational Behavior , 10:261–288.  https://doi.org/10.1146 /annurev-orgpsych-120920-044531 ", "page_idx": 18, "bbox": [71, 57.93902587890625, 291, 152.4048614501953], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 220, "type": "text", "text": "Ximing Lu, Sean Welleck, Jack Hessel, Liwei Jiang, Lianhui Qin, Peter West, Prithviraj Amman a bro lu, and Yejin Choi. 2022. QUARK: Controllable text generation with reinforced unlearning. In  Proceedings of the Annual Conference on Neural Information Processing Systems (NeurIPS) . ", "page_idx": 18, "bbox": [71, 158.3360595703125, 291, 252.889892578125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 221, "type": "text", "text": "Chenyang Lyu, Jitao Xu, and Longyue Wang. 2023a. New trends in machine translation us- ing large language models: Case examples with chatgpt.  CoRR , abs/2305.01181.  https://doi .org/10.18653/v1/2023.emnlp-main.1036 ", "page_idx": 18, "bbox": [71, 258.73309326171875, 291, 326.09930419921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 222, "type": "text", "text": "Qing Lyu, Shreya Havaldar, Adam Stein, Li Zhang, Delip Rao, Eric Wong, Marianna Apidianaki, and Chris Callison-Burch. 2023b. Faithful chain-of-thought reasoning.  CoRR , abs/2301.13379.  https://doi.org/10.18653 /v1/2023.ijcnlp-main.20 ", "page_idx": 18, "bbox": [71, 332.0216979980469, 291, 412.9421081542969], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 223, "type": "text", "text": "Aman Madaan, Niket Tandon, Peter Clark, and Yiming Yang. 2022. Memory-assisted prompt editing to improve GPT-3 after deployment. In Proceedings of the 2022 Conference on Em- pirical Methods in Natural Language Process- ing (EMNLP) , pages 2833–2861.  https://doi .org/10.18653/v1/2022.emnlp-main.183 ", "page_idx": 18, "bbox": [71, 418.8733215332031, 291, 513.3391723632812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 224, "type": "text", "text": "Aman Madaan, Niket Tandon, Prakhar Gupta, Skyler Hallinan, Luyu Gao, Sarah Wiegreffe, Uri Alon, Nouha Dziri, Shrimai Prabhumoye, Yiming Yang, Sean Welleck, Bodhi s at twa Prasad Majumder, Shashank Gupta, Amir Yaz dan bakhsh, and Peter Clark. 2023. Self- refine: Iterative refinement with self-feedback. CoRR , abs/2303.17651. ", "page_idx": 18, "bbox": [71, 519.2615356445312, 291, 627.3695678710938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 225, "type": "text", "text": "Potsawee Manakul, Adian Liusie, and Mark J. F. Gales. 2023. Self check gp t: Zero-resource black-box hallucination detection for generative large language models.  CoRR , abs/2303.08896. https://doi.org/10.18653/v1/2023 .emnlp-main.557 ", "page_idx": 18, "bbox": [71, 633.2127685546875, 291, 714.1243286132812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 226, "type": "text", "text": "Ninareh Mehrabi, Palash Goyal, Christophe Dupuy, Qian Hu, Shalini Ghosh, Richard Zemel, Kai-Wei Chang, Aram Galstyan, and ", "page_idx": 18, "bbox": [71, 720.0555419921875, 291, 760.41015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 227, "type": "text", "text": "Rahul Gupta. 2023. Flirt: Feedback loop in-context red teaming.  CoRR , abs/2308.04265. ", "page_idx": 18, "bbox": [318, 57.95123291015625, 526, 84.76043701171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 228, "type": "text", "text": "Janet Metcalfe. 2017. Learning from errors. Annual Review of Psychology , 68:465–489. https://doi.org/10.1146/annurev -psych-010416-044022 , PubMed: 27648988 ", "page_idx": 18, "bbox": [307, 89.91064453125, 526, 143.8106689453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 229, "type": "text", "text": "Ning Miao, Yee Whye Teh, and Tom Rainforth. 2023. Selfcheck: Using LLMs to zero-shot check their own step-by-step reasoning.  CoRR , abs/2308.00436. ", "page_idx": 18, "bbox": [307, 148.96087646484375, 526, 202.86090087890625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 230, "type": "text", "text": "Sewon Min, Kalpesh Krishna, Xinxi Lyu, Mike Lewis, Wen-tau Yih, Pang Wei Koh, Mohit Iyyer, Luke Z ett le moyer, and Hannaneh Hajishirzi. 2023. Factscore: Fine-grained atomic evaluation of factual precision in long form text generation.  CoRR , abs/2305.14251. https://doi.org/10.18653/v1/2023 .emnlp-main.741 ", "page_idx": 18, "bbox": [307, 208.0111083984375, 526, 316.0223388671875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 231, "type": "text", "text": "Shikhar Murty, Christopher D. Manning, Scott M. Lundberg, and Marco T´ ulio Ribeiro. 2022. Fixing model bugs with natural language patches. In  Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing (EMNLP) , pages 11600–11613. https://doi.org/10.18653/v1/2022 .emnlp-main.797 ", "page_idx": 18, "bbox": [307, 321.26055908203125, 526, 429.25189208984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 232, "type": "text", "text": "Deepak Nathani, David Wang, Liangming Pan, and William Wang. 2023. MAF: Multi- aspect feedback for improving reasoning in large language models. In  Proceedings of the 2023 Conference on Empirical Methods in Natural Language Processing (EMNLP) , pages 6591–6616.  https://doi.org/10 .18653/v1/2023.emnlp-main.407 ", "page_idx": 18, "bbox": [307, 434.4901123046875, 526, 542.5101318359375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 233, "type": "text", "text": "Ansong Ni, Srini Iyer, Dragomir Radev, Ves Stoyanov, Wen-tau Yih, Sida I. Wang, and Xi Victoria Lin. 2023. LEVER: Learning to verify language-to-code generation with execution. In Proceedings of the 40th International Confer- ence on Machine Learning (ICML) . ", "page_idx": 18, "bbox": [307, 547.7395629882812, 526, 628.7479248046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 234, "type": "text", "text": "Theo X. Olausson, Jeevana Priya Inala, Chenglong Wang, Jianfeng Gao, and Armando Solar-Lezama. 2023. De mystifying GPT self- repair for code generation.  CoRR , abs/2306 .09896. ", "page_idx": 18, "bbox": [307, 633.8981323242188, 526, 701.3523559570312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 235, "type": "text", "text": "Yasumasa Onoe, Michael J. Q. Zhang, Shankar Padma nab han, Greg Durrett, and Eunsol Choi. 2023. Can lms learn new entities from de- scriptions? Challenges in propagating injected ", "page_idx": 18, "bbox": [307, 706.4937133789062, 526, 760.4025268554688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 236, "type": "text", "text": "knowledge. In  Proceedings of the 61st An- nual Meeting of the Association for Compu- tational Linguistics (ACL) , pages 5469–5485. https://doi.org/10.18653/v1/2023 .acl-long.300 ", "page_idx": 19, "bbox": [82, 57.93902587890625, 290, 125.30524444580078], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 237, "type": "text", "text": "OpenAI. 2023. GPT-4 technical report.  CoRR , abs/2303.08774. ", "page_idx": 19, "bbox": [72, 135.10626220703125, 290, 161.91546630859375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 238, "type": "text", "text": "Long Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll L. Wainwright, Pamela Mishkin, Chong Zhang, Sandhini Agarwal, Katarina Slama, Alex Ray, John Schulman, Jacob Hilton, Fraser Kelton, Luke Miller, Maddie Simens, Amanda Askell, Peter Welinder, Paul F. Christiano, Jan Leike, and Ryan Lowe. 2022. Training language models to follow instructions with human feedback. In Proceedings of the Annual Conference on Neu- ral Information Processing Systems (NeurIPS) . ", "page_idx": 19, "bbox": [72, 171.62847900390625, 290, 320.37274169921875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 239, "type": "text", "text": "Liangming Pan, Alon Albalak, Xinyi Wang, and William Yang Wang. 2023. Logic-LM: Em- powering large language models with symbolic solvers for faithful logical reasoning.  CoRR , abs/2305.12295.  https://doi.org/10.18653 /v1/2023.findings-emnlp.248 ", "page_idx": 19, "bbox": [72, 330.0857238769531, 290, 411.0061340332031], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 240, "type": "text", "text": "Jing-Cheng Pang, Pengyuan Wang, Kaiyuan Li, Xiong-Hui Chen, Jiacheng Xu, Zongzhang Zhang, and Yang Yu. 2023. Language model self-improvement by reinforcement learning contemplation.  CoRR , abs/2305.14483. ", "page_idx": 19, "bbox": [72, 420.80712890625, 290, 488.2613525390625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 241, "type": "text", "text": "Debjit Paul, Mete Is may i lz ada, Maxime Peyrard, Beatriz Borges, Antoine Bosselut, Robert West, and Boi Faltings. 2023. REFINER: Reason- ing feedback on intermediate representations. CoRR , abs/2304.01904. ", "page_idx": 19, "bbox": [72, 497.9743347167969, 290, 565.4285278320312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 242, "type": "text", "text": "Baolin Peng, Michel Galley, Pengcheng He, Hao Cheng, Yujia Xie, Yu Hu, Qiuyuan Huang, Lars Liden, Zhou Yu, Weizhu Chen, and Jianfeng Gao. 2023. Check your facts and try again: Improving large language models with exter- nal knowledge and automated feedback.  CoRR , abs/2302.12813. ", "page_idx": 19, "bbox": [72, 575.1415405273438, 290, 669.6865234375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 243, "type": "text", "text": "Dongqi Pu and Vera Demberg. 2023. Chatgpt vs human-authored text: Insights into controllable text sum mari z ation and sentence style transfer. In  Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics: Student Research Workshop (ACL) , pages 1–18. ", "page_idx": 19, "bbox": [72, 679.3995361328125, 290, 760.4078979492188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 244, "type": "text", "text": "Chengwei Qin, Aston Zhang, Zhuosheng Zhang, Jiaao Chen, Michihiro Yasunaga, and Diyi Yang. 2023. Is chatgpt a general-purpose nat- ural language processing task solver?  CoRR , abs/2302.06476. ", "page_idx": 19, "bbox": [307, 57.94903564453125, 526, 125.40325927734375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 245, "type": "text", "text": "Vikas Raunak, Amr Sharaf, Hany Hassan Awadallah, and Arul Menezes. 2023. Lever- aging GPT-4 for automatic translation post- editing.  CoRR , abs/2305.14878.  https://doi .org/10.18653/v1/2023.findings-emnlp .804 ", "page_idx": 19, "bbox": [307, 129.91436767578125, 526, 210.8260040283203], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 246, "type": "text", "text": "Danilo Neves Ribeiro, Shen Wang, Xiaofei Ma, Henry Zhu, Rui Dong, Deguang Kong, Juliette Burger, Anjelica Ramos, William Yang Wang, Zhiheng Huang, George Karypis, Bing Xiang, and Dan Roth. 2023. STREET: A multi-task structured reasoning and explanation bench- mark. In  Proceedings of the 11th Interna- tional Conference on Learning Representations (ICLR) . ", "page_idx": 19, "bbox": [307, 215.42510986328125, 526, 337.07855224609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 247, "type": "text", "text": "Manasvi Sagarkar, John Wieting, Lifu Tu, and Kevin Gimpel. 2018. Quality signals in gen- erated stories. In  Proceedings of the Seventh Joint Conference on Lexical and Computa- tional Semantics (SEM@NAACL-HLT 2018) , pages 192–202.  https://doi.org/10.18653 /v1/S18-2024 ", "page_idx": 19, "bbox": [307, 341.5808410644531, 526, 436.0466613769531], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 248, "type": "text", "text": "Swarnadeep Saha, Sayan Ghosh, Shashank Srivastava, and Mohit Bansal. 2020. PRover: Proof generation for interpret able reasoning over rules. In  Proceedings of the 2020 Confer- ence on Empirical Methods in Natural Lan- guage Processing (EMNLP) , pages 122–136. https://doi.org/10.18653/v1/2020 .emnlp-main.9 ", "page_idx": 19, "bbox": [307, 440.6457824707031, 526, 548.6382446289062], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 249, "type": "text", "text": "William Saunders, Catherine Yeh, Jeff Wu, Steven Bills, Long Ouyang, Jonathan Ward, and Jan Leike. 2022. Self-critiquing models for assisting human evaluators.  CoRR , abs/2206 .05802. ", "page_idx": 19, "bbox": [307, 553.2373657226562, 526, 620.6915283203125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 250, "type": "text", "text": "Michael Saxon, Xinyi Wang, Wenda Xu, and William Yang Wang. 2023. PECO: Examining single sentence label leakage in natural lan- guage inference datasets through progressive evaluation of cluster outliers. In  Proceedings of the 17th Conference of the European Chap- ter of the Association for Computational Lin- guistics (EACL) , pages 3053–3066.  https:// doi.org/10.18653/v1/2023.eacl-main .223 ", "page_idx": 19, "bbox": [307, 625.20263671875, 526, 760.3134155273438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 251, "type": "text", "text": "J´ er´ emy Scheurer, Jon Ander Campos, Tomasz Korbak, Jun Shern Chan, Angelica Chen, Kyunghyun Cho, and Ethan Perez. 2023. Train- ing language models with language feedback at scale.  CoRR , abs/2303.16755. ", "page_idx": 20, "bbox": [71, 57.84002685546875, 290, 125.39324951171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 252, "type": "text", "text": "Timo Schick, Jane A. Yu, Zhengbao Jiang, Fabio Petroni, Patrick S. H. Lewis, Gautier Izacard, Qingfei You, Christof oros Nalmpantis, Edouard Grave, and Sebastian Riedel. 2023. PEER: A collaborative language model. In  Pro- ceedings of the 11th International Conference on Learning Representations (ICLR) . ", "page_idx": 20, "bbox": [71, 130.54345703125, 290, 225.0972900390625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 253, "type": "text", "text": "John Schulman, Filip Wolski, Prafulla Dhariwal, Alec Radford, and Oleg Klimov. 2017. Prox- imal policy optimization algorithms.  CoRR , abs/1707.06347. ", "page_idx": 20, "bbox": [71, 230.24749755859375, 290, 284.14752197265625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 254, "type": "text", "text": "Omar Shaikh, Hongxin Zhang, William Held, Michael Bernstein, and Diyi Yang. 2023. On second thought, let’s not think step by step! Bias and toxicity in zero-shot reasoning. In  Proceed- ings of the 61st Annual Meeting of the Asso- ciation for Computational Linguistics (ACL) , pages 4454–4470.  https://doi.org/10 .18653/v1/2023.acl-long.244 ", "page_idx": 20, "bbox": [71, 289.2977294921875, 290, 397.3089599609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 255, "type": "text", "text": "Noah Shinn, Federico Cassano, Beck Labash, Ashwin Gopinath, Karthik Narasimhan, and Shunyu Yao. 2023. Reflexion: Language agents with verbal reinforcement learning.  CoRR , abs/2303.11366. ", "page_idx": 20, "bbox": [71, 402.54718017578125, 290, 470.00140380859375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 256, "type": "text", "text": "Anton Sinitsin, Vsevolod Plo k hot n yuk, Dmitry V. Pyrkin, Sergei Popov, and Artem Babenko. 2020. Editable neural networks. In  Proceedings of the 8th International Conference on Learn- ing Representations (ICLR) . ", "page_idx": 20, "bbox": [71, 475.151611328125, 290, 542.6058349609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 257, "type": "text", "text": "Neha Srikanth and Rachel Rudinger. 2022. Partial- input baselines show that NLI models can ig- nore context, but they don’t. In  Proceedings of the 2022 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies (NAACL-HLT) , pages 4753–4763.  https:// doi.org/10.18653/v1/2022.naacl-main .350 ", "page_idx": 20, "bbox": [71, 547.7472534179688, 290, 669.3126220703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 258, "type": "text", "text": "Kaya Stechly, Matthew Marquez, and Subbarao Kam b ham pati. 2023. GPT-4 doesn’t know it’s wrong: An analysis of iterative prompting for reasoning problems.  CoRR , abs/2310.12397. ", "page_idx": 20, "bbox": [71, 674.5508422851562, 290, 728.4508056640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 259, "type": "text", "text": "Mirac Suzgun, Nathan Scales, Nathanael Sch¨ arli, Sebastian Gehrmann, Yi Tay, Hyung Won ", "page_idx": 20, "bbox": [71, 733.5020141601562, 290, 760.4102172851562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 260, "type": "text", "text": "Chung, Aakanksha Chowdhery, Quoc Le, Ed Chi, Denny Zhou, and Jason Wei. 2023. Chal- lenging big-bench tasks and whether chain- of-thought can solve them. In  Findings of the Association for Computational Linguistics: ACL 2023 , pages 13003–13051.  https://doi .org/10.18653/v1/2023.findings-acl.824 ", "page_idx": 20, "bbox": [318, 57.9512939453125, 528, 152.41712951660156], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 261, "type": "text", "text": "Oyvind Tafjord, Bhavana Dalvi, and Peter Clark. 2021. Proof Writer: Generating implications, proofs, and abductive statements over natu- ral language. In  Findings of the Association for Computational Linguistics: ACL-IJCNLP 2021 , pages 3621–3634.  https://doi.org/10 .18653/v1/2021.findings-acl.317 ", "page_idx": 20, "bbox": [307, 163.7933349609375, 528, 258.2503662109375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 262, "type": "text", "text": "Oyvind Tafjord, Bhavana Dalvi Mishra, and Peter Clark. 2022. Entailer: Answering questions with faithful and truthful chains of reasoning. In  Proceedings of the 2022 Conference on Em- pirical Methods in Natural Language Process- ing (EMNLP) , pages 2078–2093.  https:// doi.org/10.18653/v1/2022.emnlp-main .134 ", "page_idx": 20, "bbox": [307, 269.6265869140625, 528, 377.6190185546875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 263, "type": "text", "text": "Ryutaro Tanno, Melanie F. Pradier, Aditya V. Nori, and Yingzhen Li. 2022. Repairing neu- ral networks by leaving the right past behind. In  Proceedings of the 2022 Annual Confer- ence on Neural Information Processing Sys- tems (NeurIPS) . ", "page_idx": 20, "bbox": [307, 388.9952392578125, 528, 469.994873046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 264, "type": "text", "text": "Gladys Tyen, Hassan Mansoor, Peter Chen, Tony Mak, and Victor Carbune. 2023. LLMs cannot find reasoning errors, but can correct them! CoRR , abs/2311.08516. ", "page_idx": 20, "bbox": [307, 481.2742614746094, 528, 535.1830444335938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 265, "type": "text", "text": "Jonathan Uesato, Nate Kushman, Ramana Kumar, H. Francis Song, Noah Y. Siegel, Lisa Wang, Antonia Creswell, Geoffrey Irving, and Irina Higgins. 2022. Solving math word problems with process- and outcome-based feedback. CoRR , abs/2211.14275. ", "page_idx": 20, "bbox": [307, 546.4624633789062, 528, 627.4708862304688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 266, "type": "text", "text": "Inigo Jauregi Unanue, Jacob Parnell, and Massimo Piccardi. 2021. Berttune: Fine-tuning neural machine translation with bertscore. In  Pro- ceedings of the 59th Annual Meeting of the Association for Computational Linguistics and the 11th International Joint Conference on Natural Language Processing (ACL/IJCNLP) , pages 915–924.  https://doi.org/10.18653 /v1/2021.acl-short.115 ", "page_idx": 20, "bbox": [307, 638.7503051757812, 528, 760.315673828125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 267, "type": "text", "text": "Karthik Valmeekam, Matthew Marquez, and Subbarao Kam b ham pati. 2023. Can large lan- guage models really improve by self-critiquing their own plans?  CoRR , abs/2310.08118. ", "page_idx": 21, "bbox": [71, 57.93902587890625, 290, 111.84783935546875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 268, "type": "text", "text": "Neeraj Varshney, Wenlin Yao, Hongming Zhang, Jianshu Chen, and Dong Yu. 2023. A stitch in time saves nine: Detecting and mitigat- ing hallucinations of LLMs by validating low- confidence generation.  CoRR , abs/2307.03987. ", "page_idx": 21, "bbox": [71, 117.6910400390625, 290, 185.136474609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 269, "type": "text", "text": "David Wan and Mohit Bansal. 2022. Fact pegasus: Factuality-aware pre-training and fine-tuning for abstract ive sum mari z ation. In  Proceedings of the 2022 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies (NAACL-HLT) , pages 1010–1028.  https:// doi.org/10.18653/v1/2022.naacl-main .74 ", "page_idx": 21, "bbox": [71, 190.97967529296875, 290, 312.54510498046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 270, "type": "text", "text": "Boxin Wang, Weixin Chen, Hengzhi Pei, Chulin Xie, Mintong Kang, Chenhui Zhang, Chejian Xu, Zidi Xiong, Ritik Dutta, Rylan Schaeffer, Sang T. Truong, Simran Arora, Mantas Mazeika, Dan Hendrycks, Zinan Lin, Yu Cheng, Sanmi Koyejo, Dawn Song, and Bo Li. 2023a. Decoding trust: A comprehensive as- sessment of trustworthiness in GPT models. CoRR , abs/2306.11698. ", "page_idx": 21, "bbox": [71, 318.476318359375, 290, 440.1297607421875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 271, "type": "text", "text": "Haotian Wang, Xiyuan Du, Weijiang Yu, Qianglong Chen, Kun Zhu, Zheng Chu, Lian Yan, and Yi Guan. 2023b. Apollo’s oracle: Retrieval-augmented reasoning in multi-agent debates.  CoRR , abs/2312.04854. ", "page_idx": 21, "bbox": [71, 445.97296142578125, 290, 513.4271850585938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 272, "type": "text", "text": "Liyuan Wang, Xingxing Zhang, Hang Su, and Jun Zhu. 2023c. A comprehensive survey of continual learning: Theory, method and appli- cation.  CoRR , abs/2302.00487. ", "page_idx": 21, "bbox": [71, 519.2615356445312, 290, 573.1703491210938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 273, "type": "text", "text": "Tong Wang, Ping Chen, and Boyang Li. 2017. Predicting the quality of short narratives from social media. In  Proceedings of the Twenty- Sixth International Joint Conference on Arti- ficial Intelligence (IJCAI) , pages 3859–3865. https://doi.org/10.24963/ijcai.2017 /539", "page_idx": 21, "bbox": [71, 579.0136108398438, 290, 673.4793701171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 274, "type": "text", "text": "Jason Wei, Yi Tay, Rishi Bommasani, Colin Raffel, Barret Zoph, Sebastian Borgeaud, Dani Yogatama, Maarten Bosma, Denny Zhou, Donald Metzler, Ed H. Chi, Tatsunori Hashimoto, Oriol Vinyals, Percy Liang, Jeff Dean, and William Fedus. 2022a. Emergent ", "page_idx": 21, "bbox": [71, 679.4017944335938, 290, 760.41015625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 275, "type": "text", "text": "abilities of large language models.  CoRR , abs/2206.07682. ", "page_idx": 21, "bbox": [318, 57.95123291015625, 526, 84.76043701171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 276, "type": "text", "text": "Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, Brian Ichter, Fei Xia, Ed H. Chi, Quoc V. Le, and Denny Zhou. 2022b. Chain-of-thought prompting elicits reasoning in large language models. In  Proceedings of the Annual Conference on Neural Information Processing Systems (NeurIPS) . ", "page_idx": 21, "bbox": [307, 93.29425048828125, 526, 187.84808349609375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 277, "type": "text", "text": "Sean Welleck, Ximing Lu, Peter West, Faeze Brahman, Tianxiao Shen, Daniel Khashabi, and Yejin Choi. 2023. Generating sequences by learning to self-correct. In  Proceedings of The 11th International Conference on Learning Representations (ICLR) . ", "page_idx": 21, "bbox": [307, 196.38189697265625, 526, 277.38153076171875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 278, "type": "text", "text": "Yixuan Weng, Minjun Zhu, Fei Xia, Bin Li, Shizhu He, Kang Liu, and Jun Zhao. 2023. Large language models are better reasoners with self-verification.  CoRR , abs/2212.09561. https://doi.org/10.18653/v1/2023 .findings-emnlp.167 ", "page_idx": 21, "bbox": [307, 285.92413330078125, 526, 366.83575439453125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 279, "type": "text", "text": "Zeqiu Wu, Yushi Hu, Weijia Shi, Nouha Dziri, Alane Suhr, Prithviraj Amman a bro lu, Noah A. Smith, Mari Ostendorf, and Hannaneh Hajishirzi. 2023a. Fine-grained human feed- back gives better rewards for language model training.  CoRR , abs/2306.01693. ", "page_idx": 21, "bbox": [307, 375.4575500488281, 526, 456.4571838378906], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 280, "type": "text", "text": "Zhaofeng Wu, Linlu Qiu, Alexis Ross, Ekin Aky¨ urek, Boyuan Chen, Bailin Wang, Najoung Kim, Jacob Andreas, and Yoon Kim. 2023b. Reasoning or reciting? Exploring the capabili- ties and limitations of language models through counter factual tasks.  CoRR , abs/2307.02477. ", "page_idx": 21, "bbox": [307, 464.9997863769531, 526, 545.9808959960938], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 281, "type": "text", "text": "Yuxi Xie, Kenji Kawaguchi, Yiran Zhao, Xu Zhao, Min-Yen Kan, Junxian He, and Qizhe Xie. 2023. Decomposition enhances reason- ing via self-evaluation guided decoding.  CoRR , abs/2305.00633. ", "page_idx": 21, "bbox": [307, 554.5147094726562, 526, 621.9689331054688], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 282, "type": "text", "text": "Wenda Xu, Danqing Wang, Liangming Pan, Zhenqiao Song, Markus Freitag, William Yang Wang, and Lei Li. 2023. INSTRUCTS CORE: Towards explain able text generation evalua- tion with automatic feedback.  CoRR , abs/2305 .14282.  https://doi.org/10.18653/v1 /2023.emnlp-main.365 ", "page_idx": 21, "bbox": [307, 630.502685546875, 526, 724.968505859375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 283, "type": "text", "text": "Xiaojun Xu, Chang Liu, and Dawn Song. 2017. Sqlnet: Generating structured queries from ", "page_idx": 21, "bbox": [307, 733.5902709960938, 526, 760.3994750976562], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 284, "type": "text", "text": "natural language without reinforcement learn- ing.  CoRR , abs/1711.04436. ", "page_idx": 22, "bbox": [82, 57.93902587890625, 290, 84.74822998046875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 285, "type": "text", "text": "Hao Yan, Saurabh Srivastava, Yintao Tai, Sida I. Wang, Wen-tau Yih, and Ziyu Yao. 2023. Learning to simulate natural language feedback for interactive semantic parsing. In  Proceedings of the 61th Annual Meeting of the Associ- ation for Computational Linguistics (ACL) , pages 3149–3170.  https://doi.org/10 .18653/v1/2023.acl-long.177 ", "page_idx": 22, "bbox": [71, 90.0238037109375, 290, 198.03504943847656], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 286, "type": "text", "text": "Kaiyu Yang, Jia Deng, and Danqi Chen. 2022a. Generating natural language proofs with verifier-guided search. In  Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing (EMNLP) , pages 89–105.  https://doi.org/10.18653 /v1/2022.emnlp-main.7 ", "page_idx": 22, "bbox": [71, 203.39862060546875, 290, 297.86444091796875], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 287, "type": "text", "text": "Kevin Yang and Dan Klein. 2021. FUDGE: Controlled text generation with future discrim- inators. In  Proceedings of the 2021 Confer- ence of the North American Chapter of the Association for Computational Linguistics: Hu- man Language Technologies (NAACL-HLT) , pages 3511–3535.  https://doi.org/10 .18653/v1/2021.naacl-main.276 ", "page_idx": 22, "bbox": [71, 303.22802734375, 290, 411.2392578125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 288, "type": "text", "text": "Kevin Yang, Yuandong Tian, Nanyun Peng, and Dan Klein. 2022b. Re3: Generating longer stories with recursive re prompting and revision. In  Proceedings of the 2022 Confer- ence on Empirical Methods in Natural Lan- guage Processing (EMNLP) , pages 4393–4479. https://doi.org/10.18653/v1/2022 .emnlp-main.296 ", "page_idx": 22, "bbox": [71, 416.6028747558594, 290, 524.6140747070312], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 289, "type": "text", "text": "Shunyu Yao, Dian Yu, Jeffrey Zhao, Izhak Shafran, Thomas L. Griffiths, Yuan Cao, and Karthik Narasimhan. 2023a. Tree of thoughts: Deliberate problem solving with large language models.  CoRR , abs/2305.10601. ", "page_idx": 22, "bbox": [71, 529.9777221679688, 290, 597.4319458007812], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 290, "type": "text", "text": "Yunzhi Yao, Peng Wang, Bozhong Tian, Siyuan Cheng, Zhoubo Li, Shumin Deng, Huajun Chen, and Ningyu Zhang. 2023b. Editing large language models: Problems, methods, and op- port unities.  CoRR , abs/2305.13172. ", "page_idx": 22, "bbox": [71, 602.70751953125, 290, 670.1617431640625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 291, "type": "text", "text": "Seonghyeon Ye, Yongrae Jo, Doyoung Kim, Sungdong Kim, Hyeonbin Hwang, and Minjoon Seo. 2023. Selfee: Iterative self-revising LLM empowered by self-feedback generation. Blog post. ", "page_idx": 22, "bbox": [71, 675.4373168945312, 290, 742.8827514648438], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 292, "type": "text", "text": "Tao Yu, Michihiro Yasunaga, Kai Yang, Rui Zhang, Dongxu Wang, Zifan Li, and Dragomir Radev. 2018. Syntax SQL Net: Syn- tax tree networks for complex and cross- domain text-to-SQL task. In  Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing (EMNLP) , pages 1653–1663.  https://doi.org/10 .18653/v1/D18-1193 ", "page_idx": 22, "bbox": [307, 57.94793701171875, 526, 179.5133819580078], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 293, "type": "text", "text": "Wenhao Yu, Zhihan Zhang, Zhenwen Liang, Meng Jiang, and Ashish Sabharwal. 2023. Im- proving language models via plug-and-play retrieval feedback.  CoRR , abs/2305.14002. ", "page_idx": 22, "bbox": [307, 185.87689208984375, 526, 239.77691650390625], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 294, "type": "text", "text": "Weizhe Yuan, Kyunghyun Cho, and Jason Weston. 2023. System-level natural language feedback.  CoRR , abs/2306.13588. ", "page_idx": 22, "bbox": [307, 246.05242919921875, 526, 286.40704345703125], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 295, "type": "text", "text": "Eric Zelikman, Yuhuai Wu, Jesse Mu, and Noah D. Goodman. 2022. Star: Boots trapping rea- soning with reasoning. In  Proceedings of the Annual Conference on Neural Information Pro- cessing Systems (NeurIPS) . ", "page_idx": 22, "bbox": [307, 292.67266845703125, 526, 360.12689208984375], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 296, "type": "text", "text": "Kechi Zhang, Zhuo Li, Jia Li, Ge Li, and Zhi Jin. 2023a. Self-edit: Fault-aware code edi- tor for code generation.  CoRR , abs/2305.04087. https://doi.org/10.18653/v1/2023 .acl-long.45 ", "page_idx": 22, "bbox": [307, 366.4023742675781, 526, 433.7685852050781], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 297, "type": "text", "text": "Kexun Zhang, Danqing Wang, Jingtao Xia, William Yang Wang, and Lei Li. 2023b. Algo: Synthesizing algorithmic programs with gener- ated oracle verifiers.  CoRR , abs/2305.14591. ", "page_idx": 22, "bbox": [307, 440.419189453125, 526, 494.3116149902344], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 298, "type": "text", "text": "Muru Zhang, Ofir Press, William Merrill, Alisa Liu, and Noah A. Smith. 2023c. How language model hallucinations can snowball.  CoRR , abs/2305.13534. ", "page_idx": 22, "bbox": [307, 500.57720947265625, 526, 554.4860229492188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 299, "type": "text", "text": "Xinyu Zhu, Junjie Wang, Lin Zhang, Yuxiang Zhang, Yongfeng Huang, Ruyi Gan, Jiaxing Zhang, and Yujiu Yang. 2023. Solving math word problems via cooperative reasoning in- duced language models. In  Processing s of the 61th Annual Meeting of the Associa- tion for Computational Linguistics (ACL) , pages 4471–4485.  https://doi.org/10 .18653/v1/2023.acl-long.245 ", "page_idx": 22, "bbox": [307, 560.7615356445312, 526, 682.3180541992188], "page_size": [595.2760009765625, 841.8900146484375]}
{"layout": 300, "type": "text", "text": "Terry Yue Zhuo, Yujin Huang, Chunyang Chen, and Zhenchang Xing. 2023. Red teaming chat- gpt via jail breaking: Bias, robustness, reliability and toxicity.  CoRR , abs/2301.12867. ", "page_idx": 22, "bbox": [307, 688.8795776367188, 526, 742.7796020507812], "page_size": [595.2760009765625, 841.8900146484375]}
